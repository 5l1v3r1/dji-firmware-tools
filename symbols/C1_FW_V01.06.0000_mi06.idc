//
// +-------------------------------------------------------------------------+
// |   This file has been generated by The Interactive Disassembler (IDA)    |
// |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  SetCharPrm(INF_GENFLAGS, INFFL_LOADIDC|GetCharPrm(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  ApplyStrucTInfos();   // structure type infos
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  SetCharPrm(INF_GENFLAGS, ~INFFL_LOADIDC&GetCharPrm(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        DeleteAll();    // purge database
	SetPrcsr("ARM");
	SetCharPrm(INF_COMPILER, 6);
	StringStp(0xA);
	Tabs(1);
	Comments(0);
	Voids(0);
	XrefShow(2);
	AutoShow(1);
	Indent(16);
	CmtIndent(40);
	TailDepth(0x10);
	LoadTil("armv12");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	SetSelector(0X1,0);
	SetSelector(0X2,0);
	SetSelector(0X3,0);
	SetSelector(0X4,0);
	SetSelector(0X5,0);
	;
	SegCreate(0,0X1CE50,0X1,1,8,2);
	SegRename(0,".text");
	SegClass (0,"CODE");
	SegDefReg(0x0,"T",0x0);
	SegDefReg(0x0,"DS",0x2);
	SetSegmentType(0,2);
	SegCreate(0X1CE50,0X25EA8,0X2,1,3,2);
	SegRename(0X1CE50,".data");
	SegClass (0X1CE50,"DATA");
	SegDefReg(0x1CE50,"T",0x0);
	SegDefReg(0x1CE50,"DS",0x2);
	SetSegmentType(0X1CE50,3);
	SegCreate(0X10000000,0X10008000,0X3,1,8,2);
	SegRename(0X10000000,".bss");
	SegClass (0X10000000,"BSS");
	SegDefReg(0x10000000,"T",0x0);
	SegDefReg(0x10000000,"DS",0x2);
	SetSegmentType(0X10000000,9);
	SegCreate(0X40000000,0X40050000,0X5,1,8,2);
	SegRename(0X40000000,".bss2");
	SegClass (0X40000000,"BSS");
	SegDefReg(0x40000000,"T",0x0);
	SegDefReg(0x40000000,"DS",0x2);
	SetSegmentType(0X40000000,9);
	SegCreate(0XE0000000,0XE0010000,0X4,1,8,2);
	SegRename(0XE0000000,".bss3");
	SegClass (0XE0000000,"BSS");
	SegDefReg(0xE0000000,"T",0x0);
	SegDefReg(0xE0000000,"DS",0x2);
	SetSegmentType(0XE0000000,9);
	LowVoids(0x20);
	HighVoids(0xE0010000);
}

static Enums_0(id) {

	id = AddEnum(-1,"FunctionalState",0x1100000);
	AddConstEx(id,"DISABLE",	0,	-1);
	AddConstEx(id,"ENABLE",	0X1,	-1);
	id = AddEnum(-1,"IntStatus",0x1100000);
	AddConstEx(id,"RESET",	0,	-1);
	AddConstEx(id,"SET",	0X1,	-1);
	id = AddEnum(-1,"RTC_CCR",0x1100000);
	AddConstEx(id,"RTC_CCR_CLKEN",	0X1,	-1);
	AddConstEx(id,"RTC_CCR_CTCRST",	0X2,	-1);
	AddConstEx(id,"RTC_CCR_CCALEN",	0X10,	-1);
	AddConstEx(id,"RTC_CCR_BITMASK",	0X13,	-1);
	id = AddEnum(-1,"ADC_TYPE_INT_OPT",0x1100000);
	id = AddEnum(-1,"CLKPWR_PCLKSEL",0x2200000);
	AddConstEx(id,"CLKPWR_PCLKSEL_WDT",	0,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_TIMER0",	0X2,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_TIMER1",	0X4,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_UART0",	0X6,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_UART1",	0X8,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_PWM1",	0XC,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_I2C0",	0XE,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_SPI",	0X10,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_SSP1",	0X14,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_DAC",	0X16,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_ADC",	0X18,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_CAN1",	0X1A,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_CAN2",	0X1C,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_ACF",	0X1E,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_QEI",	0X20,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_PCB",	0X24,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_I2C1",	0X26,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_SSP0",	0X2A,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_TIMER2",	0X2C,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_TIMER3",	0X2E,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_UART2",	0X30,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_UART3",	0X32,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_I2C2",	0X34,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_I2S",	0X36,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_RIT",	0X3A,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_SYSCON",	0X3C,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_MC",	0X3E,	-1);
	id = AddEnum(-1,"WDT_MODE_OPT",0x1100000);
	AddConstEx(id,"WDT_MODE_INT_ONLY",	0,	-1);
	AddConstEx(id,"WDT_MODE_RESET",	0X1,	-1);
	id = AddEnum(-1,"WDT_CLK_OPT",0x1100000);
	AddConstEx(id,"WDT_CLKSRC_IRC",	0,	-1);
	AddConstEx(id,"WDT_CLKSRC_PCLK",	0X1,	-1);
	AddConstEx(id,"WDT_CLKSRC_RTC",	0X2,	-1);
	id = AddEnum(-1,"CLKPWR_PCLKSEL_CCLK",0x1100000);
	AddConstEx(id,"CLKPWR_PCLKSEL_CCLK_DIV_4",	0,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_CCLK_DIV_1",	0X1,	-1);
	AddConstEx(id,"CLKPWR_PCLKSEL_CCLK_DIV_2",	0X2,	-1);
	id = AddEnum(-1,"OS_ERR",0x2200000);
	AddConstEx(id,"OS_ERR_NONE",	0,	-1);
	AddConstEx(id,"OS_ERR_A",	0X2710,	-1);
	AddConstEx(id,"OS_ERR_ACCEPT_ISR",	0X2711,	-1);
	AddConstEx(id,"OS_ERR_B",	0X2AF8,	-1);
	AddConstEx(id,"OS_ERR_C",	0X2EE0,	-1);
	AddConstEx(id,"OS_ERR_CREATE_ISR",	0X2EE1,	-1);
	AddConstEx(id,"OS_ERR_D",	0X32C8,	-1);
	AddConstEx(id,"OS_ERR_DEL_ISR",	0X32C9,	-1);
	AddConstEx(id,"OS_ERR_E",	0X36B0,	-1);
	AddConstEx(id,"OS_ERR_F",	0X3A98,	-1);
	AddConstEx(id,"OS_ERR_FATAL_RETURN",	0X3A99,	-1);
	AddConstEx(id,"OS_ERR_FLAG_GRP_DEPLETED",	0X3AFD,	-1);
	AddConstEx(id,"OS_ERR_FLAG_NOT_RDY",	0X3AFE,	-1);
	AddConstEx(id,"OS_ERR_FLAG_PEND_OPT",	0X3AFF,	-1);
	AddConstEx(id,"OS_ERR_FLUSH_ISR",	0X3B00,	-1);
	AddConstEx(id,"OS_ERR_G",	0X3E80,	-1);
	AddConstEx(id,"OS_ERR_H",	0X4268,	-1);
	AddConstEx(id,"OS_ERR_I",	0X4650,	-1);
	AddConstEx(id,"OS_ERR_J",	0X4A38,	-1);
	AddConstEx(id,"OS_ERR_K",	0X4E20,	-1);
	AddConstEx(id,"OS_ERR_L",	0X5208,	-1);
	AddConstEx(id,"OS_ERR_M",	0X55F0,	-1);
	AddConstEx(id,"OS_ERR_MEM_CREATE_ISR",	0X56B9,	-1);
	AddConstEx(id,"OS_ERR_MSG_POOL_EMPTY",	0X571D,	-1);
	AddConstEx(id,"OS_ERR_MUTEX_NOT_OWNER",	0X5781,	-1);
	AddConstEx(id,"OS_ERR_P",	0X61A8,	-1);
	AddConstEx(id,"OS_ERR_POST_NULL_PTR",	0X620D,	-1);
	AddConstEx(id,"OS_ERR_PRIO_EXIST",	0X6271,	-1);
	AddConstEx(id,"OS_ERR_PTR_INVALID",	0X62D5,	-1);
	AddConstEx(id,"OS_ERR_Q",	0X6590,	-1);
	AddConstEx(id,"OS_ERR_Q_FULL",	0X6591,	-1);
	AddConstEx(id,"OS_ERR_Q_EMPTY",	0X6592,	-1);
	AddConstEx(id,"OS_ERR_Q_MAX",	0X6593,	-1);
	AddConstEx(id,"OS_ERR_Q_SIZE",	0X6594,	-1);
	id = AddEnum(-1,"OS_PRIO",0x1100000);
	id = AddEnum(-1,"OS_OPT",0x1100000);
	AddConstEx(id,"OS_OPT_NONE",	0,	-1);
	AddConstEx(id,"OS_OPT_DEL_ALWAYS",	0X1,	-1);
	AddConstEx(id,"OS_OPT_PEND_FLAG_CLR_ANY",	0X2,	-1);
	AddConstEx(id,"OS_OPT_PEND_FLAG_SET_ALL",	0X4,	-1);
	AddConstEx(id,"OS_OPT_PEND_FLAG_SET_ANY",	0X8,	-1);
	AddConstEx(id,"OS_OPT_PEND_FLAG_CONSUME",	0X100,	-1);
	AddConstEx(id,"OS_OPT_PEND_NON_BLOCKING",	0X8000,	-1);
	id = AddEnum(-1,"CPU_STK",0x1100000);
	SetEnumCmt(id,"Defines CPU stack word size (in octets).",1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        BeginTypeUpdating(UTP_ENUM);
	id = Enums_0(id);
        EndTypeUpdating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = GetStrucIdByName("LPC_RTC_TypeDef");
	id = GetStrucIdByName("RTC_TIME_Type");
	id = GetStrucIdByName("LPC_ADC_TypeDef");
	id = GetStrucIdByName("OS_TCB");
	id = GetStrucIdByName("OS_MSG_Q");
	id = GetStrucIdByName("OS_MSG_POOL");
	id = GetStrucIdByName("OS_RDY_LIST");
	SetType(GetMemberId(id, 0x0), "struct OS_TCB *");
	SetType(GetMemberId(id, 0x4), "struct OS_TCB *");
	id = GetStrucIdByName("OS_PEND_LIST");
	id = GetStrucIdByName("OS_TICK_SPOKE");
	id = GetStrucIdByName("OS_SEM");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = AddStrucEx(-1,"LPC_RTC_TypeDef",0);
	id = AddStrucEx(-1,"RTC_TIME_Type",0);
	id = AddStrucEx(-1,"LPC_ADC_TypeDef",0);
	id = AddStrucEx(-1,"OS_TCB",0);
	id = AddStrucEx(-1,"OS_MSG_Q",0);
	id = AddStrucEx(-1,"OS_MSG_POOL",0);
	id = AddStrucEx(-1,"OS_RDY_LIST",0);
	id = AddStrucEx(-1,"OS_PEND_LIST",0);
	id = AddStrucEx(-1,"OS_TICK_SPOKE",0);
	id = AddStrucEx(-1,"OS_SEM",0);
	
	id = GetStrucIdByName("LPC_RTC_TypeDef");
	mid = AddStrucMember(id,"ILR",	0,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED0",	0X1,	0x000400,	-1,	7);
	mid = AddStrucMember(id,"CCR",	0X8,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED1",	0X9,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"CIIR",	0XC,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED2",	0XD,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"AMR",	0X10,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED3",	0X11,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"CTIME0",	0X14,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"CTIME1",	0X18,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"CTIME2",	0X1C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"SEC",	0X20,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED4",	0X21,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"MIN",	0X24,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED5",	0X25,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"HOUR",	0X28,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED6",	0X29,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"DOM",	0X2C,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED7",	0X2D,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"DOW",	0X30,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED8",	0X31,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"DOY",	0X34,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"RESERVED9",	0X36,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"MONTH",	0X38,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED10",	0X39,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"YEAR",	0X3C,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"RESERVED11",	0X3E,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"CALIBRATION",	0X40,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"GPREG0",	0X44,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"GPREG1",	0X48,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"GPREG2",	0X4C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"GPREG3",	0X50,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"GPREG4",	0X54,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"RTC_AUXEN",	0X58,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED12",	0X59,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"RTC_AUX",	0X5C,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED13",	0X5D,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"ALSEC",	0X60,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED14",	0X61,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"ALMIN",	0X64,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED15",	0X65,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"ALHOUR",	0X68,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED16",	0X69,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"ALDOM",	0X6C,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED17",	0X6D,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"ALDOW",	0X70,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED18",	0X71,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"ALDOY",	0X74,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"RESERVED19",	0X76,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"ALMON",	0X78,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"RESERVED20",	0X79,	0x000400,	-1,	3);
	mid = AddStrucMember(id,"ALYEAR",	0X7C,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"RESERVED21",	0X7E,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"ERSTATUS",	0X80,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ERCONTROL",	0X84,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ERCOUNTERS",	0X88,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"RESERVED22",	0X8C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ERFIRSTSTAMP0",	0X90,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ERFIRSTSTAMP1",	0X94,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ERFIRSTSTAMP2",	0X98,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"RESERVED23",	0X9C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ERLASTSTAMP0",	0XA0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ERLASTSTAMP1",	0XA4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ERLASTSTAMP2",	0XA8,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("RTC_TIME_Type");
	mid = AddStrucMember(id,"SEC",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"MIN",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"HOUR",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"DOM",	0XC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"DOW",	0X10,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"DOY",	0X14,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"MONTH",	0X18,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"YEAR",	0X1C,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("LPC_ADC_TypeDef");
	mid = AddStrucMember(id,"ADCR",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ADGDR",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"RESERVED0",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ADINTEN",	0XC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ADDR0",	0X10,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ADDR1",	0X14,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ADDR2",	0X18,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ADDR3",	0X1C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ADDR4",	0X20,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ADDR5",	0X24,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ADDR6",	0X28,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ADDR7",	0X2C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ADSTAT",	0X30,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ADTRM",	0X34,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("OS_TCB");
	mid = AddStrucMember(id,"StkPtr",	0,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"ExtPtr",	0X4,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"StkLimitPtr",	0X8,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"NextPtr",	0XC,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"PrevPtr",	0X10,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"TickNextPtr",	0X14,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"TickPrevPtr",	0X18,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"TickSpokePtr",	0X1C,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"NamePtr",	0X20,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"StkBasePtr",	0X24,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"TaskEntryAddr",	0X28,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"TaskEntryArg",	0X2C,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"PendDataTblPtr",	0X30,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"PendOn",	0X34,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"PendStatus",	0X35,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"TaskState",	0X36,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"Prio",	0X37,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"StkSize",	0X38,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"Opt",	0X3C,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"PendDataTblEntries",	0X3E,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"TS",	0X40,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"SemCtr",	0X44,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"TickCtrPrev",	0X48,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"TickCtrMatch",	0X4C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"TickRemain",	0X50,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"TimeQuanta",	0X54,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"TimeQuantaCtr",	0X58,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_60",	0X60,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_64",	0X64,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_68",	0X68,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_6C",	0X6C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_70",	0X70,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_74",	0X74,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_78",	0X78,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_7C",	0X7C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"CtxSwCtr",	0X80,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"CyclesDelta",	0X84,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"CyclesStart",	0X88,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"CyclesTotal",	0X8C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_90",	0X90,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_94",	0X94,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_98",	0X98,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"IntDisTimeMax",	0X9C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"SchedLockTimeMax",	0XA0,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("OS_MSG_Q");
	mid = AddStrucMember(id,"InPtr",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"OutPtr",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"NbrEntriesSize",	0X8,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"NbrEntries",	0XA,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"NbrEntriesMax",	0XC,	0x10000400,	-1,	2);
	
	id = GetStrucIdByName("OS_MSG_POOL");
	mid = AddStrucMember(id,"NextPtr",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"NbrFree",	0X4,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"NbrUsed",	0X6,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"NbrUsedMax",	0X8,	0x000400,	-1,	1);
	
	id = GetStrucIdByName("OS_RDY_LIST");
	mid = AddStrucMember(id,"HeadPtr",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	SetMemberComment(id,	0,	"Pointer to task that will run at selected priority",	1);
	mid = AddStrucMember(id,"TailPtr",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	SetMemberComment(id,	0X4,	"Pointer to last task          at selected priority",	1);
	mid = AddStrucMember(id,"NbrEntries",	0X8,	0x20000400,	-1,	4);
	SetMemberComment(id,	0X8,	"Number of entries             at selected priority",	1);
	
	id = GetStrucIdByName("OS_TICK_SPOKE");
	mid = AddStrucMember(id,"FirstPtr",	0,	0x20000400,	-1,	4);
	SetMemberComment(id,	0,	"Pointer to list of tasks in tick spoke",	1);
	mid = AddStrucMember(id,"NbrEntries",	0X4,	0x10000400,	-1,	2);
	SetMemberComment(id,	0X4,	"Current number of entries in the tick spoke",	1);
	mid = AddStrucMember(id,"NbrEntriesMax",	0X6,	0x10000400,	-1,	2);
	SetMemberComment(id,	0X6,	"Peak number of entries in the tick spoke",	1);
	
	id = GetStrucIdByName("OS_PEND_LIST");
	mid = AddStrucMember(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_8",	0X8,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("OS_SEM");
	mid = AddStrucMember(id,"Type",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"NamePtr",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"PendList",	0X8,	0x60000400,	GetStrucIdByName("OS_PEND_LIST"),	12);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        BeginTypeUpdating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	ExtLinA		(0,	0,	"; File Name   : D:\\source\\python\\phantom-firmware-tools\\c1_txpower_check\\C1_FW_V01.06.0000_mi06.bin");
	ExtLinA		(0,	1,	"; Format      : Binary file");
	ExtLinA		(0,	2,	"; Base Address: 0000h Range: 0000h - 25EA8h Loaded length: 25EA8h");
	ExtLinA		(0,	3,	"; Options     : EF_ARM_VFP_FLOAT");
	ExtLinA		(0,	4,	"; EABI version: 5");
	ExtLinA		(0,	5,	"; ");
	MakeDword	(x=0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X4);
	MakeArray	(0X4,	0X32);
	MakeDword	(0XCC);
	MakeArray	(0XCC,	0X11);
	MakeDword	(0X110);
	MakeArray	(0X110,	0X1C);
	MakeCode	(0X180);
	MakeCode	(x=0X1AA);
	OpHex		(x,	1);
	MakeCode	(x=0X1F0);
	OpHex		(x,	1);
	MakeCode	(0X210);
	MakeCode	(0X230);
	MakeCode	(x=0X234);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X234,	"start");
	MakeDword	(x=0X244);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X248);
	MakeCode	(0X254);
	MakeCode	(x=0X262);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X26C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X276);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X27C);
	MakeCode	(x=0X280);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X28A);
	MakeCode	(x=0X28E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X294);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X296);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X298);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X29A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X29C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X29E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X2A0);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X2B0);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X2BE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X2C0);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X2D0);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X2D2);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X2DE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X2E0);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X2EE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X2F2);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X300);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X316);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X31A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X31E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X320);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X322);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X324);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X326);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X328);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X32A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X32C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X32E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X330);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X332);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X334);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X336);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X338);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X33A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X368);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X390);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X396);
	MakeCode	(x=0X39A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3A6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3AA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3CE);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X3D0);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X3DC);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X3DE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X400);
	OpStkvar	(x,	1);
	MakeCode	(x=0X406);
	OpStkvar	(x,	1);
	MakeCode	(x=0X40C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X412);
	OpStkvar	(x,	1);
	MakeCode	(x=0X418);
	OpStkvar	(x,	1);
	MakeCode	(x=0X41E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X424);
	OpStkvar	(x,	1);
	MakeCode	(x=0X42A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X430);
	OpStkvar	(x,	1);
	MakeCode	(x=0X436);
	OpStkvar	(x,	1);
	MakeCode	(x=0X43C);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X440);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X446);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X452);
	OpStkvar	(x,	1);
	MakeCode	(x=0X458);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X45A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X464);
	OpHex		(x,	1);
	MakeCode	(x=0X468);
	OpHex		(x,	1);
	MakeCode	(x=0X472);
	OpHex		(x,	1);
	MakeCode	(0X478);
	MakeCode	(x=0X486);
	OpStkvar	(x,	1);
	MakeCode	(x=0X488);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X490);
	OpStkvar	(x,	1);
	MakeCode	(x=0X494);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4A6);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X4A8);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X4AA);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X4AC);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X4B0);
	OpHex		(x,	1);
	MakeCode	(x=0X4B4);
	OpHex		(x,	1);
	MakeCode	(x=0X4B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4BA);
	OpHex		(x,	1);
	MakeCode	(x=0X4C0);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4C8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4CC);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4D6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4DA);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4E2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4E6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4EE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4F2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4FA);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4FE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X506);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X50A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X518);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X520);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X524);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X52C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X53A);
	OpHex		(x,	1);
	MakeCode	(x=0X548);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0X54C);
	OpStkvar	(x,	1);
	MakeCode	(0X556);
	MakeCode	(x=0X55C);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0X560);
	OpStkvar	(x,	1);
	MakeCode	(x=0X564);
	OpOff		(x,	1,	0X100005D8);
	OpOff		(x,	129,	0X100005D8);
	MakeCode	(x=0X568);
	OpStkvar	(x,	1);
	MakeCode	(x=0X56C);
	OpOff		(x,	1,	0X100005D8);
	OpOff		(x,	129,	0X100005D8);
	MakeCode	(0X574);
	MakeCode	(x=0X576);
	OpStkvar	(x,	1);
	MakeCode	(x=0X584);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0X586);
	OpStkvar	(x,	1);
	MakeCode	(x=0X58A);
	OpOff		(x,	1,	0X100005D8);
	OpOff		(x,	129,	0X100005D8);
	MakeCode	(x=0X58E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X592);
	OpOff		(x,	1,	0X100005D8);
	OpOff		(x,	129,	0X100005D8);
	MakeCode	(x=0X594);
	OpStkvar	(x,	1);
	MakeCode	(x=0X59A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5A6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X5AE);
	MakeCode	(0X5B0);
	MakeCode	(x=0X5B6);
	OpHex		(x,	1);
	MakeCode	(x=0X5BE);
	OpHex		(x,	1);
	MakeCode	(x=0X5D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5E2);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0X5F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X5FA,	"RTCx");
	MakeComm	(0X600,	"NewState");
	MakeComm	(0X602,	"RTCx");
	MakeComm	(0X60C,	"WDTMode");
	MakeComm	(0X60E,	"ClkSrc");
	MakeCode	(x=0X620);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(0X634);
	MakeDword	(x=0X63C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X640,	0X651);
	MakeName	(0X640,	"aSomethingChang");
	MakeByte	(0X651);
	MakeArray	(0X651,	0X3);
	MakeStr		(0X654,	0X65E);
	MakeName	(0X654,	"aNoChange");
	MakeArray	(0X65E,	0X2);
	MakeDword	(x=0X660);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X664);
	MakeDword	(x=0X668);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X668,	"RTCx");
	MakeDword	(0X66C);
	MakeDword	(0X670);
	MakeCode	(0X674);
	MakeCode	(x=0X676);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X67A);
	OpHex		(x,	1);
	MakeCode	(x=0X684);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X68E);
	OpHex		(x,	1);
	MakeCode	(x=0X69A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6A4);
	OpHex		(x,	1);
	MakeCode	(x=0X6B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6BA);
	OpHex		(x,	1);
	MakeCode	(x=0X6C6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6D0);
	OpHex		(x,	1);
	MakeCode	(x=0X6DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6E6);
	OpHex		(x,	1);
	MakeCode	(x=0X6F2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6FC);
	OpHex		(x,	1);
	MakeCode	(x=0X708);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X712);
	OpHex		(x,	1);
	MakeCode	(x=0X718);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X71C);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0X724);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0X728);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X732);
	OpHex		(x,	1);
	MakeCode	(x=0X738);
	OpOff		(x,	1,	0X1000000E);
	OpOff		(x,	129,	0X1000000E);
	MakeCode	(x=0X73E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X748);
	OpHex		(x,	1);
	MakeCode	(0X750);
	MakeCode	(x=0X798);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X798,	"start_2");
	MakeComm	(0X79A,	"prio");
	MakeCode	(x=0X7A2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7BE);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeComm	(0X7C2,	"time_quanta");
	MakeCode	(x=0X7C2);
	OpStkvar	(x,	1);
	MakeComm	(0X7C4,	"p_ext");
	MakeCode	(x=0X7C4);
	OpStkvar	(x,	1);
	MakeComm	(0X7C6,	"opt");
	MakeCode	(x=0X7CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7DE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X7E0,	"stk_size");
	MakeComm	(0X7E4,	"p_arg");
	MakeComm	(0X7E6,	"p_task");
	MakeCode	(x=0X7E6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X7EA,	"p_tcb");
	MakeCode	(x=0X7F0);
	OpStkvar	(x,	1);
	MakeComm	(0X7F2,	"time_quanta");
	MakeCode	(x=0X7F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X800);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X802,	"stk_size");
	MakeComm	(0X806,	"p_arg");
	MakeComm	(0X808,	"p_task");
	MakeCode	(x=0X808);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X80A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X80C,	"p_tcb");
	MakeComm	(0X816,	"stk_limit");
	MakeCode	(x=0X81A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X81C,	"q_size");
	MakeCode	(x=0X81C);
	OpStkvar	(x,	1);
	MakeComm	(0X81E,	"time_quanta");
	MakeCode	(x=0X81E);
	OpStkvar	(x,	1);
	MakeComm	(0X822,	"prio");
	MakeCode	(x=0X826);
	OpStkvar	(x,	1);
	MakeCode	(x=0X82A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X830,	"p_arg");
	MakeComm	(0X832,	"p_task");
	MakeCode	(x=0X832);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X834);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X836,	"p_tcb");
	MakeComm	(0X846,	"stk_limit");
	MakeCode	(x=0X846);
	OpStkvar	(x,	1);
	MakeCode	(x=0X84C);
	OpStkvar	(x,	1);
	MakeComm	(0X84E,	"time_quanta");
	MakeCode	(x=0X84E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X854);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X85A,	"p_arg");
	MakeComm	(0X860,	"prio");
	MakeComm	(0X864,	"stk_size");
	MakeComm	(0X868,	"p_task");
	MakeCode	(x=0X86A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X86C,	"p_tcb");
	MakeCode	(x=0X874);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeComm	(0X87A,	"prio");
	MakeCode	(0X87A);
	MakeCode	(x=0X87E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X880,	"stk_size");
	MakeComm	(0X884,	"p_task");
	MakeCode	(x=0X884);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X886);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X888,	"p_tcb");
	MakeCode	(x=0X88E);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0X892);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X896,	"time_quanta");
	MakeCode	(x=0X896);
	OpStkvar	(x,	1);
	MakeCode	(x=0X89C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X8A6,	"stk_size");
	MakeComm	(0X8AA,	"p_arg");
	MakeComm	(0X8AC,	"p_task");
	MakeCode	(x=0X8AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8AE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X8B0,	"p_tcb");
	MakeComm	(0X8B6,	"p_err");
	MakeCode	(x=0X8B6);
	OpStkvar	(x,	1);
	MakeComm	(0X8B8,	"prio_new");
	MakeComm	(0X8BA,	"p_tcb");
	MakeCode	(x=0X8BA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8C0);
	OpStkvar	(x,	1);
	MakeComm	(0X8C2,	"opt");
	MakeComm	(0X8C6,	"milli");
	MakeComm	(0X8C8,	"seconds");
	MakeComm	(0X8CA,	"minutes");
	MakeComm	(0X8CC,	"hours");
	MakeCode	(x=0X8D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X8D6,	"Timetype");
	MakeComm	(0X8D8,	"RTCx");
	MakeCode	(x=0X8DE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X8E0,	"Timetype");
	MakeCode	(x=0X8E4);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeComm	(0X8E8,	"RTCx");
	MakeCode	(x=0X8EE);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeComm	(0X8F0,	"Timetype");
	MakeComm	(0X8F2,	"RTCx");
	MakeCode	(x=0X8F8);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeComm	(0X8FA,	"Timetype");
	MakeComm	(0X8FC,	"RTCx");
	MakeComm	(0X904,	"Timetype");
	MakeComm	(0X906,	"RTCx");
	MakeCode	(x=0X90C);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeComm	(0X90E,	"Timetype");
	MakeComm	(0X910,	"RTCx");
	MakeCode	(x=0X916);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X920);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X924);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X92E,	"p_err");
	MakeCode	(x=0X92E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X936);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X944);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X956);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0X95E);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X962);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X966);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X96A);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeComm	(0X96E,	"p_err");
	MakeCode	(x=0X976);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X97A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X97C);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X984);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X98C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X990);
	OpOff		(x,	1,	0X100005D8);
	OpOff		(x,	129,	0X100005D8);
	MakeCode	(x=0X992);
	OpStkvar	(x,	1);
	MakeCode	(x=0X994);
	OpOff		(x,	1,	0X100005D8);
	OpOff		(x,	129,	0X100005D8);
	MakeCode	(x=0X996);
	OpStkvar	(x,	1);
	MakeCode	(x=0X99A);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X99E);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X9A2);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X9A6);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X9B2);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X9B6);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X9BE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9CA);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9CE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9D6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9DE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X9E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9E8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9F8);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0X9FA);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0XA02);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0XA0C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XA10);
	MakeCode	(x=0XA14);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA16);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA26);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0XA2E);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0XA32);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(0XA54);
	MakeCode	(0XA56);
	MakeCode	(x=0XA5E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XA6C);
	MakeArray	(0XA6E,	0X2);
	MakeDword	(x=0XA70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XA74,	0XA7D);
	MakeName	(0XA74,	"aStickerr");
	MakeByte	(0XA7D);
	MakeArray	(0XA7D,	0X3);
	MakeStr		(0XA80,	0XA88);
	MakeName	(0XA80,	"aFpgaerr");
	MakeStr		(0XA88,	0XA94);
	MakeName	(0XA88,	"aRfmoduleerr");
	MakeStr		(0XA94,	0XA9C);
	MakeName	(0XA94,	"aF330err");
	MakeStr		(0XA9C,	0XAA3);
	MakeName	(0XA9C,	"aGpserr");
	MakeByte	(0XAA3);
	MakeStr		(0XAA4,	0XAAF);
	MakeName	(0XAA4,	"aEncrypterr");
	MakeByte	(0XAAF);
	MakeStr		(0XAB0,	0XAB9);
	MakeName	(0XAB0,	"aReseterr");
	MakeByte	(0XAB9);
	MakeArray	(0XAB9,	0X3);
	MakeStr		(0XABC,	0XACC);
	MakeName	(0XABC,	"aBattery600mh");
	MakeStr		(0XACC,	0XAD4);
	MakeName	(0XACC,	"aTemperr");
	MakeDword	(0XAD4);
	MakeDword	(0XAD8);
	MakeDword	(0XADC);
	MakeDword	(0XAE0);
	MakeDword	(0XAE4);
	MakeDword	(0XAE8);
	MakeDword	(0XAEC);
	MakeDword	(0XAF0);
	MakeDword	(0XAF4);
	MakeDword	(0XAF8);
	MakeDword	(0XAFC);
	MakeArray	(0XAFC,	0X2);
	MakeDword	(x=0XB04);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB08,	"p_task");
	MakeStr		(0XB0C,	0XB12);
	MakeName	(0XB0C,	"aRadio");
	MakeArray	(0XB12,	0X2);
	MakeDword	(x=0XB14);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB18);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XB1C,	0XB24);
	MakeName	(0XB1C,	"aLedbell");
	MakeDword	(x=0XB24);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XB2C,	0XB33);
	MakeName	(0XB2C,	"aUnpack");
	MakeByte	(0XB33);
	MakeDword	(0XB34);
	MakeDword	(x=0XB38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XB40,	0XB47);
	MakeName	(0XB40,	"aBk5811");
	MakeByte	(0XB47);
	MakeDword	(x=0XB48);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XB4C,	0XB53);
	MakeName	(0XB4C,	"aCc1120");
	MakeByte	(0XB53);
	MakeDword	(x=0XB54);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB58);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XB5C,	0XB63);
	MakeName	(0XB5C,	"aAdckey");
	MakeByte	(0XB63);
	MakeDword	(x=0XB64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB68);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB6C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XB78,	0XB94);
	MakeName	(0XB78,	"a3d3d3d3d3d3d3d");
	MakeArray	(0XB94,	0X4);
	MakeDword	(x=0XB98);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XB9C);
	MakeStr		(0XBA0,	0XBD5);
	MakeName	(0XBA0,	"aSSDIpDCtlD3d3d");
	MakeByte	(0XBD5);
	MakeArray	(0XBD5,	0X3);
	MakeStr		(0XBD8,	0XBDA);
	MakeName	(0XBD8,	"aM");
	MakeArray	(0XBDA,	0X2);
	MakeDword	(x=0XBDC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XBE0);
	MakeCode	(x=0XBE6);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0XBF6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XC00);
	MakeCode	(x=0XC0C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XC10,	"Timetype");
	MakeComm	(0XC12,	"RTCx");
	MakeComm	(0XC1A,	"Timetype");
	MakeCode	(x=0XC1C);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeComm	(0XC20,	"RTCx");
	MakeCode	(x=0XC26);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeComm	(0XC28,	"Timetype");
	MakeComm	(0XC2A,	"RTCx");
	MakeCode	(x=0XC30);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeComm	(0XC32,	"Timetype");
	MakeComm	(0XC34,	"RTCx");
	MakeComm	(0XC3C,	"Timetype");
	MakeComm	(0XC3E,	"RTCx");
	MakeCode	(x=0XC44);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeComm	(0XC46,	"Timetype");
	MakeComm	(0XC48,	"RTCx");
	MakeCode	(x=0XC4E);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(0XC5C);
	MakeCode	(x=0XC60);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC6A);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(0XC74);
	MakeCode	(0XC78);
	MakeCode	(x=0XC82);
	OpHex		(x,	1);
	MakeCode	(0XC88);
	MakeCode	(x=0XC8A);
	OpHex		(x,	1);
	MakeCode	(0XC90);
	MakeCode	(x=0XC92);
	OpStkvar	(x,	1);
	MakeCode	(x=0XC96);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC9C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCA4);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0XCB2);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0XCB6);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeComm	(0XCB8,	"p_err");
	MakeCode	(x=0XCB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XCBE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCCA);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0XCD2);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0XCD8);
	OpOff		(x,	1,	0X10000000);
	OpOff		(x,	129,	0X10000000);
	MakeCode	(x=0XCE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCE2);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XCE4);
	OpStkvar	(x,	1);
	MakeComm	(0XCE6,	"opt");
	MakeComm	(0XCEA,	"seconds");
	MakeComm	(0XCEC,	"milli");
	MakeComm	(0XCF0,	"minutes");
	MakeComm	(0XCF2,	"hours");
	MakeCode	(0XCFA);
	MakeCode	(x=0XD04);
	OpHex		(x,	1);
	MakeCode	(x=0XD0C);
	OpHex		(x,	1);
	MakeCode	(x=0XD14);
	OpHex		(x,	1);
	MakeCode	(x=0XD1C);
	OpHex		(x,	1);
	MakeCode	(x=0XD28);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD38);
	OpHex		(x,	1);
	MakeCode	(x=0XD40);
	OpHex		(x,	1);
	MakeCode	(x=0XD48);
	OpHex		(x,	1);
	MakeCode	(x=0XD50);
	OpHex		(x,	1);
	MakeCode	(x=0XD58);
	OpHex		(x,	1);
	MakeCode	(x=0XD60);
	OpHex		(x,	1);
	MakeCode	(x=0XD68);
	OpHex		(x,	1);
	MakeCode	(x=0XD70);
	OpHex		(x,	1);
	MakeCode	(x=0XD76);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD78);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XD7A);
	OpHex		(x,	1);
	MakeCode	(x=0XD7E);
	OpHex		(x,	1);
	MakeCode	(x=0XD82);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XD86);
	OpHex		(x,	1);
	MakeCode	(x=0XD8E);
	OpHex		(x,	1);
	MakeCode	(0XD9E);
	MakeCode	(x=0XDAA);
	OpHex		(x,	1);
	MakeCode	(0XDB2);
	MakeCode	(0XDBA);
	MakeComm	(0XDCC,	"p_err");
	MakeCode	(x=0XDCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XDD6);
	OpStkvar	(x,	1);
	MakeComm	(0XDDA,	"time_quanta");
	MakeCode	(x=0XDDA);
	OpStkvar	(x,	1);
	MakeComm	(0XDDC,	"p_ext");
	MakeCode	(x=0XDDC);
	OpStkvar	(x,	1);
	MakeComm	(0XDDE,	"opt");
	MakeComm	(0XDE8,	"stk_limit");
	MakeComm	(0XDF2,	"prio");
	MakeComm	(0XDF8,	"q_size");
	MakeCode	(x=0XDF8);
	OpStkvar	(x,	1);
	MakeComm	(0XDFA,	"p_arg");
	MakeComm	(0XDFC,	"p_task");
	MakeCode	(x=0XDFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDFE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XE00,	"p_tcb");
	MakeComm	(0XE06,	"p_err");
	MakeCode	(x=0XE06);
	OpStkvar	(x,	1);
	MakeCode	(0XE12);
	MakeDword	(x=0XE18);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XE1C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XE20);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XE24);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XE28);
	MakeDword	(x=0XE2C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XE30);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XE34);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XE38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XE3C);
	MakeDword	(x=0XE40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XE44);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XE48,	0XE4E);
	MakeName	(0XE48,	"aStart");
	MakeArray	(0XE4E,	0X2);
	MakeCode	(x=0XE50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE5C);
	OpHex		(x,	1);
	MakeCode	(x=0XE64);
	OpHex		(x,	1);
	MakeCode	(x=0XE6C);
	OpHex		(x,	1);
	MakeCode	(x=0XE74);
	OpHex		(x,	1);
	MakeCode	(x=0XE7C);
	OpHex		(x,	1);
	MakeCode	(x=0XE84);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE90);
	OpHex		(x,	1);
	MakeCode	(x=0XE98);
	OpHex		(x,	1);
	MakeCode	(x=0XEA0);
	OpHex		(x,	1);
	MakeCode	(x=0XEA8);
	OpHex		(x,	1);
	MakeCode	(x=0XEB0);
	OpHex		(x,	1);
	MakeCode	(x=0XEB8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XEC4);
	OpHex		(x,	1);
	MakeCode	(x=0XECC);
	OpHex		(x,	1);
	MakeCode	(x=0XED4);
	OpHex		(x,	1);
	MakeCode	(x=0XEDC);
	OpHex		(x,	1);
	MakeCode	(x=0XEE4);
	OpHex		(x,	1);
	MakeCode	(x=0XEEC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XEF8);
	OpHex		(x,	1);
	MakeCode	(x=0XF00);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF0C);
	OpHex		(x,	1);
	MakeCode	(x=0XF14);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF20);
	OpHex		(x,	1);
	MakeCode	(0XF28);
	MakeCode	(x=0XF2C);
	OpHex		(x,	1);
	MakeCode	(x=0XF38);
	OpHex		(x,	1);
	MakeCode	(x=0XF42);
	OpHex		(x,	1);
	MakeCode	(x=0XF48);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF4A);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XF4C);
	OpHex		(x,	1);
	MakeCode	(x=0XF50);
	OpHex		(x,	1);
	MakeCode	(x=0XF54);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(0XF68);
	MakeCode	(x=0XF6A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF82);
	OpHex		(x,	1);
	MakeCode	(x=0XF88);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XF8A);
	OpHex		(x,	1);
	MakeCode	(x=0XF8E);
	OpHex		(x,	1);
	MakeCode	(x=0XF92);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(0XF96);
	MakeCode	(x=0XF98);
	OpHex		(x,	1);
	MakeCode	(x=0XF9E);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XFA0);
	OpHex		(x,	1);
	MakeCode	(x=0XFA4);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XFA8);
	OpHex		(x,	1);
	MakeCode	(x=0XFB2);
	OpHex		(x,	1);
	MakeCode	(0XFBA);
	MakeCode	(x=0XFBC);
	OpHex		(x,	1);
	MakeCode	(0XFC4);
	MakeCode	(x=0XFC6);
	OpHex		(x,	1);
	MakeCode	(x=0XFCC);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XFCE);
	OpHex		(x,	1);
	MakeCode	(x=0XFD2);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XFD6);
	OpHex		(x,	1);
	MakeCode	(0XFDE);
	MakeCode	(0XFF4);
	MakeComm	(0XFFE,	"p_err");
	MakeComm	(0X1000,	"opt");
	MakeComm	(0X1002,	"dly");
	MakeComm	(0X1012,	"p_err");
	MakeComm	(0X1014,	"opt");
	MakeComm	(0X1016,	"dly");
	MakeComm	(0X1028,	"p_err");
	MakeComm	(0X102A,	"opt");
	MakeComm	(0X102C,	"dly");
	MakeCode	(0X1038);
	MakeComm	(0X1044,	"p_err");
	MakeComm	(0X1046,	"opt");
	MakeComm	(0X1048,	"dly");
	MakeComm	(0X105A,	"p_err");
	MakeComm	(0X105C,	"opt");
	MakeComm	(0X105E,	"dly");
	MakeComm	(0X1070,	"p_err");
	MakeComm	(0X1072,	"opt");
	MakeComm	(0X1074,	"dly");
	MakeCode	(0X1080);
	MakeCode	(x=0X1088);
	OpHex		(x,	1);
	MakeCode	(0X1090);
	MakeComm	(0X1098,	"p_err");
	MakeComm	(0X109A,	"opt");
	MakeComm	(0X109C,	"dly");
	MakeComm	(0X10AA,	"p_err");
	MakeComm	(0X10AC,	"opt");
	MakeComm	(0X10AE,	"dly");
	MakeComm	(0X10BC,	"p_err");
	MakeComm	(0X10BE,	"opt");
	MakeComm	(0X10C0,	"dly");
	MakeComm	(0X10CE,	"p_err");
	MakeComm	(0X10D0,	"opt");
	MakeComm	(0X10D2,	"dly");
	MakeComm	(0X10E0,	"p_err");
	MakeComm	(0X10E2,	"opt");
	MakeComm	(0X10E4,	"dly");
	MakeCode	(0X10F0);
	MakeComm	(0X10FC,	"p_err");
	MakeComm	(0X10FE,	"opt");
	MakeComm	(0X1100,	"dly");
	MakeComm	(0X1110,	"p_err");
	MakeComm	(0X1112,	"opt");
	MakeComm	(0X1114,	"dly");
	MakeComm	(0X1124,	"p_err");
	MakeComm	(0X1126,	"opt");
	MakeComm	(0X1128,	"dly");
	MakeCode	(x=0X113A);
	OpHex		(x,	1);
	MakeCode	(x=0X1142);
	OpHex		(x,	1);
	MakeCode	(x=0X114A);
	OpHex		(x,	1);
	MakeComm	(0X1154,	"p_err");
	MakeComm	(0X1156,	"opt");
	MakeComm	(0X1158,	"dly");
	MakeCode	(0X1162);
	MakeCode	(x=0X1166);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1172);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1182);
	MakeCode	(x=0X118E);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1192);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1196);
	MakeCode	(x=0X1198);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X119C);
	MakeCode	(x=0X11A2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11A8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X11AE);
	OpHex		(x,	1);
	MakeCode	(x=0X11B6);
	OpHex		(x,	1);
	MakeCode	(x=0X11BE);
	OpHex		(x,	1);
	MakeComm	(0X11C4,	"p_err");
	MakeCode	(x=0X11CA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X11D0);
	MakeCode	(x=0X11D2);
	OpHex		(x,	1);
	MakeCode	(0X11DA);
	MakeCode	(x=0X11E2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X11E8);
	OpHex		(x,	1);
	MakeCode	(x=0X11F0);
	OpHex		(x,	1);
	MakeCode	(x=0X11F8);
	OpHex		(x,	1);
	MakeCode	(0X1200);
	MakeCode	(x=0X1202);
	OpHex		(x,	1);
	MakeCode	(0X120A);
	MakeCode	(x=0X120E);
	OpHex		(x,	1);
	MakeCode	(x=0X1216);
	OpHex		(x,	1);
	MakeCode	(x=0X121E);
	OpHex		(x,	1);
	MakeCode	(0X1226);
	MakeCode	(x=0X1228);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X122C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1230);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeArray	(0X124A,	0X2);
	MakeDword	(x=0X124C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1250);
	MakeDword	(0X1254);
	MakeDword	(x=0X1258);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X125C);
	MakeDword	(x=0X1260);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1264);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1268);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X126C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1270);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1274);
	MakeCode	(x=0X1276);
	OpHex		(x,	1);
	MakeCode	(x=0X127E);
	OpHex		(x,	1);
	MakeCode	(0X1286);
	MakeCode	(x=0X1288);
	OpHex		(x,	1);
	MakeCode	(x=0X1290);
	OpHex		(x,	1);
	MakeCode	(x=0X1298);
	OpHex		(x,	1);
	MakeCode	(0X12A0);
	MakeCode	(0X12A2);
	MakeCode	(x=0X12A4);
	OpHex		(x,	1);
	MakeCode	(x=0X12AC);
	OpHex		(x,	1);
	MakeCode	(x=0X12B4);
	OpHex		(x,	1);
	MakeCode	(x=0X12BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12C2);
	OpHex		(x,	1);
	MakeCode	(x=0X12D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12DC);
	OpOff		(x,	1,	0X100027EE);
	OpOff		(x,	129,	0X100027EE);
	MakeCode	(x=0X12E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12F8);
	MakeCode	(x=0X1304);
	OpStkvar	(x,	1);
	MakeCode	(x=0X130A);
	OpStkvar	(x,	1);
	MakeCode	(0X131C);
	MakeCode	(0X1328);
	MakeCode	(x=0X1332);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1338);
	OpStkvar	(x,	1);
	MakeCode	(0X1352);
	MakeCode	(x=0X1354);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X135E);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1360);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X1362,	"switch 6 cases ");
	MakeComm	(0X1366,	"switch jump");
	MakeComm	(0X136A,	"jump table for switch statement");
	MakeByte	(0X136A);
	MakeName	(0X136A,	"jpt_1366");
	MakeByte	(0X136B);
	MakeByte	(0X136C);
	MakeByte	(0X136D);
	MakeByte	(0X136E);
	MakeByte	(0X136F);
	MakeRptCmt	(0X1370,	"jumptable 00001366 case 0");
	MakeCode	(0X1370);
	MakeRptCmt	(0X1374,	"jumptable 00001366 case 1");
	MakeCode	(0X1374);
	MakeRptCmt	(0X137C,	"jumptable 00001366 default case");
	MakeCode	(x=0X137C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeName	(0X137C,	"def_1366");
	MakeCode	(x=0X1380);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeRptCmt	(0X1384,	"jumptable 00001366 case 2");
	MakeCode	(0X1384);
	MakeRptCmt	(0X1390,	"jumptable 00001366 case 3");
	MakeCode	(0X1390);
	MakeRptCmt	(0X13A4,	"jumptable 00001366 case 4");
	MakeCode	(0X13A4);
	MakeCode	(x=0X13C8);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X13CC);
	MakeRptCmt	(0X13DA,	"jumptable 00001366 case 5");
	MakeCode	(0X13DA);
	MakeCode	(x=0X13E2);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X13E6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X13EA);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X13F8);
	OpHex		(x,	1);
	MakeCode	(x=0X1400);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1404);
	MakeCode	(x=0X140A);
	OpHex		(x,	1);
	MakeCode	(0X1414);
	MakeCode	(x=0X1416);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X141E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1420);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X142E,	"p_err");
	MakeComm	(0X1430,	"opt");
	MakeComm	(0X1432,	"dly");
	MakeCode	(x=0X1440);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X1450,	"p_err");
	MakeComm	(0X1452,	"opt");
	MakeComm	(0X1454,	"dly");
	MakeCode	(x=0X1462);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X1472,	"p_err");
	MakeComm	(0X1474,	"opt");
	MakeComm	(0X1476,	"dly");
	MakeCode	(x=0X1484);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X148C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1496);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X149C);
	MakeCode	(x=0X14A2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14A6);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X14BA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14C0);
	OpOff		(x,	1,	0X100027EE);
	OpOff		(x,	129,	0X100027EE);
	MakeCode	(x=0X14C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14D4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X14D8);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X14DC);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X14DE);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeCode	(x=0X14E2);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeCode	(x=0X14F0);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X14F2);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X14FE,	"switch 5 cases ");
	MakeComm	(0X1502,	"switch jump");
	MakeComm	(0X1506,	"jump table for switch statement");
	MakeByte	(0X1506);
	MakeName	(0X1506,	"jpt_1502");
	MakeByte	(0X1507);
	MakeByte	(0X1508);
	MakeByte	(0X1509);
	MakeByte	(0X150A);
	MakeRptCmt	(0X150C,	"jumptable 00001502 case 0");
	MakeCode	(0X150C);
	MakeCode	(x=0X1510);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1514);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1516);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X151C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X151E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X1522);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1528);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X152C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X153A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1540);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1548);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X154E);
	MakeCode	(0X1566);
	MakeCode	(0X1572);
	MakeCode	(0X1582);
	MakeCode	(x=0X1598);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeCode	(x=0X159C);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeCode	(x=0X15AA);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X15AE);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X15B0);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X15B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15BA);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X15BE);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeRptCmt	(0X15C4,	"jumptable 00001502 default case");
	MakeName	(0X15C4,	"def_1502");
	MakeComm	(0X15C6,	"p_err");
	MakeCode	(0X15C6);
	MakeCode	(x=0X15CC);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X15D8);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeRptCmt	(0X15DC,	"jumptable 00001502 case 1");
	MakeCode	(x=0X15DC);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X15E6);
	MakeCode	(0X15F6);
	MakeCode	(x=0X1602);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1604);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1608);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeRptCmt	(0X160C,	"jumptable 00001502 case 2");
	MakeCode	(0X160C);
	MakeCode	(x=0X1612);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X161E);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1622);
	MakeCode	(x=0X1624);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeCode	(x=0X1628);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1644);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1650);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1656);
	MakeCode	(0X1666);
	MakeRptCmt	(0X167C,	"jumptable 00001502 case 3");
	MakeCode	(0X167C);
	MakeCode	(x=0X168C);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeCode	(x=0X1690);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1694);
	MakeCode	(x=0X1696);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeCode	(x=0X169A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X16A0);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X16A2);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X16B4);
	MakeCode	(0X16B6);
	MakeDword	(x=0X16B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X16D0);
	MakeDword	(x=0X16D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0X16E4,	"jumptable 00001502 case 4");
	MakeCode	(0X16E4);
	MakeCode	(0X16E6);
	MakeCode	(0X16EA);
	MakeCode	(0X16F0);
	MakeCode	(0X16F6);
	MakeCode	(x=0X1700);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1710);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1720);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X172A);
	MakeCode	(0X172C);
	MakeCode	(0X1736);
	MakeCode	(x=0X173A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X173E);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X174A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1750);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X175C);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeComm	(0X1760,	"p_err");
	MakeCode	(x=0X1766);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1768);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X176A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1780,	"p_err");
	MakeCode	(0X1780);
	MakeCode	(x=0X1786);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X178E,	"p_err");
	MakeCode	(x=0X1794);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X179E,	"p_err");
	MakeCode	(0X179E);
	MakeCode	(x=0X17A4);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X17B2,	"p_err");
	MakeCode	(0X17B2);
	MakeCode	(x=0X17B8);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X17C4,	"p_err");
	MakeCode	(0X17C4);
	MakeCode	(0X17DA);
	MakeCode	(0X17E2);
	MakeCode	(0X17E6);
	MakeCode	(x=0X17EA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X17EE);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1800);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1802);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X1808);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X180E);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1810);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X1816);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X181C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1822);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1828);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X182E);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1830);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1832);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X183C);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X1840);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(x=0X1842);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X1846);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(x=0X1848);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X184C);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(x=0X184E);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X1852);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(x=0X1854);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X1858);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(x=0X185A);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X185E);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(x=0X1860);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X186A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X186C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1876);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1878);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X187A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1880);
	OpOff		(x,	1,	0X10003A12);
	OpOff		(x,	129,	0X10003A12);
	MakeCode	(x=0X1882);
	OpOff		(x,	1,	0X10003A12);
	OpOff		(x,	129,	0X10003A12);
	MakeCode	(x=0X1884);
	OpHex		(x,	1);
	MakeCode	(x=0X188C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X188E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X1892);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X18A6);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X18AA);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X18AC);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X18B2);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X18B4);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X18C8);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X18CE);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X18D2);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X18F2);
	MakeCode	(0X18FA);
	MakeComm	(0X1904,	"p_err");
	MakeComm	(0X1906,	"opt");
	MakeComm	(0X1908,	"dly");
	MakeCode	(x=0X1916);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X191C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1920);
	MakeCode	(0X1926);
	MakeCode	(0X192E);
	MakeCode	(x=0X1932);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X193A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X193E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X1944);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X194C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1954);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X195C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1964);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1976);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X197C);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(x=0X1980);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X1986);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(x=0X198A);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X1990);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(x=0X1996);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X199C);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(x=0X19A2);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X19A8);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(x=0X19AE);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(0X19B4);
	MakeCode	(0X19B6);
	MakeCode	(0X19B8);
	MakeCode	(0X19BA);
	MakeCode	(0X19BC);
	MakeCode	(0X19BE);
	MakeCode	(0X19C0);
	MakeCode	(0X19C2);
	MakeCode	(x=0X19C4);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(x=0X19CA);
	OpOff		(x,	1,	0X10003A12);
	OpOff		(x,	129,	0X10003A12);
	MakeCode	(x=0X19CC);
	OpOff		(x,	1,	0X10003A12);
	OpOff		(x,	129,	0X10003A12);
	MakeCode	(x=0X19CE);
	OpHex		(x,	1);
	MakeCode	(x=0X19D6);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X19DE);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X19EA);
	MakeCode	(0X19EC);
	MakeCode	(0X19EE);
	MakeCode	(0X19F0);
	MakeCode	(x=0X19F8);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X19FC);
	MakeCode	(x=0X1A04);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1A08);
	MakeCode	(x=0X1A10);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1A14);
	MakeCode	(x=0X1A1C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1A20);
	MakeCode	(x=0X1A28);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1A2C);
	MakeCode	(x=0X1A34);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1A38);
	MakeCode	(x=0X1A40);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1A44);
	MakeComm	(0X1A4A,	"p_err");
	MakeComm	(0X1A4C,	"opt");
	MakeComm	(0X1A4E,	"dly");
	MakeComm	(0X1A5C,	"p_err");
	MakeComm	(0X1A5E,	"opt");
	MakeComm	(0X1A60,	"dly");
	MakeCode	(0X1A72);
	MakeComm	(0X1A78,	"p_err");
	MakeComm	(0X1A7A,	"opt");
	MakeComm	(0X1A7C,	"dly");
	MakeComm	(0X1A8A,	"opt");
	MakeComm	(0X1A8C,	"p_err");
	MakeComm	(0X1A8E,	"dly");
	MakeCode	(0X1A92);
	MakeCode	(0X1A94);
	MakeCode	(0X1A96);
	MakeCode	(0X1A98);
	MakeCode	(0X1A9A);
	MakeCode	(x=0X1AA6);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(0X1AAA);
	MakeComm	(0X1AB0,	"p_err");
	MakeComm	(0X1AB2,	"opt");
	MakeComm	(0X1AB4,	"dly");
	MakeComm	(0X1AC2,	"p_err");
	MakeComm	(0X1AC4,	"opt");
	MakeComm	(0X1AC6,	"dly");
	MakeCode	(x=0X1AD4);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(0X1AD8);
	MakeComm	(0X1ADE,	"p_err");
	MakeComm	(0X1AE0,	"opt");
	MakeComm	(0X1AE2,	"dly");
	MakeComm	(0X1AF0,	"p_err");
	MakeComm	(0X1AF2,	"opt");
	MakeComm	(0X1AF4,	"dly");
	MakeCode	(x=0X1B02);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(0X1B06);
	MakeComm	(0X1B0C,	"p_err");
	MakeComm	(0X1B0E,	"opt");
	MakeComm	(0X1B10,	"dly");
	MakeComm	(0X1B1E,	"p_err");
	MakeComm	(0X1B20,	"opt");
	MakeComm	(0X1B22,	"dly");
	MakeCode	(x=0X1B30);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(0X1B34);
	MakeComm	(0X1B3A,	"p_err");
	MakeComm	(0X1B3C,	"opt");
	MakeComm	(0X1B3E,	"dly");
	MakeComm	(0X1B4C,	"p_err");
	MakeComm	(0X1B4E,	"opt");
	MakeComm	(0X1B50,	"dly");
	MakeCode	(x=0X1B5E);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeArray	(0X1B62,	0X2);
	MakeDword	(x=0X1B64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1B68);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1B6C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1B70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1B74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1B78);
	MakeComm	(0X1B7E,	"p_err");
	MakeComm	(0X1B80,	"opt");
	MakeComm	(0X1B82,	"dly");
	MakeComm	(0X1B90,	"p_err");
	MakeComm	(0X1B92,	"opt");
	MakeComm	(0X1B94,	"dly");
	MakeCode	(x=0X1BA2);
	OpOff		(x,	1,	0X100000BC);
	OpOff		(x,	129,	0X100000BC);
	MakeCode	(0X1BA6);
	MakeCode	(x=0X1BAA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1BAC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1BB2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1BB6,	"p_err");
	MakeCode	(x=0X1BC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1BC2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1BC8,	"p_err");
	MakeComm	(0X1BD4,	"p_err");
	MakeCode	(0X1BDE);
	MakeCode	(x=0X1BE4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1BE6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1BFC);
	OpOff		(x,	1,	0X1000000E);
	OpOff		(x,	129,	0X1000000E);
	MakeCode	(x=0X1BFE);
	OpHex		(x,	1);
	MakeCode	(x=0X1C02);
	OpOff		(x,	1,	0X1000000E);
	OpOff		(x,	129,	0X1000000E);
	MakeCode	(x=0X1C06);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1C08);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1C12);
	MakeCode	(x=0X1C20);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1C22);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1C26);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1C2A);
	OpOff		(x,	1,	0X1000000E);
	OpOff		(x,	129,	0X1000000E);
	MakeCode	(x=0X1C2C);
	OpHex		(x,	1);
	MakeCode	(x=0X1C30);
	OpOff		(x,	1,	0X1000000E);
	OpOff		(x,	129,	0X1000000E);
	MakeCode	(x=0X1C32);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1C3A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1C44);
	MakeCode	(x=0X1C48);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1C4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1C50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1C52);
	OpOff		(x,	1,	0X100027EE);
	OpOff		(x,	129,	0X100027EE);
	MakeCode	(x=0X1C56);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1C68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1C6A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1C72);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X1C74);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1C7E);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1C8E);
	MakeCode	(x=0X1C96);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeCode	(0X1CB0);
	MakeCode	(x=0X1CB8);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1CBE);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1CC2);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1CC8);
	MakeCode	(x=0X1CD0);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeCode	(0X1CEA);
	MakeCode	(x=0X1CF2);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1CFA);
	MakeCode	(x=0X1D0E);
	OpHex		(x,	1);
	MakeCode	(x=0X1D16);
	OpHex		(x,	1);
	MakeCode	(0X1D1E);
	MakeCode	(x=0X1D2C);
	OpHex		(x,	1);
	MakeCode	(x=0X1D34);
	OpHex		(x,	1);
	MakeCode	(x=0X1D3C);
	OpHex		(x,	1);
	MakeCode	(0X1D44);
	MakeCode	(0X1D48);
	MakeCode	(0X1D4A);
	MakeCode	(x=0X1D54);
	OpHex		(x,	1);
	MakeCode	(x=0X1D5C);
	OpHex		(x,	1);
	MakeCode	(x=0X1D64);
	OpHex		(x,	1);
	MakeCode	(0X1D70);
	MakeCode	(x=0X1D78);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1D7A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1D7E);
	MakeCode	(x=0X1D88);
	OpHex		(x,	1);
	MakeCode	(x=0X1D90);
	OpHex		(x,	1);
	MakeCode	(x=0X1D98);
	OpHex		(x,	1);
	MakeCode	(x=0X1DA8);
	OpHex		(x,	1);
	MakeCode	(x=0X1DB0);
	OpHex		(x,	1);
	MakeCode	(x=0X1DB8);
	OpHex		(x,	1);
	MakeCode	(x=0X1DC8);
	OpHex		(x,	1);
	MakeCode	(x=0X1DD0);
	OpHex		(x,	1);
	MakeCode	(0X1DD8);
	MakeCode	(x=0X1DDE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1DE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1DEE);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1DF2);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1DF6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1DF8);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1DFA);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X1E0A,	"seconds");
	MakeComm	(0X1E0C,	"milli");
	MakeComm	(0X1E0E,	"minutes");
	MakeComm	(0X1E10,	"hours");
	MakeComm	(0X1E12,	"opt");
	MakeComm	(0X1E22,	"seconds");
	MakeComm	(0X1E24,	"milli");
	MakeComm	(0X1E26,	"minutes");
	MakeComm	(0X1E28,	"hours");
	MakeComm	(0X1E2A,	"opt");
	MakeComm	(0X1E3A,	"seconds");
	MakeComm	(0X1E3C,	"milli");
	MakeComm	(0X1E3E,	"minutes");
	MakeComm	(0X1E40,	"hours");
	MakeComm	(0X1E42,	"opt");
	MakeComm	(0X1E52,	"seconds");
	MakeComm	(0X1E54,	"milli");
	MakeComm	(0X1E56,	"minutes");
	MakeComm	(0X1E58,	"hours");
	MakeComm	(0X1E5A,	"opt");
	MakeComm	(0X1E6A,	"seconds");
	MakeComm	(0X1E6C,	"milli");
	MakeComm	(0X1E6E,	"minutes");
	MakeComm	(0X1E70,	"hours");
	MakeComm	(0X1E72,	"opt");
	MakeComm	(0X1E82,	"seconds");
	MakeComm	(0X1E84,	"milli");
	MakeComm	(0X1E86,	"minutes");
	MakeComm	(0X1E88,	"hours");
	MakeComm	(0X1E8A,	"opt");
	MakeComm	(0X1E9A,	"seconds");
	MakeComm	(0X1E9C,	"milli");
	MakeComm	(0X1E9E,	"minutes");
	MakeComm	(0X1EA0,	"hours");
	MakeComm	(0X1EA2,	"opt");
	MakeComm	(0X1EB2,	"seconds");
	MakeComm	(0X1EB4,	"milli");
	MakeComm	(0X1EB8,	"minutes");
	MakeComm	(0X1EBA,	"hours");
	MakeComm	(0X1EBC,	"opt");
	MakeCode	(0X1EC6);
	MakeCode	(0X1ED0);
	MakeCode	(0X1ED2);
	MakeCode	(x=0X1ED4);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1ED6);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1EDC);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X1EE4,	"seconds");
	MakeComm	(0X1EE6,	"milli");
	MakeComm	(0X1EEA,	"minutes");
	MakeComm	(0X1EEC,	"hours");
	MakeComm	(0X1EEE,	"opt");
	MakeComm	(0X1EFE,	"seconds");
	MakeComm	(0X1F00,	"milli");
	MakeComm	(0X1F02,	"minutes");
	MakeComm	(0X1F04,	"hours");
	MakeComm	(0X1F06,	"opt");
	MakeComm	(0X1F16,	"seconds");
	MakeComm	(0X1F18,	"milli");
	MakeComm	(0X1F1A,	"minutes");
	MakeComm	(0X1F1C,	"hours");
	MakeComm	(0X1F1E,	"opt");
	MakeComm	(0X1F2E,	"seconds");
	MakeComm	(0X1F30,	"milli");
	MakeComm	(0X1F32,	"minutes");
	MakeComm	(0X1F34,	"hours");
	MakeComm	(0X1F36,	"opt");
	MakeCode	(x=0X1F4C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X1F52);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X1F5A,	"milli");
	MakeComm	(0X1F5C,	"seconds");
	MakeComm	(0X1F5E,	"minutes");
	MakeComm	(0X1F60,	"hours");
	MakeComm	(0X1F62,	"opt");
	MakeCode	(x=0X1F6C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1F70);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X1F9A);
	MakeDword	(x=0X1F9C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1FA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1FA4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1FA8);
	MakeDword	(x=0X1FAC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1FB0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1FB4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1FB8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1FBC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1FC0);
	MakeCode	(0X1FC4);
	MakeCode	(x=0X1FC6);
	OpHex		(x,	1);
	MakeCode	(x=0X1FCE);
	OpHex		(x,	1);
	MakeCode	(0X1FD6);
	MakeCode	(x=0X1FD8);
	OpHex		(x,	1);
	MakeCode	(x=0X1FE0);
	OpHex		(x,	1);
	MakeCode	(x=0X1FE8);
	OpHex		(x,	1);
	MakeCode	(0X1FF0);
	MakeCode	(x=0X1FF2);
	OpHex		(x,	1);
	MakeCode	(x=0X1FFA);
	OpHex		(x,	1);
	MakeCode	(x=0X2002);
	OpHex		(x,	1);
	MakeCode	(x=0X2008);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X2024);
	MakeCode	(x=0X2026);
	OpHex		(x,	1);
	MakeCode	(0X202E);
	MakeCode	(x=0X2030);
	OpHex		(x,	1);
	MakeCode	(x=0X2036);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X2052);
	MakeCode	(0X205C);
	MakeCode	(x=0X2064);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2068);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X206A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X206E);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2070);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2074);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X2078);
	MakeCode	(x=0X207A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X207C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2080);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2084);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X2086);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2094);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2098);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X20A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X20A2);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X20A8);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X20BA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X20BC);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X20C0);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X20C4);
	MakeCode	(x=0X20C6);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X20CE);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X20D0);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X20D2);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X20D6);
	MakeCode	(0X20DE);
	MakeCode	(0X20EC);
	MakeCode	(x=0X2102);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2104);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2108);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X210C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X2110);
	MakeCode	(x=0X2112);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2116);
	OpStkvar	(x,	1);
	MakeCode	(x=0X211A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X211C);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X211E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X2122);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2128);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeComm	(0X212A,	"switch 5 cases ");
	MakeComm	(0X212E,	"switch jump");
	MakeComm	(0X2132,	"jump table for switch statement");
	MakeByte	(0X2132);
	MakeName	(0X2132,	"jpt_212E");
	MakeByte	(0X2133);
	MakeByte	(0X2134);
	MakeByte	(0X2135);
	MakeByte	(0X2136);
	MakeRptCmt	(0X2138,	"jumptable 0000212E case 0");
	MakeCode	(0X2138);
	MakeCode	(x=0X214A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2152);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2154);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2156);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeRptCmt	(0X2158,	"jumptable 0000212E default case");
	MakeName	(0X2158,	"def_212E");
	MakeCode	(0X215A);
	MakeRptCmt	(0X215E,	"jumptable 0000212E case 1");
	MakeCode	(0X215E);
	MakeCode	(x=0X217A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X217E);
	MakeRptCmt	(0X2186,	"jumptable 0000212E case 2");
	MakeCode	(x=0X2186);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X218A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X219C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X219E);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X21A0);
	OpStkvar	(x,	1);
	MakeCode	(0X21A6);
	MakeCode	(x=0X21AC);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X21AE);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X21B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X21B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X21C8);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeRptCmt	(0X21CC,	"jumptable 0000212E case 3");
	MakeCode	(0X21CC);
	MakeCode	(x=0X21D8);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X21DA);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X21DE);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeRptCmt	(0X21E2,	"jumptable 0000212E case 4");
	MakeCode	(0X21E2);
	MakeCode	(0X21EA);
	MakeCode	(0X21F2);
	MakeCode	(0X21F8);
	MakeCode	(x=0X21FA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X21FE);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X220C);
	MakeCode	(x=0X220E);
	OpHex		(x,	1);
	MakeCode	(x=0X2216);
	OpHex		(x,	1);
	MakeCode	(x=0X221E);
	OpHex		(x,	1);
	MakeCode	(0X2228);
	MakeCode	(x=0X222A);
	OpHex		(x,	1);
	MakeCode	(x=0X2232);
	OpHex		(x,	1);
	MakeCode	(x=0X223A);
	OpHex		(x,	1);
	MakeCode	(0X2242);
	MakeCode	(x=0X224A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2250);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2258);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X2264);
	MakeCode	(0X2266);
	MakeCode	(x=0X2268);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X226A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X226C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X226E);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X227A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X228E,	"p_err");
	MakeComm	(0X2290,	"opt");
	MakeComm	(0X2292,	"dly");
	MakeComm	(0X22A0,	"p_err");
	MakeComm	(0X22A2,	"opt");
	MakeComm	(0X22A4,	"dly");
	MakeComm	(0X22B2,	"p_err");
	MakeComm	(0X22B4,	"opt");
	MakeComm	(0X22B6,	"dly");
	MakeComm	(0X22C4,	"p_err");
	MakeComm	(0X22C6,	"opt");
	MakeComm	(0X22C8,	"dly");
	MakeComm	(0X22D6,	"p_err");
	MakeComm	(0X22D8,	"opt");
	MakeComm	(0X22DA,	"dly");
	MakeComm	(0X22E8,	"p_err");
	MakeComm	(0X22EA,	"opt");
	MakeComm	(0X22EC,	"dly");
	MakeCode	(x=0X22F4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X22F6);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X22FC);
	MakeComm	(0X2300,	"p_err");
	MakeComm	(0X2302,	"opt");
	MakeComm	(0X2304,	"dly");
	MakeCode	(0X2316);
	MakeCode	(x=0X231A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X231C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X231E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2322);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X2328);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X232E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X2334);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X234A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2352);
	OpHex		(x,	1);
	MakeCode	(x=0X2360);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2372);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2374);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2378);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X237E);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X2384);
	MakeCode	(0X23AE);
	MakeCode	(x=0X23BE);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X23CA);
	MakeCode	(x=0X23DC);
	OpHex		(x,	1);
	MakeCode	(x=0X23E0);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X23EA);
	MakeCode	(x=0X23F2);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X23F8);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X2408);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X240C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2410);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2412);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X241A);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X241E);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2420);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X2428);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X242C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(x=0X243C);
	OpOff		(x,	1,	0X10000054);
	OpOff		(x,	129,	0X10000054);
	MakeCode	(0X2442);
	MakeComm	(0X2448,	"p_err");
	MakeCode	(x=0X2448);
	OpStkvar	(x,	1);
	MakeComm	(0X244A,	"prio_new");
	MakeComm	(0X244C,	"p_tcb");
	MakeCode	(x=0X2452);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2454);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeComm	(0X245A,	"p_err");
	MakeCode	(x=0X245A);
	OpStkvar	(x,	1);
	MakeComm	(0X245C,	"prio_new");
	MakeComm	(0X245E,	"p_tcb");
	MakeCode	(x=0X2464);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X2474);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X2478);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X247C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X2480);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X2484);
	MakeDword	(x=0X2488);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X248C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X2490);
	MakeCode	(x=0X2494);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X249C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X24A0);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X24A8);
	OpHex		(x,	1);
	MakeCode	(x=0X24AC);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X24B2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X24BA,	"p_err");
	MakeCode	(x=0X24BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X24C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X24CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X24E6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X24EA,	"p_err");
	MakeCode	(x=0X24EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X24F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2504);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X251A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2522);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X252E);
	MakeCode	(0X2576);
	MakeCode	(x=0X2584);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2592);
	OpStkvar	(x,	1);
	MakeComm	(0X2594,	"opt");
	MakeComm	(0X2598,	"seconds");
	MakeComm	(0X259A,	"milli");
	MakeComm	(0X259C,	"minutes");
	MakeComm	(0X259E,	"hours");
	MakeArray	(0X25A6,	0X2);
	MakeDword	(x=0X25A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X25AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X25B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X25B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X25B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X25BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X25C0);
	MakeDword	(x=0X25C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X25C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X25CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X25D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X25D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X25D8);
	MakeCode	(x=0X25DE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X25E4);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeComm	(0X25FC,	"switch 6 cases ");
	MakeComm	(0X2600,	"switch jump");
	MakeComm	(0X2604,	"jump table for switch statement");
	MakeByte	(0X2604);
	MakeName	(0X2604,	"jpt_2600");
	MakeByte	(0X2605);
	MakeByte	(0X2606);
	MakeByte	(0X2607);
	MakeByte	(0X2608);
	MakeByte	(0X2609);
	MakeRptCmt	(0X260A,	"jumptable 00002600 case 0");
	MakeCode	(0X260A);
	MakeRptCmt	(0X2618,	"jumptable 00002600 default case");
	MakeName	(0X2618,	"def_2600");
	MakeRptCmt	(0X261E,	"jumptable 00002600 case 1");
	MakeCode	(x=0X261E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2620);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X2630);
	MakeCode	(x=0X2632);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2634);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X263A);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2640);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(0X264A);
	MakeCode	(0X2698);
	MakeCode	(x=0X26E6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X26EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X26F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X26FE);
	OpStkvar	(x,	1);
	MakeRptCmt	(0X2726,	"jumptable 00002600 case 2");
	MakeCode	(0X2726);
	MakeRptCmt	(0X2736,	"jumptable 00002600 case 3");
	MakeCode	(0X2736);
	MakeRptCmt	(0X2746,	"jumptable 00002600 case 4");
	MakeCode	(0X2746);
	MakeRptCmt	(0X2756,	"jumptable 00002600 case 5");
	MakeCode	(0X2756);
	MakeCode	(x=0X2762);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X276A);
	MakeCode	(x=0X2782);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X2788);
	MakeCode	(x=0X278A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X278E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2798);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X279C);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeComm	(0X279E,	"p_err");
	MakeCode	(x=0X27B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X27B6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X27B8);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X27BA);
	OpHex		(x,	1);
	MakeCode	(x=0X27BE);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(0X27C2);
	MakeCode	(x=0X27C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X27CE);
	OpOff		(x,	1,	0X10000160);
	OpOff		(x,	129,	0X10000160);
	MakeCode	(x=0X27D4);
	OpOff		(x,	1,	0X10000160);
	OpOff		(x,	129,	0X10000160);
	MakeCode	(x=0X27DA);
	OpOff		(x,	1,	0X10000160);
	OpOff		(x,	129,	0X10000160);
	MakeCode	(0X27DE);
	MakeCode	(x=0X27E0);
	OpHex		(x,	1);
	MakeComm	(0X27E4,	"switch 31 cases ");
	MakeComm	(0X27E8,	"switch jump");
	MakeComm	(0X27EC,	"jump table for switch statement");
	MakeByte	(0X27EC);
	MakeName	(0X27EC,	"jpt_27E8");
	MakeByte	(0X27ED);
	MakeByte	(0X27EE);
	MakeByte	(0X27EF);
	MakeByte	(0X27F0);
	MakeByte	(0X27F1);
	MakeByte	(0X27F2);
	MakeByte	(0X27F3);
	MakeByte	(0X27F4);
	MakeByte	(0X27F5);
	MakeByte	(0X27F6);
	MakeByte	(0X27F7);
	MakeByte	(0X27F8);
	MakeByte	(0X27F9);
	MakeByte	(0X27FA);
	MakeByte	(0X27FB);
	MakeByte	(0X27FC);
	MakeByte	(0X27FD);
	MakeByte	(0X27FE);
	MakeByte	(0X27FF);
	MakeByte	(0X2800);
	MakeByte	(0X2801);
	MakeByte	(0X2802);
	MakeByte	(0X2803);
	MakeByte	(0X2804);
	MakeByte	(0X2805);
	MakeByte	(0X2806);
	MakeByte	(0X2807);
	MakeByte	(0X2808);
	MakeByte	(0X2809);
	MakeByte	(0X280A);
	MakeRptCmt	(0X280C,	"jumptable 000027E8 cases 1,3-5,7-9,11,12,15,17-19,21,23");
	MakeCode	(0X280C);
	MakeRptCmt	(0X2812,	"jumptable 000027E8 case 10");
	MakeCode	(0X2812);
	MakeRptCmt	(0X2818,	"jumptable 000027E8 cases 2,13,16,22");
	MakeCode	(0X2818);
	MakeRptCmt	(0X281E,	"jumptable 000027E8 case 30");
	MakeCode	(0X281E);
	MakeRptCmt	(0X2824,	"jumptable 000027E8 case 24");
	MakeCode	(0X2824);
	MakeRptCmt	(0X282A,	"jumptable 000027E8 cases 25,28");
	MakeCode	(0X282A);
	MakeRptCmt	(0X2830,	"jumptable 000027E8 default case");
	MakeCode	(0X2830);
	MakeName	(0X2830,	"def_27E8");
	MakeCode	(0X2832);
	MakeCode	(x=0X2840);
	OpHex		(x,	1);
	MakeCode	(x=0X286C);
	OpHex		(x,	1);
	MakeCode	(0X28C2);
	MakeCode	(x=0X28C6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X28C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X28CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X28CE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X28E6);
	MakeCode	(x=0X28EC);
	OpHex		(x,	1);
	MakeCode	(x=0X28F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X2904);
	MakeCode	(0X2922);
	MakeCode	(x=0X2924);
	OpHex		(x,	1);
	MakeCode	(0X2934);
	MakeCode	(x=0X2956);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2964);
	OpHex		(x,	1);
	MakeCode	(x=0X2988);
	OpStkvar	(x,	1);
	MakeCode	(x=0X298C);
	OpHex		(x,	1);
	MakeCode	(x=0X2996);
	OpStkvar	(x,	1);
	MakeCode	(0X29AC);
	MakeCode	(0X29B4);
	MakeCode	(x=0X29C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X29C6);
	OpHex		(x,	1);
	MakeDword	(x=0X29CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X29D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X29D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X29D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X29DC);
	MakeDword	(0X29E0);
	MakeDword	(x=0X29E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X29E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X29EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X29F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X29F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X29F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X29FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X2A00);
	OpHex		(x,	1);
	MakeCode	(x=0X2A04);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2A28);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2A2C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2A3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2A4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2A50);
	OpHex		(x,	1);
	MakeCode	(x=0X2A56);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2A62);
	OpStkvar	(x,	1);
	MakeCode	(0X2A6C);
	MakeCode	(0X2A8A);
	MakeCode	(x=0X2A92);
	OpHex		(x,	1);
	MakeCode	(x=0X2A9C);
	OpHex		(x,	1);
	MakeCode	(x=0X2ABC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2AC0);
	OpHex		(x,	1);
	MakeCode	(x=0X2ACA);
	OpStkvar	(x,	1);
	MakeCode	(0X2ADC);
	MakeCode	(x=0X2ADE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2AE4);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2AF2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2AF6);
	OpHex		(x,	1);
	MakeCode	(x=0X2B00);
	OpStkvar	(x,	1);
	MakeCode	(0X2B10);
	MakeCode	(x=0X2B1C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X2B20);
	MakeCode	(0X2B36);
	MakeCode	(x=0X2B40);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2B68);
	OpHex		(x,	1);
	MakeCode	(x=0X2B6E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2B7A);
	OpStkvar	(x,	1);
	MakeCode	(0X2B84);
	MakeCode	(x=0X2B8C);
	OpHex		(x,	1);
	MakeCode	(x=0X2B94);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2B98);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2B9A);
	OpStkvar	(x,	1);
	MakeCode	(0X2BA0);
	MakeCode	(0X2BA8);
	MakeCode	(0X2BB0);
	MakeCode	(0X2BB8);
	MakeCode	(0X2BC2);
	MakeCode	(0X2BCA);
	MakeCode	(x=0X2BD8);
	OpHex		(x,	1);
	MakeCode	(x=0X2BE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2BE4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2BE6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2BE8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X2BEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2BF2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2BF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2BFE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2C06);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2C0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2C18);
	OpStkvar	(x,	1);
	MakeCode	(0X2C22);
	MakeCode	(x=0X2C24);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2C2A);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2C36);
	OpHex		(x,	1);
	MakeCode	(x=0X2C3E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2C46);
	OpStkvar	(x,	1);
	MakeCode	(0X2C54);
	MakeCode	(x=0X2C64);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2C72);
	OpHex		(x,	1);
	MakeCode	(x=0X2C7A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2C82);
	OpStkvar	(x,	1);
	MakeCode	(0X2C94);
	MakeCode	(x=0X2CB0);
	OpHex		(x,	1);
	MakeCode	(x=0X2CB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2CC0);
	OpStkvar	(x,	1);
	MakeCode	(0X2CD0);
	MakeCode	(x=0X2CDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2CEA);
	OpHex		(x,	1);
	MakeCode	(x=0X2CF2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2CFA);
	OpStkvar	(x,	1);
	MakeCode	(0X2D0A);
	MakeCode	(x=0X2D24);
	OpHex		(x,	1);
	MakeCode	(x=0X2D2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2D34);
	OpStkvar	(x,	1);
	MakeCode	(0X2D44);
	MakeName	(0X2D44,	"dbg_printf");
	MakeCode	(0X2D46);
	MakeCode	(x=0X2D4A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2D52);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2D54);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2D64);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2D66);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2D6C);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2D76);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2D80);
	OpHex		(x,	1);
	MakeCode	(x=0X2DA6);
	OpHex		(x,	1);
	MakeCode	(x=0X2DB4);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2DC6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2DF4);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X2DFA);
	MakeCode	(x=0X2DFE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2E00);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2E06);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2E0A);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeDword	(x=0X2E14);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X2E18);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X2E1C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X2E20);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X2E24);
	MakeCode	(0X2E36);
	MakeCode	(x=0X2E40);
	OpHex		(x,	1);
	MakeCode	(0X2E4C);
	MakeCode	(x=0X2E6E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2E88);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X2E94);
	MakeCode	(x=0X2E96);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2EB0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2EB2);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2EBC);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2EC0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0X2EC6);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2ECA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0X2ED0);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2ED4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0X2EDA);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2EDE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0X2EE4);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2EE8);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2EEC);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2EF0);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2EF4);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2EF8);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2EFC);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2F00);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2F04);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2F08);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2F12);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2F3E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2F44);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X2F4C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0X2F4E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2F50);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0X2F52);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X2F56);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0X2F5A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0X2F68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2F6E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2F74);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2F7C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0X2F7E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2F8A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2F90);
	OpOff		(x,	1,	0X100039B8);
	OpOff		(x,	129,	0X100039B8);
	MakeCode	(x=0X2F9C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2FA0);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X2FA4);
	MakeCode	(x=0X2FB2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2FB6);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2FC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X2FC8);
	OpHex		(x,	1);
	MakeCode	(x=0X2FD2);
	OpStkvar	(x,	1);
	MakeCode	(0X2FE0);
	MakeCode	(x=0X2FE4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X2FF0);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X2FFA);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X3018);
	OpStkvar	(x,	1);
	MakeCode	(x=0X301C);
	OpHex		(x,	1);
	MakeCode	(x=0X3046);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X3048);
	OpHex		(x,	1);
	MakeCode	(x=0X304C);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X3050);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X306E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X307A);
	OpHex		(x,	1);
	MakeCode	(0X30A8);
	MakeCode	(x=0X30AA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X30B6);
	OpHex		(x,	1);
	MakeCode	(x=0X30E2);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X30EC);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X30F8);
	OpHex		(x,	1);
	MakeCode	(x=0X3108);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3110);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X312A);
	MakeCode	(0X312E);
	MakeCode	(x=0X3132);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X3134);
	OpHex		(x,	1);
	MakeCode	(x=0X313A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X314A);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(0X3150);
	MakeCode	(x=0X3152);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X3156);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(0X3164);
	MakeCode	(x=0X317C);
	OpHex		(x,	1);
	MakeCode	(0X31A4);
	MakeCode	(0X31A6);
	MakeCode	(x=0X31B0);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(0X31B6);
	MakeCode	(x=0X31BC);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X31C6);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X31D2);
	OpHex		(x,	1);
	MakeCode	(x=0X31E2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X31EA);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X3202);
	MakeCode	(0X3206);
	MakeCode	(0X320A);
	MakeCode	(x=0X320E);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X3212);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X321A);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X321E);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X3224);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(0X3236);
	MakeArray	(0X324E,	0X2);
	MakeDword	(x=0X3250);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X3254);
	MakeDword	(x=0X325C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3260);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3264);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3268);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X326C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X3270,	0X3279);
	MakeName	(0X3270,	"aTickU");
	MakeByte	(0X3279);
	MakeArray	(0X3279,	0X3);
	MakeDword	(x=0X327C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X3280);
	MakeCode	(x=0X3282);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3292);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32A6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32AA);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X32AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32BE);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X32C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32C4);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X32C6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32CA);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X32CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32D0);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X32D2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32DA);
	OpHex		(x,	1);
	MakeCode	(x=0X32E6);
	OpStkvar	(x,	1);
	MakeCode	(0X32F2);
	MakeCode	(x=0X32F6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X330C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3310);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3314);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3322);
	OpHex		(x,	1);
	MakeCode	(x=0X3328);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3330);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3338);
	OpStkvar	(x,	1);
	MakeCode	(x=0X333E);
	OpStkvar	(x,	1);
	MakeCode	(0X334A);
	MakeCode	(x=0X334C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3354);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X336A);
	OpHex		(x,	1);
	MakeCode	(x=0X3372);
	OpStkvar	(x,	1);
	MakeCode	(x=0X337A);
	OpStkvar	(x,	1);
	MakeCode	(0X3388);
	MakeCode	(x=0X3396);
	OpHex		(x,	1);
	MakeCode	(x=0X339E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X33A2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X33A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X33A6);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X33A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X33AC);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X33AE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X33B2);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X33B6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X33BA);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X33BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X33C0);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X33C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X33C8);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X33CA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X33D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X33D4);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X33D6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X33DA);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X33DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X33E0);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X33E2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X33EE);
	OpStkvar	(x,	1);
	MakeCode	(0X33F8);
	MakeCode	(x=0X3408);
	OpStkvar	(x,	1);
	MakeCode	(x=0X340C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3414);
	OpStkvar	(x,	1);
	MakeCode	(x=0X341A);
	OpHex		(x,	1);
	MakeCode	(x=0X3420);
	OpStkvar	(x,	1);
	MakeCode	(0X342E);
	MakeCode	(x=0X343A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X343E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X3444);
	MakeCode	(x=0X3446);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3454);
	OpHex		(x,	1);
	MakeCode	(x=0X345E);
	OpStkvar	(x,	1);
	MakeCode	(0X346C);
	MakeCode	(x=0X347C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3480);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3486);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X348A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3490);
	OpHex		(x,	1);
	MakeCode	(x=0X3496);
	OpStkvar	(x,	1);
	MakeCode	(0X34A4);
	MakeCode	(x=0X34B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X34B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X34B6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X34BC);
	MakeCode	(x=0X34BE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X34CC);
	OpHex		(x,	1);
	MakeCode	(x=0X34D6);
	OpStkvar	(x,	1);
	MakeCode	(0X34E4);
	MakeCode	(x=0X34F2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X34F4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X34FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3500);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3502);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X3506);
	OpStkvar	(x,	1);
	MakeCode	(x=0X350A);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X350C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3510);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X3512);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3518);
	OpStkvar	(x,	1);
	MakeCode	(x=0X351C);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X351E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3522);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X3524);
	OpStkvar	(x,	1);
	MakeCode	(x=0X352C);
	OpHex		(x,	1);
	MakeCode	(x=0X3538);
	OpStkvar	(x,	1);
	MakeCode	(0X3542);
	MakeCode	(x=0X354C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X354E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X3554,	"RTCx");
	MakeCode	(x=0X3554);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X355A);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeComm	(0X3560,	"TimeValue");
	MakeCode	(0X3560);
	MakeComm	(0X3564,	"Timetype");
	MakeComm	(0X356C,	"TimeValue");
	MakeComm	(0X356E,	"Timetype");
	MakeComm	(0X3570,	"RTCx");
	MakeComm	(0X3576,	"TimeValue");
	MakeComm	(0X3578,	"Timetype");
	MakeComm	(0X357A,	"RTCx");
	MakeComm	(0X3580,	"TimeValue");
	MakeComm	(0X3582,	"Timetype");
	MakeComm	(0X3584,	"RTCx");
	MakeComm	(0X358A,	"TimeValue");
	MakeComm	(0X358C,	"Timetype");
	MakeComm	(0X358E,	"RTCx");
	MakeComm	(0X3594,	"TimeValue");
	MakeComm	(0X3596,	"Timetype");
	MakeComm	(0X3598,	"RTCx");
	MakeCode	(x=0X359E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeComm	(0X35A2,	"TimeValue");
	MakeCode	(0X35A2);
	MakeComm	(0X35A6,	"Timetype");
	MakeComm	(0X35AE,	"TimeValue");
	MakeComm	(0X35B0,	"Timetype");
	MakeComm	(0X35B2,	"RTCx");
	MakeComm	(0X35B8,	"TimeValue");
	MakeComm	(0X35BA,	"Timetype");
	MakeComm	(0X35BC,	"RTCx");
	MakeComm	(0X35C2,	"TimeValue");
	MakeComm	(0X35C4,	"Timetype");
	MakeComm	(0X35C6,	"RTCx");
	MakeComm	(0X35CC,	"TimeValue");
	MakeComm	(0X35CE,	"Timetype");
	MakeComm	(0X35D0,	"RTCx");
	MakeComm	(0X35D6,	"TimeValue");
	MakeComm	(0X35D8,	"Timetype");
	MakeComm	(0X35DA,	"RTCx");
	MakeCode	(x=0X35E2);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X35EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X35F2);
	OpHex		(x,	1);
	MakeCode	(x=0X35FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X360A);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X3614);
	MakeCode	(x=0X3626);
	OpStkvar	(x,	1);
	MakeCode	(x=0X362C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X362E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X363A);
	OpHex		(x,	1);
	MakeCode	(x=0X3642);
	OpStkvar	(x,	1);
	MakeCode	(0X3654);
	MakeCode	(x=0X3656);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X365C);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X366C);
	MakeCode	(x=0X366E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X3672);
	MakeCode	(x=0X367A);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X367C);
	OpStkvar	(x,	1);
	MakeCode	(0X3682);
	MakeCode	(x=0X3684);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3692);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3696);
	OpHex		(x,	1);
	MakeCode	(x=0X369C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X36A4);
	OpStkvar	(x,	1);
	MakeCode	(0X36AC);
	MakeCode	(x=0X36BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X36C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X36C4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X36C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X36CE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X36D6);
	OpHex		(x,	1);
	MakeCode	(x=0X36DC);
	OpStkvar	(x,	1);
	MakeArray	(0X36EA,	0X2);
	MakeDword	(x=0X36EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X36F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X36F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X36F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X36FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3700);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3704);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3708);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X370C);
	MakeCode	(x=0X370E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3714);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3728);
	OpStkvar	(x,	1);
	MakeCode	(x=0X372C);
	OpHex		(x,	1);
	MakeCode	(x=0X3736);
	OpStkvar	(x,	1);
	MakeCode	(0X3744);
	MakeCode	(x=0X3754);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3758);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X375C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3760);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3766);
	OpStkvar	(x,	1);
	MakeCode	(x=0X376C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3774);
	OpHex		(x,	1);
	MakeCode	(x=0X377A);
	OpStkvar	(x,	1);
	MakeCode	(0X378A);
	MakeCode	(x=0X37A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X37A6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X37BE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X37C2);
	OpHex		(x,	1);
	MakeCode	(x=0X37CC);
	OpStkvar	(x,	1);
	MakeCode	(0X37DC);
	MakeCode	(x=0X37EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X37F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X37F4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X37F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X37FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3806);
	OpHex		(x,	1);
	MakeCode	(x=0X380C);
	OpStkvar	(x,	1);
	MakeCode	(0X381A);
	MakeCode	(x=0X381C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3824);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3838);
	OpStkvar	(x,	1);
	MakeCode	(x=0X383C);
	OpHex		(x,	1);
	MakeCode	(x=0X3846);
	OpStkvar	(x,	1);
	MakeCode	(0X3854);
	MakeCode	(x=0X3862);
	OpHex		(x,	1);
	MakeCode	(x=0X386A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X386E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3870);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3872);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X387C);
	MakeCode	(x=0X387E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3886);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3894);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3896);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X389E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X38A8);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X38AE);
	MakeCode	(x=0X38B0);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X38BA);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X38BE);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X38C2);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X38CA);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X38D6);
	MakeCode	(x=0X38DA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X38DC);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X38E4);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X38E6);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X38F0);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X3902);
	MakeCode	(x=0X3906);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3908);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3910);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3912);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X391A);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X3928);
	MakeCode	(x=0X392C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X392E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3936);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3938);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3940);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X394E);
	MakeCode	(x=0X3952);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3954);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X395C);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X395E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3966);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X3974);
	MakeCode	(x=0X3978);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X397A);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3982);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3984);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X398C);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X399A);
	MakeCode	(x=0X399E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X39A4);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X39AA);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X39B4);
	MakeCode	(0X39B8);
	MakeCode	(x=0X39BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X39BE);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X39C2);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X39D0);
	MakeCode	(x=0X39D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X39D6);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X39DC);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X39E2);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X39EA);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X39EC);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X39EE);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X39F8);
	MakeCode	(0X39FC);
	MakeCode	(x=0X39FE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3A02);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X3A04);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X3A10);
	OpHex		(x,	1);
	MakeCode	(x=0X3A2E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3A38);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3A62);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3A66);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3A72);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3A74);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X3A7A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3A7E);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3A82);
	OpHex		(x,	1);
	MakeCode	(x=0X3A88);
	OpHex		(x,	1);
	MakeCode	(x=0X3A8C);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3A8E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3A9A);
	OpHex		(x,	1);
	MakeCode	(x=0X3AA0);
	OpHex		(x,	1);
	MakeCode	(x=0X3AA6);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3AA8);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3AB0);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3AB2);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3AB4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3AD8);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3ADE);
	OpHex		(x,	1);
	MakeCode	(x=0X3AE4);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X3AF0);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3AF4);
	OpHex		(x,	1);
	MakeArray	(0X3AFA,	0X2);
	MakeDword	(x=0X3AFC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3B00);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3B04);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3B08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3B0C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3B10);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3B14);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X3B18);
	OpHex		(x,	1);
	MakeCode	(x=0X3B1C);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3B1E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X3B2A);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3B2E);
	OpHex		(x,	1);
	MakeCode	(x=0X3B34);
	OpHex		(x,	1);
	MakeCode	(x=0X3B38);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3B3A);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3B3C);
	OpOff		(x,	1,	0X10003AE4);
	OpOff		(x,	129,	0X10003AE4);
	MakeCode	(x=0X3B44);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3B48);
	OpHex		(x,	1);
	MakeCode	(x=0X3B4E);
	OpHex		(x,	1);
	MakeCode	(x=0X3B52);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3B54);
	OpOff		(x,	1,	0X10003AE4);
	OpOff		(x,	129,	0X10003AE4);
	MakeCode	(x=0X3B5C);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3B60);
	OpHex		(x,	1);
	MakeCode	(x=0X3B66);
	OpHex		(x,	1);
	MakeCode	(x=0X3B6A);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3B6C);
	OpOff		(x,	1,	0X10003AE4);
	OpOff		(x,	129,	0X10003AE4);
	MakeCode	(x=0X3B74);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3B78);
	OpHex		(x,	1);
	MakeCode	(x=0X3B7E);
	OpHex		(x,	1);
	MakeCode	(x=0X3B82);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3B8C);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3B90);
	OpHex		(x,	1);
	MakeCode	(x=0X3B96);
	OpHex		(x,	1);
	MakeCode	(x=0X3B9A);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3B9C);
	OpOff		(x,	1,	0X10003AE4);
	OpOff		(x,	129,	0X10003AE4);
	MakeCode	(x=0X3BA4);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3BA8);
	OpHex		(x,	1);
	MakeCode	(x=0X3BAE);
	OpHex		(x,	1);
	MakeCode	(x=0X3BB2);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3BB4);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X3BBE);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3BC2);
	OpHex		(x,	1);
	MakeCode	(x=0X3BC8);
	OpHex		(x,	1);
	MakeCode	(x=0X3BCC);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3BD0);
	OpHex		(x,	1);
	MakeCode	(x=0X3BDA);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3BDC);
	OpHex		(x,	1);
	MakeCode	(x=0X3BE0);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3BEC);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X3BEE);
	OpHex		(x,	1);
	MakeCode	(x=0X3BF2);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(0X3BF6);
	MakeCode	(x=0X3C00);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X3C06,	"p_err");
	MakeCode	(x=0X3C06);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C0C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3C0E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X3C1A);
	OpHex		(x,	1);
	MakeCode	(x=0X3C22);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C26);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C2A);
	OpHex		(x,	1);
	MakeCode	(x=0X3C2E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C32);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3C3A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3C3C);
	OpOff		(x,	1,	0X10003AE4);
	OpOff		(x,	129,	0X10003AE4);
	MakeCode	(x=0X3C3E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C42);
	OpOff		(x,	1,	0X10003AE4);
	OpOff		(x,	129,	0X10003AE4);
	MakeCode	(x=0X3C44);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C48);
	OpOff		(x,	1,	0X10003AE4);
	OpOff		(x,	129,	0X10003AE4);
	MakeCode	(x=0X3C4A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C50);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C54);
	OpOff		(x,	1,	0X10003AE4);
	OpOff		(x,	129,	0X10003AE4);
	MakeCode	(x=0X3C56);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C5A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3C5C);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X3C62);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C66);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X3C68);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C78);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3C86);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X3CAA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3CAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CB2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CB6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3CBA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CC2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CC6);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X3CC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CCC);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X3CCE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CD2);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X3CD6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CDA);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X3CDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3CE2);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X3CE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CEA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CEE);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X3CF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CF4);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X3CF6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3CFA);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X3CFC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D00);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X3D02);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D06);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X3D08);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D0C);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X3D0E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D12);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(0X3D16);
	MakeCode	(x=0X3D18);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D28);
	OpStkvar	(x,	1);
	MakeCode	(0X3D32);
	MakeCode	(x=0X3D40);
	OpHex		(x,	1);
	MakeCode	(x=0X3D46);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3D4E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D52);
	OpStkvar	(x,	1);
	MakeCode	(0X3D60);
	MakeCode	(x=0X3D72);
	OpStkvar	(x,	1);
	MakeCode	(0X3D78);
	MakeCode	(x=0X3D7C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X3D88);
	MakeCode	(0X3D8C);
	MakeCode	(x=0X3D8E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3D9C);
	OpHex		(x,	1);
	MakeCode	(x=0X3DA6);
	OpStkvar	(x,	1);
	MakeCode	(0X3DB8);
	MakeCode	(x=0X3DC2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3DC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3DCE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3DD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3DDA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3DDE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3DE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3DF6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3DFA);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X3E00);
	MakeCode	(x=0X3E06);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E0A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E0E);
	OpHex		(x,	1);
	MakeCode	(x=0X3E12);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E18);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E1A);
	OpStkvar	(x,	1);
	MakeCode	(0X3E2A);
	MakeCode	(x=0X3E32);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E36);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3E3A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E3E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3E42);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E46);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3E4A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E4E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3E50);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E56);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E5A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E76);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3E7A);
	OpOff		(x,	1,	0X10003338);
	OpOff		(x,	129,	0X10003338);
	MakeCode	(x=0X3E8A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3E8C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3E96);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3E9A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3EA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3EAA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3EB2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3EB6);
	OpOff		(x,	1,	0X100033A0);
	OpOff		(x,	129,	0X100033A0);
	MakeCode	(0X3EBA);
	MakeCode	(x=0X3EC8);
	OpHex		(x,	1);
	MakeCode	(x=0X3ECE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3ED4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3ED6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3EDA);
	OpStkvar	(x,	1);
	MakeCode	(0X3EE8);
	MakeCode	(x=0X3EEA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3EF0);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3EFC);
	OpHex		(x,	1);
	MakeCode	(x=0X3F04);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F0C);
	OpStkvar	(x,	1);
	MakeArray	(0X3F1A,	0X2);
	MakeDword	(x=0X3F1C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3F20);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3F24);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3F28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3F2C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3F30);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3F34);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3F38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3F3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3F40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X3F44);
	MakeDword	(x=0X3F48);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X3F4C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X3F50);
	MakeCode	(x=0X3F5E);
	OpHex		(x,	1);
	MakeCode	(x=0X3F66);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F6A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X3F6E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3F72);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F76);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3F78);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3F7E);
	OpStkvar	(x,	1);
	MakeCode	(0X3F8C);
	MakeCode	(x=0X3F96);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X3FAC);
	MakeCode	(x=0X3FAE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X3FB4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X3FB8);
	MakeCode	(x=0X3FC4);
	OpHex		(x,	1);
	MakeCode	(x=0X3FCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3FD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3FE4);
	OpHex		(x,	1);
	MakeCode	(x=0X3FEC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X3FF6);
	MakeCode	(x=0X4004);
	OpHex		(x,	1);
	MakeCode	(x=0X400E);
	OpStkvar	(x,	1);
	MakeCode	(0X401C);
	MakeCode	(x=0X401E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4052);
	OpHex		(x,	1);
	MakeCode	(x=0X405A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4062);
	OpStkvar	(x,	1);
	MakeCode	(0X4074);
	MakeCode	(0X4086);
	MakeCode	(x=0X4088);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X40A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X40A2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X40A4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X40A6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X40B2);
	OpHex		(x,	1);
	MakeCode	(x=0X40B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X40C0);
	OpStkvar	(x,	1);
	MakeCode	(0X40D0);
	MakeCode	(x=0X40D6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X410E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4116);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X412A);
	OpHex		(x,	1);
	MakeCode	(x=0X4130);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4138);
	OpStkvar	(x,	1);
	MakeCode	(0X414C);
	MakeCode	(x=0X4156);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4164);
	OpHex		(x,	1);
	MakeCode	(x=0X4168);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4180);
	OpStkvar	(x,	1);
	MakeCode	(x=0X418C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X41A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X41AC);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X41C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X41D6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X41DA);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X41DE);
	MakeCode	(x=0X41EC);
	OpHex		(x,	1);
	MakeCode	(x=0X41F2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X41F8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X41FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X41FE);
	OpStkvar	(x,	1);
	MakeCode	(0X420C);
	MakeCode	(x=0X420E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4214);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4220);
	OpHex		(x,	1);
	MakeCode	(x=0X4228);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4230);
	OpStkvar	(x,	1);
	MakeCode	(0X423E);
	MakeCode	(x=0X424C);
	OpHex		(x,	1);
	MakeCode	(x=0X4252);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4258);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X425A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X425E);
	OpStkvar	(x,	1);
	MakeCode	(0X426C);
	MakeCode	(x=0X426E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4276);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeComm	(0X4278,	"p_err");
	MakeCode	(x=0X4278);
	OpStkvar	(x,	1);
	MakeCode	(x=0X427E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X428A);
	OpHex		(x,	1);
	MakeCode	(x=0X4292);
	OpStkvar	(x,	1);
	MakeCode	(x=0X429A);
	OpStkvar	(x,	1);
	MakeCode	(0X42AC);
	MakeCode	(x=0X42BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X42BE);
	OpHex		(x,	1);
	MakeCode	(x=0X42C4);
	OpStkvar	(x,	1);
	MakeCode	(0X42CC);
	MakeCode	(x=0X430C);
	OpStkvar	(x,	1);
	MakeCode	(0X431C);
	MakeCode	(x=0X432A);
	OpHex		(x,	1);
	MakeCode	(x=0X4330);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4334);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4336);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4338);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X433A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X433C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X433E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4342);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4344);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4348);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X434E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4352);
	OpStkvar	(x,	1);
	MakeArray	(0X4362,	0X2);
	MakeDword	(x=0X4364);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X4368);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X436C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X4370);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X4374);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X4378);
	MakeCode	(x=0X4388);
	OpStkvar	(x,	1);
	MakeCode	(x=0X438E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4390);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4394);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X4398);
	MakeCode	(x=0X43C6);
	OpHex		(x,	1);
	MakeCode	(x=0X43CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X43D8);
	OpStkvar	(x,	1);
	MakeCode	(0X43E0);
	MakeCode	(x=0X43EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X43FE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4400);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X440C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4410);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4414);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4418);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X441C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4420);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X4424);
	MakeCode	(x=0X4426);
	OpStkvar	(x,	1);
	MakeCode	(x=0X442A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4446);
	OpStkvar	(x,	1);
	MakeCode	(0X444E);
	MakeCode	(x=0X4458);
	OpStkvar	(x,	1);
	MakeCode	(0X445E);
	MakeCode	(x=0X446C);
	OpHex		(x,	1);
	MakeCode	(x=0X4472);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4476);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X447A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X447E);
	OpStkvar	(x,	1);
	MakeCode	(0X448C);
	MakeCode	(x=0X448E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4496);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X44A4);
	OpHex		(x,	1);
	MakeCode	(x=0X44AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X44B4);
	OpStkvar	(x,	1);
	MakeCode	(0X44C2);
	MakeCode	(x=0X44D0);
	OpHex		(x,	1);
	MakeCode	(x=0X44D6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X44DA);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X44DE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X44E2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X44E8);
	OpStkvar	(x,	1);
	MakeCode	(0X44F6);
	MakeCode	(x=0X44F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4500);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X4514);
	OpHex		(x,	1);
	MakeCode	(x=0X451C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4524);
	OpStkvar	(x,	1);
	MakeCode	(0X4532);
	MakeCode	(x=0X4540);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4542);
	OpHex		(x,	1);
	MakeCode	(x=0X4548);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X454A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4554);
	OpHex		(x,	1);
	MakeCode	(x=0X4558);
	OpStkvar	(x,	1);
	MakeCode	(x=0X455E);
	OpHex		(x,	1);
	MakeCode	(x=0X4562);
	OpHex		(x,	1);
	MakeCode	(x=0X4566);
	OpStkvar	(x,	1);
	MakeCode	(x=0X456A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4574);
	OpStkvar	(x,	1);
	MakeCode	(x=0X457C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X4584);
	MakeCode	(x=0X4588);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X458E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X459A);
	OpHex		(x,	1);
	MakeCode	(x=0X45A2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X45AA);
	OpStkvar	(x,	1);
	MakeCode	(0X45B8);
	MakeCode	(x=0X45C6);
	OpHex		(x,	1);
	MakeCode	(x=0X45CE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X45D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X45D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X45D6);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X45D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X45DC);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X45DE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X45E2);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X45E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X45EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X45EE);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X45F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X45F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X45FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4600);
	OpStkvar	(x,	1);
	MakeCode	(x=0X460C);
	OpStkvar	(x,	1);
	MakeCode	(0X4616);
	MakeCode	(x=0X4618);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X462A);
	OpHex		(x,	1);
	MakeCode	(x=0X4632);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4636);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X463C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4640);
	OpStkvar	(x,	1);
	MakeCode	(0X464E);
	MakeCode	(x=0X465C);
	OpHex		(x,	1);
	MakeCode	(x=0X4664);
	OpStkvar	(x,	1);
	MakeCode	(x=0X466C);
	OpStkvar	(x,	1);
	MakeCode	(0X467A);
	MakeCode	(x=0X4688);
	OpHex		(x,	1);
	MakeCode	(x=0X4690);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4694);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4698);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X469A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X469E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46A8);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X46AA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46B4);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X46B6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46C0);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X46C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46CC);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X46CE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46D8);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X46DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46E4);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X46E6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46F0);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X46F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X46FE);
	OpStkvar	(x,	1);
	MakeCode	(0X4708);
	MakeCode	(x=0X470A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4710);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X471E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4722);
	OpOff		(x,	1,	0X100039B8);
	OpOff		(x,	129,	0X100039B8);
	MakeCode	(x=0X4726);
	OpOff		(x,	1,	0X100039B8);
	OpOff		(x,	129,	0X100039B8);
	MakeCode	(x=0X472A);
	OpOff		(x,	1,	0X100039B8);
	OpOff		(x,	129,	0X100039B8);
	MakeComm	(0X472E,	"p_err");
	MakeCode	(x=0X472E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4734);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4736);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X473A);
	MakeCode	(x=0X473C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4740);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4748);
	OpStkvar	(x,	1);
	MakeCode	(x=0X474C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X476E);
	OpHex		(x,	1);
	MakeCode	(x=0X4774);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4778);
	OpStkvar	(x,	1);
	MakeCode	(x=0X477C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4784);
	OpStkvar	(x,	1);
	MakeDword	(x=0X4788);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X478C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X4790);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X4794);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X4798);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X479C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X47A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X47A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X47A8);
	MakeCode	(0X47AC);
	MakeCode	(0X47B4);
	MakeCode	(x=0X47BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X47BE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X47D0);
	OpHex		(x,	1);
	MakeCode	(x=0X47DA);
	OpStkvar	(x,	1);
	MakeCode	(0X47EA);
	MakeCode	(x=0X47F6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X47F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4812);
	OpHex		(x,	1);
	MakeCode	(x=0X481A);
	OpStkvar	(x,	1);
	MakeCode	(0X4824);
	MakeCode	(x=0X482E);
	OpHex		(x,	1);
	MakeCode	(x=0X4834);
	OpStkvar	(x,	1);
	MakeCode	(x=0X483A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X483E);
	OpOff		(x,	1,	0X10000021);
	OpOff		(x,	129,	0X10000021);
	MakeCode	(x=0X4840);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4844);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4846);
	OpStkvar	(x,	1);
	MakeCode	(x=0X484A);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X484C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4850);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4852);
	OpStkvar	(x,	1);
	MakeCode	(x=0X485A);
	OpStkvar	(x,	1);
	MakeCode	(0X486C);
	MakeCode	(x=0X486E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4888);
	OpOff		(x,	1,	0X10000021);
	OpOff		(x,	129,	0X10000021);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	MakeCode	(x=0X488C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4892);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48A0);
	OpHex		(x,	1);
	MakeCode	(0X48A8);
	MakeCode	(x=0X48B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48D4);
	OpHex		(x,	1);
	MakeCode	(x=0X48DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48E2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X48FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4902);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4906);
	OpStkvar	(x,	1);
	MakeCode	(x=0X490E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X491A);
	OpStkvar	(x,	1);
	MakeCode	(0X4924);
	MakeCode	(x=0X492A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4938);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4948);
	OpStkvar	(x,	1);
	MakeCode	(x=0X497E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4984);
	OpStkvar	(x,	1);
	MakeCode	(x=0X498A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4994);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4998);
	OpStkvar	(x,	1);
	MakeCode	(x=0X49A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X49A2);
	OpHex		(x,	1);
	MakeCode	(0X49CA);
	MakeCode	(x=0X49CE);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X49D2);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X49D6);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X49DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X49E2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X49EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X49F8);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X49FC);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4A02);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4A06);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X4A0E);
	MakeCode	(x=0X4A32);
	OpHex		(x,	1);
	MakeCode	(x=0X4A38);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4A3C);
	OpStkvar	(x,	1);
	MakeCode	(0X4A42);
	MakeCode	(0X4A44);
	MakeCode	(0X4A46);
	MakeCode	(x=0X4A4A);
	OpStkvar	(x,	1);
	MakeCode	(0X4A56);
	MakeCode	(x=0X4A5A);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4A5E);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4A62);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4A66);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4A70);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4A7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4A86);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4A8A);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4A90);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4A94);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X4A9E);
	MakeCode	(x=0X4AAA);
	OpStkvar	(x,	1);
	MakeCode	(0X4AB0);
	MakeCode	(x=0X4AB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4ABC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AC4);
	OpHex		(x,	1);
	MakeCode	(x=0X4AC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4ADC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4AFA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B02);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B0A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B12);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B30);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B44);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B4E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B56);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B5E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4B66);
	OpStkvar	(x,	1);
	MakeCode	(0X4B7C);
	MakeCode	(x=0X4B82);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4B94);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4BA2);
	OpStkvar	(x,	1);
	MakeStr		(0X4BB8,	0X4BD2);
	MakeName	(0X4BB8,	"aWm610A7_176520");
	MakeArray	(0X4BD2,	0X2);
	MakeDword	(x=0X4BD4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X4BD8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X4BDC);
	MakeCode	(0X4BDE);
	MakeCode	(x=0X4BF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C00);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4C06);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C22);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C24);
	OpStkvar	(x,	1);
	MakeCode	(0X4C30);
	MakeCode	(x=0X4C3E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C48);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C50);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C58);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C62);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C68);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C6E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C78);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4C84);
	OpHex		(x,	1);
	MakeCode	(0X4C98);
	MakeCode	(x=0X4C9A);
	OpStkvar	(x,	1);
	MakeCode	(0X4C9E);
	MakeCode	(x=0X4CA2);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4CA6);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4CAA);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4CAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4CB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4CBA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4CBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4CC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4CC6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4CCE);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4CD2);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4CD6);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4CDC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4D00);
	OpStkvar	(x,	1);
	MakeCode	(0X4D14);
	MakeCode	(0X4D16);
	MakeCode	(x=0X4D24);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D2A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D30);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D38);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D50);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D54);
	OpHex		(x,	1);
	MakeCode	(x=0X4D5A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D5E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D66);
	OpStkvar	(x,	1);
	MakeCode	(0X4D70);
	MakeCode	(0X4D72);
	MakeCode	(x=0X4D82);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D84);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D8E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D96);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4D98);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4DAE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X4DC2);
	MakeCode	(x=0X4DCA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4DCE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4DD2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4DD4);
	OpHex		(x,	1);
	MakeCode	(x=0X4DD8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4DE2);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4DE8);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4DEE);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X4DF4);
	OpHex		(x,	1);
	MakeCode	(x=0X4DF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E02);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4E06);
	OpHex		(x,	1);
	MakeCode	(x=0X4E0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E10);
	OpHex		(x,	1);
	MakeCode	(x=0X4E14);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E22);
	OpHex		(x,	1);
	MakeCode	(x=0X4E28);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E34);
	OpStkvar	(x,	1);
	MakeCode	(0X4E3E);
	MakeCode	(x=0X4E46);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E4A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E4E);
	OpHex		(x,	1);
	MakeCode	(x=0X4E52);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E56);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E5A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E5E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E70);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E74);
	OpHex		(x,	1);
	MakeCode	(x=0X4E78);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E8A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4E8E);
	OpHex		(x,	1);
	MakeCode	(x=0X4E92);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4EA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4EA8);
	OpHex		(x,	1);
	MakeCode	(x=0X4EAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4EB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4EC6);
	OpHex		(x,	1);
	MakeCode	(x=0X4ECC);
	OpStkvar	(x,	1);
	MakeCode	(0X4ED2);
	MakeCode	(0X4ED4);
	MakeCode	(x=0X4EE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4EE6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4EE8);
	OpHex		(x,	1);
	MakeCode	(x=0X4EF8);
	OpStkvar	(x,	1);
	MakeCode	(0X4F02);
	MakeCode	(x=0X4F0A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F0E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F12);
	OpHex		(x,	1);
	MakeCode	(x=0X4F16);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F1A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F1E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F22);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F26);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F3E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F42);
	OpHex		(x,	1);
	MakeCode	(x=0X4F46);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F58);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F5C);
	OpHex		(x,	1);
	MakeCode	(x=0X4F60);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F72);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F76);
	OpHex		(x,	1);
	MakeCode	(x=0X4F7A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F80);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4F96);
	OpHex		(x,	1);
	MakeCode	(x=0X4F9C);
	OpStkvar	(x,	1);
	MakeCode	(0X4FA2);
	MakeCode	(0X4FA4);
	MakeCode	(x=0X4FB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4FB6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X4FB8);
	OpHex		(x,	1);
	MakeCode	(x=0X4FC8);
	OpStkvar	(x,	1);
	MakeCode	(0X4FD2);
	MakeCode	(x=0X4FE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X4FE2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X4FFC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5000);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5004);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5008);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X500C);
	MakeCode	(x=0X5014);
	OpHex		(x,	1);
	MakeCode	(x=0X501C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5024);
	OpStkvar	(x,	1);
	MakeCode	(0X5032);
	MakeCode	(0X503E);
	MakeCode	(0X5044);
	MakeCode	(0X504A);
	MakeCode	(0X5056);
	MakeCode	(0X505C);
	MakeCode	(0X5062);
	MakeCode	(x=0X506C);
	OpHex		(x,	1);
	MakeCode	(x=0X5080);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5084);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5092);
	OpHex		(x,	1);
	MakeCode	(x=0X509A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X50A2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X50AE);
	OpStkvar	(x,	1);
	MakeCode	(0X50B8);
	MakeCode	(x=0X50BA);
	OpStkvar	(x,	1);
	MakeCode	(0X50C0);
	MakeCode	(x=0X50C6);
	OpHex		(x,	1);
	MakeCode	(x=0X50E0);
	OpHex		(x,	1);
	MakeCode	(x=0X50EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X50F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X50FC);
	OpStkvar	(x,	1);
	MakeCode	(0X5106);
	MakeCode	(x=0X5108);
	OpStkvar	(x,	1);
	MakeCode	(x=0X510C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5112);
	OpHex		(x,	1);
	MakeCode	(x=0X511A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X511E);
	OpStkvar	(x,	1);
	MakeCode	(0X5124);
	MakeCode	(x=0X512A);
	OpHex		(x,	1);
	MakeCode	(x=0X5140);
	OpHex		(x,	1);
	MakeCode	(x=0X5150);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5158);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5164);
	OpStkvar	(x,	1);
	MakeCode	(0X5186);
	MakeCode	(0X518A);
	MakeCode	(x=0X519A);
	OpHex		(x,	1);
	MakeCode	(x=0X51B6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X51BC);
	OpHex		(x,	1);
	MakeCode	(x=0X51C4);
	OpHex		(x,	1);
	MakeCode	(x=0X51D2);
	OpHex		(x,	1);
	MakeCode	(x=0X51F0);
	OpHex		(x,	1);
	MakeCode	(x=0X51F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5202);
	OpStkvar	(x,	1);
	MakeCode	(x=0X520C);
	OpStkvar	(x,	1);
	MakeCode	(0X5212);
	MakeCode	(0X5216);
	MakeCode	(0X5218);
	MakeCode	(x=0X5226);
	OpHex		(x,	1);
	MakeCode	(x=0X5236);
	OpStkvar	(x,	1);
	MakeCode	(x=0X523E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X524C);
	OpHex		(x,	1);
	MakeCode	(x=0X5256);
	OpStkvar	(x,	1);
	MakeCode	(0X5266);
	MakeCode	(x=0X5274);
	OpHex		(x,	1);
	MakeCode	(x=0X5284);
	OpStkvar	(x,	1);
	MakeCode	(0X5294);
	MakeCode	(x=0X52AA);
	OpHex		(x,	1);
	MakeCode	(x=0X52B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X52C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X52CC);
	OpHex		(x,	1);
	MakeCode	(0X52E8);
	MakeCode	(0X52EA);
	MakeCode	(x=0X52EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X52FE);
	OpHex		(x,	1);
	MakeCode	(x=0X5306);
	OpStkvar	(x,	1);
	MakeCode	(x=0X530A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5310);
	OpHex		(x,	1);
	MakeCode	(x=0X5316);
	OpHex		(x,	1);
	MakeCode	(x=0X531A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X531E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5328);
	OpHex		(x,	1);
	MakeCode	(x=0X5330);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5338);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5340);
	OpStkvar	(x,	1);
	MakeCode	(0X5346);
	MakeCode	(x=0X534C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5350);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5354);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5358);
	OpStkvar	(x,	1);
	MakeCode	(0X535E);
	MakeCode	(x=0X5362);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5368);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X536C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5376);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5378);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5380);
	OpHex		(x,	1);
	MakeCode	(x=0X538C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5392);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5398);
	OpStkvar	(x,	1);
	MakeCode	(x=0X53A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X53A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X53B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X53BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X53BE);
	OpHex		(x,	1);
	MakeCode	(x=0X53C2);
	OpHex		(x,	1);
	MakeCode	(0X53C8);
	MakeCode	(x=0X53CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X53D0,	"switch 10 cases ");
	MakeComm	(0X53D4,	"switch jump");
	MakeComm	(0X53D8,	"jump table for switch statement");
	MakeByte	(0X53D8);
	MakeName	(0X53D8,	"jpt_53D4");
	MakeByte	(0X53D9);
	MakeByte	(0X53DA);
	MakeByte	(0X53DB);
	MakeByte	(0X53DC);
	MakeByte	(0X53DD);
	MakeByte	(0X53DE);
	MakeByte	(0X53DF);
	MakeByte	(0X53E0);
	MakeByte	(0X53E1);
	MakeRptCmt	(0X53E2,	"jumptable 000053D4 case 0");
	MakeCode	(0X53E2);
	MakeRptCmt	(0X5406,	"jumptable 000053D4 default case");
	MakeName	(0X5406,	"def_53D4");
	MakeCode	(0X5408);
	MakeCode	(0X5416);
	MakeCode	(0X542A);
	MakeCode	(0X5438);
	MakeCode	(0X543E);
	MakeCode	(0X5444);
	MakeCode	(0X544A);
	MakeCode	(0X5450);
	MakeCode	(0X5456);
	MakeRptCmt	(0X545C,	"jumptable 000053D4 case 1");
	MakeCode	(0X545C);
	MakeRptCmt	(0X5470,	"jumptable 0000547E default case");
	MakeName	(0X5470,	"def_54D6");
	MakeRptCmt	(0X5472,	"jumptable 000053D4 case 6");
	MakeCode	(0X5472);
	MakeComm	(0X5476,	"switch 33 cases ");
	MakeComm	(0X547E,	"switch jump");
	MakeComm	(0X5482,	"jump table for switch statement");
	MakeByte	(0X5482);
	MakeName	(0X5482,	"jpt_547E");
	MakeByte	(0X5483);
	MakeByte	(0X5484);
	MakeByte	(0X5485);
	MakeByte	(0X5486);
	MakeByte	(0X5487);
	MakeByte	(0X5488);
	MakeByte	(0X5489);
	MakeByte	(0X548A);
	MakeByte	(0X548B);
	MakeByte	(0X548C);
	MakeByte	(0X548D);
	MakeByte	(0X548E);
	MakeByte	(0X548F);
	MakeByte	(0X5490);
	MakeByte	(0X5491);
	MakeByte	(0X5492);
	MakeByte	(0X5493);
	MakeByte	(0X5494);
	MakeByte	(0X5495);
	MakeByte	(0X5496);
	MakeByte	(0X5497);
	MakeByte	(0X5498);
	MakeByte	(0X5499);
	MakeByte	(0X549A);
	MakeByte	(0X549B);
	MakeByte	(0X549C);
	MakeByte	(0X549D);
	MakeByte	(0X549E);
	MakeByte	(0X549F);
	MakeByte	(0X54A0);
	MakeByte	(0X54A1);
	MakeByte	(0X54A2);
	MakeRptCmt	(0X54A4,	"jumptable 0000547E cases 0,5,27,29-31");
	MakeCode	(0X54A4);
	MakeCode	(0X54A6);
	MakeComm	(0X54AC,	"switch 14 cases ");
	MakeComm	(0X54B4,	"switch jump");
	MakeComm	(0X54B8,	"jump table for switch statement");
	MakeByte	(0X54B8);
	MakeName	(0X54B8,	"jpt_54B4");
	MakeByte	(0X54B9);
	MakeByte	(0X54BA);
	MakeByte	(0X54BB);
	MakeByte	(0X54BC);
	MakeByte	(0X54BD);
	MakeByte	(0X54BE);
	MakeByte	(0X54BF);
	MakeByte	(0X54C0);
	MakeByte	(0X54C1);
	MakeByte	(0X54C2);
	MakeByte	(0X54C3);
	MakeByte	(0X54C4);
	MakeByte	(0X54C5);
	MakeRptCmt	(0X54C6,	"jumptable 000054B4 case 38");
	MakeCode	(0X54C6);
	MakeCode	(0X54C8);
	MakeComm	(0X54CE,	"switch 6 cases ");
	MakeComm	(0X54D6,	"switch jump");
	MakeComm	(0X54DA,	"jump table for switch statement");
	MakeByte	(0X54DA);
	MakeName	(0X54DA,	"jpt_54D6");
	MakeByte	(0X54DB);
	MakeByte	(0X54DC);
	MakeByte	(0X54DD);
	MakeByte	(0X54DE);
	MakeByte	(0X54DF);
	MakeCode	(0X54E0);
	MakeCode	(0X54F4);
	MakeArray	(0X5502,	0X2);
	MakeDword	(x=0X5504);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X5508);
	MakeDword	(x=0X550C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5510);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5514);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5518);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X551C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5520);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X5524);
	MakeDword	(x=0X5528);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0X552C,	"jumptable 0000547E case 1");
	MakeCode	(0X552C);
	MakeRptCmt	(0X5534,	"jumptable 0000547E case 2");
	MakeCode	(0X5534);
	MakeRptCmt	(0X553C,	"jumptable 0000547E case 3");
	MakeCode	(0X553C);
	MakeRptCmt	(0X5544,	"jumptable 0000547E case 4");
	MakeCode	(0X5544);
	MakeRptCmt	(0X554C,	"jumptable 0000547E case 6");
	MakeCode	(0X554C);
	MakeRptCmt	(0X5554,	"jumptable 0000547E case 7");
	MakeCode	(0X5554);
	MakeCode	(0X555C);
	MakeRptCmt	(0X555E,	"jumptable 0000547E case 8");
	MakeCode	(0X555E);
	MakeRptCmt	(0X5566,	"jumptable 0000547E case 9");
	MakeCode	(0X5566);
	MakeRptCmt	(0X556E,	"jumptable 0000547E case 10");
	MakeCode	(0X556E);
	MakeRptCmt	(0X5576,	"jumptable 0000547E case 11");
	MakeCode	(0X5576);
	MakeRptCmt	(0X557E,	"jumptable 0000547E case 12");
	MakeCode	(0X557E);
	MakeRptCmt	(0X5586,	"jumptable 0000547E case 13");
	MakeCode	(0X5586);
	MakeCode	(0X558E);
	MakeRptCmt	(0X5590,	"jumptable 0000547E case 14");
	MakeCode	(0X5590);
	MakeRptCmt	(0X5598,	"jumptable 0000547E case 15");
	MakeCode	(0X5598);
	MakeRptCmt	(0X55A0,	"jumptable 0000547E case 16");
	MakeCode	(0X55A0);
	MakeRptCmt	(0X55A8,	"jumptable 0000547E case 17");
	MakeCode	(0X55A8);
	MakeCode	(0X55B0);
	MakeRptCmt	(0X55B2,	"jumptable 000053D4 case 9");
	MakeCode	(0X55B2);
	MakeRptCmt	(0X55B4,	"jumptable 000053D4 case 8");
	MakeCode	(0X55B4);
	MakeCode	(0X55B6);
	MakeRptCmt	(0X55B8,	"jumptable 0000547E case 18");
	MakeCode	(0X55B8);
	MakeRptCmt	(0X55C0,	"jumptable 0000547E case 19");
	MakeCode	(0X55C0);
	MakeRptCmt	(0X55C8,	"jumptable 0000547E case 20");
	MakeCode	(0X55C8);
	MakeCode	(0X55D0);
	MakeCode	(0X55D2);
	MakeRptCmt	(0X55D4,	"jumptable 0000547E case 21");
	MakeCode	(0X55D4);
	MakeRptCmt	(0X55DC,	"jumptable 0000547E case 22");
	MakeCode	(0X55DC);
	MakeRptCmt	(0X55E4,	"jumptable 0000547E case 23");
	MakeCode	(0X55E4);
	MakeRptCmt	(0X55EC,	"jumptable 0000547E case 24");
	MakeCode	(0X55EC);
	MakeRptCmt	(0X55F4,	"jumptable 0000547E case 25");
	MakeCode	(0X55F4);
	MakeRptCmt	(0X55FA,	"jumptable 000056F0 default case");
	MakeName	(0X55FA,	"def_56F0");
	MakeRptCmt	(0X55FC,	"jumptable 0000547E case 26");
	MakeCode	(0X55FC);
	MakeRptCmt	(0X5604,	"jumptable 0000547E case 28");
	MakeCode	(0X5604);
	MakeCode	(x=0X5608);
	OpHex		(x,	1);
	MakeCode	(x=0X560C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5612);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeRptCmt	(0X561C,	"jumptable 0000547E case 32");
	MakeCode	(0X561C);
	MakeCode	(0X5624);
	MakeRptCmt	(0X562A,	"jumptable 000054B4 case 34");
	MakeCode	(0X562A);
	MakeRptCmt	(0X5632,	"jumptable 000054B4 case 35");
	MakeCode	(0X5632);
	MakeRptCmt	(0X563A,	"jumptable 000054B4 case 36");
	MakeCode	(0X563A);
	MakeRptCmt	(0X5642,	"jumptable 000054B4 case 37");
	MakeCode	(0X5642);
	MakeRptCmt	(0X564A,	"jumptable 000054B4 case 39");
	MakeCode	(0X564A);
	MakeRptCmt	(0X5652,	"jumptable 000054B4 case 40");
	MakeCode	(0X5652);
	MakeRptCmt	(0X565A,	"jumptable 000054B4 case 41");
	MakeCode	(0X565A);
	MakeRptCmt	(0X5662,	"jumptable 000054B4 case 42");
	MakeCode	(0X5662);
	MakeRptCmt	(0X566A,	"jumptable 000054B4 case 43");
	MakeCode	(0X566A);
	MakeRptCmt	(0X5672,	"jumptable 000054B4 case 44");
	MakeCode	(0X5672);
	MakeRptCmt	(0X567A,	"jumptable 000054B4 case 45");
	MakeCode	(0X567A);
	MakeRptCmt	(0X5682,	"jumptable 000054B4 case 46");
	MakeCode	(0X5682);
	MakeRptCmt	(0X568A,	"jumptable 000054B4 case 47");
	MakeCode	(0X568A);
	MakeCode	(0X5692);
	MakeRptCmt	(0X5698,	"jumptable 000054D6 case 49");
	MakeCode	(0X5698);
	MakeRptCmt	(0X56A0,	"jumptable 000054D6 case 50");
	MakeCode	(0X56A0);
	MakeRptCmt	(0X56A8,	"jumptable 000054D6 case 51");
	MakeCode	(0X56A8);
	MakeRptCmt	(0X56B0,	"jumptable 000054D6 case 52");
	MakeCode	(0X56B0);
	MakeCode	(0X56B8);
	MakeCode	(0X56BA);
	MakeRptCmt	(0X56BC,	"jumptable 000054D6 case 53");
	MakeCode	(0X56BC);
	MakeRptCmt	(0X56C4,	"jumptable 000054D6 case 54");
	MakeCode	(0X56C4);
	MakeCode	(0X56CC);
	MakeCode	(0X56D2);
	MakeCode	(0X56D8);
	MakeCode	(0X56DE);
	MakeCode	(0X56E4);
	MakeComm	(0X56E8,	"switch 13 cases ");
	MakeComm	(0X56F0,	"switch jump");
	MakeComm	(0X56F4,	"jump table for switch statement");
	MakeByte	(0X56F4);
	MakeName	(0X56F4,	"jpt_56F0");
	MakeByte	(0X56F5);
	MakeByte	(0X56F6);
	MakeByte	(0X56F7);
	MakeByte	(0X56F8);
	MakeByte	(0X56F9);
	MakeByte	(0X56FA);
	MakeByte	(0X56FB);
	MakeByte	(0X56FC);
	MakeByte	(0X56FD);
	MakeByte	(0X56FE);
	MakeByte	(0X56FF);
	MakeByte	(0X5700);
	MakeRptCmt	(0X5702,	"jumptable 000056F0 cases 1-3,8,10,11");
	MakeCode	(0X5702);
	MakeCode	(0X5704);
	MakeCode	(0X571C);
	MakeRptCmt	(0X572A,	"jumptable 000056F0 case 0");
	MakeCode	(0X572A);
	MakeRptCmt	(0X5732,	"jumptable 000056F0 case 4");
	MakeCode	(0X5732);
	MakeRptCmt	(0X573A,	"jumptable 000056F0 case 5");
	MakeCode	(0X573A);
	MakeRptCmt	(0X5742,	"jumptable 000056F0 case 6");
	MakeCode	(0X5742);
	MakeRptCmt	(0X574A,	"jumptable 000056F0 case 7");
	MakeCode	(0X574A);
	MakeRptCmt	(0X5752,	"jumptable 000056F0 case 9");
	MakeCode	(0X5752);
	MakeRptCmt	(0X575A,	"jumptable 000056F0 case 12");
	MakeCode	(0X575A);
	MakeCode	(0X5762);
	MakeCode	(0X5768);
	MakeCode	(0X576E);
	MakeCode	(0X5774);
	MakeCode	(0X577A);
	MakeCode	(0X5780);
	MakeCode	(0X5792);
	MakeCode	(0X579A);
	MakeComm	(0X57A0,	"p_err");
	MakeCode	(x=0X57A6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X57BC);
	MakeCode	(x=0X57C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X57CC);
	OpOff		(x,	1,	0X100000F1);
	OpOff		(x,	129,	0X100000F1);
	MakeCode	(0X57D0);
	MakeCode	(x=0X57D6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X57DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X57F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5800);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5804);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5818);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5822);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5826);
	OpOff		(x,	1,	0X100000F1);
	OpOff		(x,	129,	0X100000F1);
	MakeCode	(x=0X5828);
	OpStkvar	(x,	1);
	MakeCode	(0X5836);
	MakeCode	(x=0X583A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X5848);
	MakeCode	(0X584E);
	MakeCode	(x=0X585E);
	OpHex		(x,	1);
	MakeCode	(x=0X5866);
	OpStkvar	(x,	1);
	MakeCode	(x=0X586A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5870);
	OpHex		(x,	1);
	MakeCode	(x=0X5876);
	OpHex		(x,	1);
	MakeCode	(x=0X587A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X587E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X588A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X588E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5890);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5894);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X589A);
	OpHex		(x,	1);
	MakeCode	(x=0X58A2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X58AA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X58B6);
	OpStkvar	(x,	1);
	MakeCode	(0X58C0);
	MakeCode	(0X593C);
	MakeCode	(x=0X5940);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5948);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X5958);
	MakeCode	(x=0X5968);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X59A2);
	MakeCode	(0X59AC);
	MakeCode	(x=0X59AE);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X59B4);
	MakeDword	(x=0X5A08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5A0C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5A10);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X5A14);
	MakeDword	(x=0X5A18);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5A1C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X5A20);
	MakeDword	(0X5A24);
	MakeDword	(0X5A28);
	MakeDword	(0X5A2C);
	MakeDword	(0X5A30);
	MakeCode	(0X5A34);
	MakeCode	(0X5A36);
	MakeCode	(x=0X5A72);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X5A78);
	MakeCode	(x=0X5A82);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X5A8C);
	MakeCode	(0X5A96);
	MakeCode	(x=0X5A9A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5AAE);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5AB2);
	OpHex		(x,	1);
	MakeCode	(x=0X5AB6);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5AB8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X5ABC);
	MakeCode	(x=0X5ACA);
	OpHex		(x,	1);
	MakeComm	(0X5ADE,	"p_err");
	MakeCode	(x=0X5ADE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5AE4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5AE6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5AE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5AEE);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X5AF4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5AF8);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5B0E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5B20);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5B36);
	OpOff		(x,	1,	0X100027EE);
	OpOff		(x,	129,	0X100027EE);
	MakeCode	(x=0X5B40);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5B4A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X5B54);
	MakeCode	(x=0X5B58);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X5B7E);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(0X5BAA);
	MakeCode	(0X5BB0);
	MakeCode	(x=0X5BB4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5BC0);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5BCE);
	OpHex		(x,	1);
	MakeCode	(0X5BE2);
	MakeCode	(0X5BE6);
	MakeCode	(0X5BF4);
	MakeCode	(0X5BFA);
	MakeCode	(x=0X5C00);
	OpHex		(x,	1);
	MakeCode	(x=0X5C12);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5C16);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5C24);
	OpHex		(x,	1);
	MakeCode	(x=0X5C2E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5C68);
	OpHex		(x,	1);
	MakeCode	(x=0X5C84);
	OpHex		(x,	1);
	MakeComm	(0X5C88,	"switch 32 cases ");
	MakeComm	(0X5C8C,	"switch jump");
	MakeComm	(0X5C90,	"jump table for switch statement");
	MakeByte	(0X5C90);
	MakeName	(0X5C90,	"jpt_5C8C");
	MakeByte	(0X5C91);
	MakeByte	(0X5C92);
	MakeByte	(0X5C93);
	MakeByte	(0X5C94);
	MakeByte	(0X5C95);
	MakeByte	(0X5C96);
	MakeByte	(0X5C97);
	MakeByte	(0X5C98);
	MakeByte	(0X5C99);
	MakeByte	(0X5C9A);
	MakeByte	(0X5C9B);
	MakeByte	(0X5C9C);
	MakeByte	(0X5C9D);
	MakeByte	(0X5C9E);
	MakeByte	(0X5C9F);
	MakeByte	(0X5CA0);
	MakeByte	(0X5CA1);
	MakeByte	(0X5CA2);
	MakeByte	(0X5CA3);
	MakeByte	(0X5CA4);
	MakeByte	(0X5CA5);
	MakeByte	(0X5CA6);
	MakeByte	(0X5CA7);
	MakeByte	(0X5CA8);
	MakeByte	(0X5CA9);
	MakeByte	(0X5CAA);
	MakeByte	(0X5CAB);
	MakeByte	(0X5CAC);
	MakeByte	(0X5CAD);
	MakeByte	(0X5CAE);
	MakeByte	(0X5CAF);
	MakeRptCmt	(0X5CB0,	"jumptable 00005C8C case 0");
	MakeCode	(0X5CB0);
	MakeRptCmt	(0X5CBE,	"jumptable 00005C8C cases 1,3-5,7-9,11,12,15,17-19,21,23");
	MakeCode	(0X5CBE);
	MakeRptCmt	(0X5CC4,	"jumptable 00005C8C case 10");
	MakeCode	(0X5CC4);
	MakeRptCmt	(0X5CCA,	"jumptable 00005C8C cases 2,13,16,22");
	MakeCode	(0X5CCA);
	MakeRptCmt	(0X5CD0,	"jumptable 00005C8C case 24");
	MakeCode	(0X5CD0);
	MakeRptCmt	(0X5CD6,	"jumptable 00005C8C cases 25,28");
	MakeCode	(0X5CD6);
	MakeRptCmt	(0X5CE2,	"jumptable 00005C8C case 31");
	MakeCode	(0X5CE2);
	MakeCode	(x=0X5CEA);
	OpHex		(x,	1);
	MakeComm	(0X5CEE,	"switch 24 cases ");
	MakeComm	(0X5CF2,	"switch jump");
	MakeComm	(0X5CF6,	"jump table for switch statement");
	MakeByte	(0X5CF6);
	MakeName	(0X5CF6,	"jpt_5CF2");
	MakeByte	(0X5CF7);
	MakeByte	(0X5CF8);
	MakeByte	(0X5CF9);
	MakeByte	(0X5CFA);
	MakeByte	(0X5CFB);
	MakeByte	(0X5CFC);
	MakeByte	(0X5CFD);
	MakeByte	(0X5CFE);
	MakeByte	(0X5CFF);
	MakeByte	(0X5D00);
	MakeByte	(0X5D01);
	MakeByte	(0X5D02);
	MakeByte	(0X5D03);
	MakeByte	(0X5D04);
	MakeByte	(0X5D05);
	MakeByte	(0X5D06);
	MakeByte	(0X5D07);
	MakeByte	(0X5D08);
	MakeByte	(0X5D09);
	MakeByte	(0X5D0A);
	MakeByte	(0X5D0B);
	MakeByte	(0X5D0C);
	MakeByte	(0X5D0D);
	MakeRptCmt	(0X5D0E,	"jumptable 00005CF2 cases 1,3-5,7-9,11,12,15,17-19,21,23");
	MakeCode	(0X5D0E);
	MakeRptCmt	(0X5D14,	"jumptable 00005CF2 case 10");
	MakeCode	(0X5D14);
	MakeRptCmt	(0X5D1E,	"jumptable 00005CF2 cases 2,13,16,22");
	MakeCode	(0X5D1E);
	MakeRptCmt	(0X5D28,	"jumptable 00005C8C default case");
	MakeCode	(0X5D28);
	MakeName	(0X5D28,	"def_5CF2");
	MakeCode	(0X5D2A);
	MakeCode	(x=0X5D2C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5D3A);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5D42);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5D48);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5D5E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5D66);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X5D6C);
	MakeCode	(x=0X5D70);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5D74);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5D7C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5D7E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5D80);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5D88);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5D90);
	OpOff		(x,	1,	0X10003708);
	OpOff		(x,	129,	0X10003708);
	MakeCode	(x=0X5DC0);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5DC4);
	OpStkvar	(x,	1);
	MakeCode	(0X5DC8);
	MakeCode	(x=0X5DCC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5DD0);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5DD8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5DDA);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X5DDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5DE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5DEC);
	OpOff		(x,	1,	0X10003908);
	OpOff		(x,	129,	0X10003908);
	MakeCode	(x=0X5E1C);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeDword	(0X5E20);
	MakeDword	(x=0X5E24);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5E28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5E2C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5E30);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5E34);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5E38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5E3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5E40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5E44);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5E48);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X5E4C);
	MakeDword	(0X5E50);
	MakeDword	(0X5E54);
	MakeDword	(x=0X5E58);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X5E5C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X5E60);
	MakeCode	(x=0X5E66);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5E6A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5E70);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X5E72);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5E76);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X5E78);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5E7C);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0X5E7E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5E84);
	OpStkvar	(x,	1);
	MakeCode	(0X5E96);
	MakeCode	(x=0X5E98);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5EA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5EA6);
	OpHex		(x,	1);
	MakeCode	(x=0X5EAC);
	OpHex		(x,	1);
	MakeCode	(x=0X5EB0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5EDE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5EE2);
	OpOff		(x,	1,	0X1000000E);
	OpOff		(x,	129,	0X1000000E);
	MakeCode	(x=0X5EE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5EF4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5EFA);
	OpStkvar	(x,	1);
	MakeCode	(0X5F0C);
	MakeCode	(x=0X5F0E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5F12);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5F14);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X5F16);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5F1A);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X5F1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5F20);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X5F22);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5F28);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5F2C);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X5F2E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5F32);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5F34);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X5F36);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5F3A);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X5F3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5F52);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5F56);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X5F58);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5F7C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5F7E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5F84);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X5F88);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5F8C);
	OpStkvar	(x,	1);
	MakeCode	(0X5FA2);
	MakeCode	(x=0X5FA6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5FC0);
	OpStkvar	(x,	1);
	MakeCode	(0X5FCA);
	MakeCode	(x=0X5FCC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X5FD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5FD8);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X5FDA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5FDE);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X5FE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5FE4);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X5FE6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5FEA);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X5FEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5FF0);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X5FF2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5FF6);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X5FF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X5FFC);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X5FFE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6002);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X6004);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6008);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X600A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X600E);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X6010);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6014);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X6016);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6018);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0X601A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X601E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6030);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6032);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X604C);
	MakeCode	(x=0X6052);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6054);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6056);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X605A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X605E);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X6060);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6064);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X6066);
	OpStkvar	(x,	1);
	MakeCode	(x=0X606C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6070);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X6072);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6076);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0X6078);
	OpStkvar	(x,	1);
	MakeCode	(x=0X607C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X607E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X6080);
	OpStkvar	(x,	1);
	MakeCode	(x=0X609A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X60B6);
	MakeCode	(x=0X60B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X60C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X60C4);
	OpStkvar	(x,	1);
	MakeCode	(0X60D6);
	MakeCode	(x=0X60D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X60E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X60EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X60F2);
	OpStkvar	(x,	1);
	MakeCode	(0X6104);
	MakeCode	(x=0X6106);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X610C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X610E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6112);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6116);
	OpStkvar	(x,	1);
	MakeCode	(x=0X611A);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X611C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6120);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X6122);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6128);
	OpStkvar	(x,	1);
	MakeCode	(0X6138);
	MakeCode	(x=0X613C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6140);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6144);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X614A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X614E);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X6154);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6158);
	OpHex		(x,	1);
	MakeCode	(x=0X615C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6160);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X6166);
	OpStkvar	(x,	1);
	MakeCode	(x=0X616A);
	OpHex		(x,	1);
	MakeCode	(x=0X616E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6172);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X6178);
	OpStkvar	(x,	1);
	MakeCode	(x=0X617C);
	OpHex		(x,	1);
	MakeCode	(x=0X6180);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6184);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X618A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X618E);
	OpHex		(x,	1);
	MakeCode	(x=0X6192);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6196);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X619C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X61A0);
	OpHex		(x,	1);
	MakeCode	(x=0X61A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X61A8);
	OpStkvar	(x,	1);
	MakeCode	(0X61BC);
	MakeCode	(x=0X61C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X61C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X61CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X61D0);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X61D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X61DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X61E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X61E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X61E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X61EA);
	OpStkvar	(x,	1);
	MakeCode	(0X61FE);
	MakeCode	(x=0X6202);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6208);
	OpStkvar	(x,	1);
	MakeCode	(x=0X620C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6212);
	OpStkvar	(x,	1);
	MakeCode	(0X6226);
	MakeCode	(x=0X6228);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6230);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6234);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X6236);
	OpStkvar	(x,	1);
	MakeCode	(x=0X623A);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X623C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6240);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X6242);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6248);
	OpStkvar	(x,	1);
	MakeDword	(x=0X6258);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X625C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6260);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6264);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6268);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X626C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6270);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6274);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6278);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X627C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6280);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6284);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X6288);
	MakeCode	(0X628C);
	MakeCode	(x=0X6290);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6294);
	OpStkvar	(x,	1);
	MakeCode	(x=0X629A);
	OpStkvar	(x,	1);
	MakeCode	(0X62AE);
	MakeCode	(x=0X62B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X62B6);
	OpStkvar	(x,	1);
	MakeCode	(0X62C4);
	MakeCode	(x=0X62C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X62D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X62D8);
	OpStkvar	(x,	1);
	MakeCode	(0X62EC);
	MakeCode	(0X6304);
	MakeCode	(x=0X630A);
	OpStkvar	(x,	1);
	MakeCode	(0X631E);
	MakeCode	(x=0X6324);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6328);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X632E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X6332);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6338);
	OpStkvar	(x,	1);
	MakeCode	(x=0X633E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6344);
	OpStkvar	(x,	1);
	MakeCode	(x=0X634C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6352);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6358);
	OpStkvar	(x,	1);
	MakeCode	(0X6368);
	MakeCode	(x=0X636A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X636C);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X6370);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X638A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6392);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6398);
	OpStkvar	(x,	1);
	MakeCode	(0X63AC);
	MakeCode	(x=0X63AE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X63B4);
	OpOff		(x,	1,	0X10000160);
	OpOff		(x,	129,	0X10000160);
	MakeComm	(0X63BA,	"p_err");
	MakeCode	(x=0X63BA);
	OpStkvar	(x,	1);
	MakeComm	(0X63CA,	"p_err");
	MakeCode	(x=0X63CA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X63D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X63D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X63D8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X63E6);
	MakeCode	(x=0X63FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6400);
	OpOff		(x,	1,	0X10000160);
	OpOff		(x,	129,	0X10000160);
	MakeCode	(x=0X6402);
	OpStkvar	(x,	1);
	MakeCode	(0X640A);
	MakeCode	(x=0X6420);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6424);
	OpOff		(x,	1,	0X10000160);
	OpOff		(x,	129,	0X10000160);
	MakeCode	(x=0X6426);
	OpStkvar	(x,	1);
	MakeCode	(x=0X642E);
	OpOff		(x,	1,	0X10000160);
	OpOff		(x,	129,	0X10000160);
	MakeCode	(x=0X6436);
	OpOff		(x,	1,	0X10000160);
	OpOff		(x,	129,	0X10000160);
	MakeCode	(0X643C);
	MakeCode	(x=0X6440);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6442);
	OpStkvar	(x,	1);
	MakeCode	(0X6452);
	MakeCode	(x=0X645A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X645E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6460);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X6462);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6472);
	OpOff		(x,	1,	0X10002A50);
	OpOff		(x,	129,	0X10002A50);
	MakeCode	(x=0X647C);
	OpOff		(x,	1,	0X10002A50);
	OpOff		(x,	129,	0X10002A50);
	MakeCode	(x=0X6480);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X64A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X64A6);
	OpOff		(x,	1,	0X10002A50);
	OpOff		(x,	129,	0X10002A50);
	MakeCode	(x=0X64AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X64BC);
	OpStkvar	(x,	1);
	MakeCode	(0X64CA);
	MakeCode	(x=0X64CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X64D2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X64D4);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X64D6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X64EA);
	OpOff		(x,	1,	0X10002B74);
	OpOff		(x,	129,	0X10002B74);
	MakeCode	(x=0X64F6);
	OpOff		(x,	1,	0X10002B74);
	OpOff		(x,	129,	0X10002B74);
	MakeCode	(x=0X64FC);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X64FE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6502);
	OpOff		(x,	1,	0X10006850);
	OpOff		(x,	129,	0X10006850);
	MakeCode	(x=0X6504);
	OpOff		(x,	1,	0X10006850);
	OpOff		(x,	129,	0X10006850);
	MakeCode	(x=0X650E);
	OpOff		(x,	1,	0X10006850);
	OpOff		(x,	129,	0X10006850);
	MakeCode	(x=0X6514);
	OpOff		(x,	1,	0X10006850);
	OpOff		(x,	129,	0X10006850);
	MakeCode	(x=0X651C);
	OpOff		(x,	1,	0X10006850);
	OpOff		(x,	129,	0X10006850);
	MakeCode	(0X652C);
	MakeCode	(x=0X652E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6530);
	OpOff		(x,	1,	0X10002B74);
	OpOff		(x,	129,	0X10002B74);
	MakeCode	(x=0X6538);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6548);
	OpStkvar	(x,	1);
	MakeCode	(0X6552);
	MakeCode	(x=0X6558);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X655C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X655E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X6560);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6574);
	OpOff		(x,	1,	0X10002D98);
	OpOff		(x,	129,	0X10002D98);
	MakeCode	(x=0X6580);
	OpOff		(x,	1,	0X10002D98);
	OpOff		(x,	129,	0X10002D98);
	MakeCode	(x=0X6586);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X6588);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X658C);
	OpOff		(x,	1,	0X10006A70);
	OpOff		(x,	129,	0X10006A70);
	MakeCode	(x=0X658E);
	OpOff		(x,	1,	0X10006A70);
	OpOff		(x,	129,	0X10006A70);
	MakeCode	(x=0X6598);
	OpOff		(x,	1,	0X10006A70);
	OpOff		(x,	129,	0X10006A70);
	MakeCode	(x=0X65A2);
	OpOff		(x,	1,	0X10006A70);
	OpOff		(x,	129,	0X10006A70);
	MakeCode	(x=0X65AA);
	OpOff		(x,	1,	0X10006A70);
	OpOff		(x,	129,	0X10006A70);
	MakeCode	(0X65BA);
	MakeCode	(x=0X65BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X65BE);
	OpOff		(x,	1,	0X10002D98);
	OpOff		(x,	129,	0X10002D98);
	MakeCode	(x=0X65C6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X65D6);
	OpStkvar	(x,	1);
	MakeCode	(0X65E2);
	MakeCode	(x=0X65E6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X65EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X65EC);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X65F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6600);
	OpOff		(x,	1,	0X10002EBC);
	OpOff		(x,	129,	0X10002EBC);
	MakeCode	(x=0X660A);
	OpOff		(x,	1,	0X10002EBC);
	OpOff		(x,	129,	0X10002EBC);
	MakeCode	(x=0X660E);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X6618);
	OpOff		(x,	1,	0X10003F23);
	OpOff		(x,	129,	0X10003F23);
	MakeCode	(x=0X661C);
	OpHex		(x,	1);
	MakeCode	(x=0X6628);
	OpOff		(x,	1,	0X10003F23);
	OpOff		(x,	129,	0X10003F23);
	MakeCode	(x=0X6632);
	OpOff		(x,	1,	0X10003F23);
	OpOff		(x,	129,	0X10003F23);
	MakeCode	(x=0X663C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X663E);
	OpOff		(x,	1,	0X10002EBC);
	OpOff		(x,	129,	0X10002EBC);
	MakeCode	(x=0X6644);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6654);
	OpStkvar	(x,	1);
	MakeCode	(0X665C);
	MakeCode	(x=0X665E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X6672);
	MakeCode	(x=0X6686);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6688);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(0X668C);
	MakeCode	(x=0X6690);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6694);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6696);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X669A);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X66B2);
	OpOff		(x,	1,	0X10002F20);
	OpOff		(x,	129,	0X10002F20);
	MakeCode	(x=0X66BC);
	OpOff		(x,	1,	0X10002F20);
	OpOff		(x,	129,	0X10002F20);
	MakeCode	(x=0X66C2);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X66C6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X66CA);
	OpOff		(x,	1,	0X100067F0);
	OpOff		(x,	129,	0X100067F0);
	MakeCode	(x=0X66CC);
	OpOff		(x,	1,	0X100067F0);
	OpOff		(x,	129,	0X100067F0);
	MakeCode	(x=0X66D6);
	OpOff		(x,	1,	0X100067F0);
	OpOff		(x,	129,	0X100067F0);
	MakeCode	(x=0X66DC);
	OpOff		(x,	1,	0X100067F0);
	OpOff		(x,	129,	0X100067F0);
	MakeCode	(x=0X66E4);
	OpOff		(x,	1,	0X100067F0);
	OpOff		(x,	129,	0X100067F0);
	MakeDword	(0X66EC);
	MakeDword	(x=0X66F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X66F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X66F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X66FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6700);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6704);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6708);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X670C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6710);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X6714);
	MakeDword	(0X671C);
	MakeDword	(x=0X6720);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X6724);
	MakeCode	(0X672E);
	MakeCode	(x=0X6730);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6732);
	OpOff		(x,	1,	0X10002F20);
	OpOff		(x,	129,	0X10002F20);
	MakeCode	(x=0X673A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X674A);
	OpStkvar	(x,	1);
	MakeCode	(0X6754);
	MakeCode	(x=0X6758);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6760);
	OpOff		(x,	1,	0X10006760);
	OpOff		(x,	129,	0X10006760);
	MakeCode	(x=0X6764);
	OpOff		(x,	1,	0X10006760);
	OpOff		(x,	129,	0X10006760);
	MakeCode	(x=0X676A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X676E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X677A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X677E);
	MakeRptCmt	(0X67A8,	"jumptable 00006832 default case");
	MakeName	(0X67A8,	"def_6832");
	MakeCode	(0X67B0);
	MakeCode	(0X67BA);
	MakeCode	(0X67C0);
	MakeCode	(0X67CC);
	MakeCode	(0X67DC);
	MakeCode	(0X67EC);
	MakeCode	(0X6806);
	MakeCode	(0X6816);
	MakeComm	(0X682C,	"switch 5 cases ");
	MakeComm	(0X6832,	"switch jump");
	MakeComm	(0X6836,	"jump table for switch statement");
	MakeByte	(0X6836);
	MakeName	(0X6836,	"jpt_6832");
	MakeByte	(0X6837);
	MakeByte	(0X6838);
	MakeByte	(0X6839);
	MakeByte	(0X683A);
	MakeRptCmt	(0X683C,	"jumptable 00006832 case 2");
	MakeCode	(0X683C);
	MakeRptCmt	(0X683E,	"jumptable 00006832 case 3");
	MakeCode	(0X683E);
	MakeCode	(x=0X684A);
	OpHex		(x,	1);
	MakeCode	(0X6852);
	MakeCode	(x=0X6854);
	OpHex		(x,	1);
	MakeRptCmt	(0X685A,	"jumptable 00006832 case 4");
	MakeCode	(0X685A);
	MakeCode	(0X6870);
	MakeCode	(x=0X6874);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X687C,	"jumptable 00006832 case 5");
	MakeCode	(0X687C);
	MakeRptCmt	(0X6882,	"jumptable 00006832 case 6");
	MakeCode	(0X6882);
	MakeCode	(x=0X6886);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6892);
	OpHex		(x,	1);
	MakeCode	(x=0X689A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X68A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X68A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X68A8);
	OpHex		(x,	1);
	MakeCode	(x=0X68AE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X68B0);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X68B2);
	OpHex		(x,	1);
	MakeCode	(x=0X68B6);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X68BE);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(0X68CA);
	MakeCode	(x=0X68CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X68D6);
	OpOff		(x,	1,	0X10006130);
	OpOff		(x,	129,	0X10006130);
	MakeCode	(x=0X68DA);
	OpOff		(x,	1,	0X10006130);
	OpOff		(x,	129,	0X10006130);
	MakeCode	(x=0X68E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X68E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X68F4);
	MakeCode	(x=0X693E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X695C);
	MakeCode	(x=0X6966);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X697E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6986);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X698A);
	OpHex		(x,	1);
	MakeCode	(x=0X6990);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6994);
	OpHex		(x,	1);
	MakeCode	(0X69A4);
	MakeCode	(0X69A8);
	MakeCode	(x=0X69AE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X69B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X69B4);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X69B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X69CC);
	OpOff		(x,	1,	0X10003258);
	OpOff		(x,	129,	0X10003258);
	MakeCode	(x=0X69D8);
	OpOff		(x,	1,	0X10003258);
	OpOff		(x,	129,	0X10003258);
	MakeCode	(x=0X69DE);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X69E2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X69E6);
	OpOff		(x,	1,	0X10006740);
	OpOff		(x,	129,	0X10006740);
	MakeCode	(x=0X69E8);
	OpOff		(x,	1,	0X10006740);
	OpOff		(x,	129,	0X10006740);
	MakeCode	(x=0X69F2);
	OpOff		(x,	1,	0X10006740);
	OpOff		(x,	129,	0X10006740);
	MakeCode	(x=0X69FC);
	OpOff		(x,	1,	0X10006740);
	OpOff		(x,	129,	0X10006740);
	MakeCode	(x=0X6A04);
	OpOff		(x,	1,	0X10006740);
	OpOff		(x,	129,	0X10006740);
	MakeCode	(0X6A14);
	MakeCode	(x=0X6A16);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6A18);
	OpOff		(x,	1,	0X10003258);
	OpOff		(x,	129,	0X10003258);
	MakeCode	(x=0X6A20);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6A30);
	OpStkvar	(x,	1);
	MakeCode	(0X6A38);
	MakeCode	(x=0X6A3C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6A40);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6A42);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X6A46);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6A54);
	OpOff		(x,	1,	0X1000337C);
	OpOff		(x,	129,	0X1000337C);
	MakeCode	(x=0X6A5E);
	OpOff		(x,	1,	0X1000337C);
	OpOff		(x,	129,	0X1000337C);
	MakeCode	(x=0X6A62);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X6A70);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6A74);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X6A76);
	OpHex		(x,	1);
	MakeCode	(x=0X6A7A);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X6A8A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X6A8C);
	OpOff		(x,	1,	0X1000337C);
	OpOff		(x,	129,	0X1000337C);
	MakeCode	(x=0X6A8E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6A9E);
	OpStkvar	(x,	1);
	MakeCode	(0X6AA8);
	MakeCode	(x=0X6AAA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6AB0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6AB4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6AC6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6ACC);
	OpOff		(x,	1,	0X10000489);
	OpOff		(x,	129,	0X10000489);
	MakeCode	(x=0X6AE6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X6AFA);
	MakeCode	(0X6B14);
	MakeCode	(x=0X6B1C);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeDword	(x=0X6B28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B2C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B30);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B34);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B44);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B48);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B4C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B50);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B54);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X6B58,	0X6B5D);
	MakeName	(0X6B58,	"a_2x");
	MakeByte	(0X6B5D);
	MakeArray	(0X6B5D,	0X3);
	MakeDword	(x=0X6B60);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B68);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X6B6C);
	MakeDword	(x=0X6B70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6B78);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X6B7C);
	MakeCode	(0X6B7E);
	MakeCode	(x=0X6B8E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X6B9C);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X6BA2);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X6BAA);
	OpOff		(x,	1,	0X100000C8);
	OpOff		(x,	129,	0X100000C8);
	MakeCode	(x=0X6BB8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6BBC);
	OpOff		(x,	1,	0X10006850);
	OpOff		(x,	129,	0X10006850);
	MakeDword	(x=0X6BF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X6BF4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6C00);
	OpHex		(x,	1);
	MakeCode	(x=0X6C08);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X6C12);
	MakeCode	(x=0X6C16);
	OpHex		(x,	1);
	MakeCode	(x=0X6C1C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6C28);
	OpHex		(x,	1);
	MakeCode	(x=0X6C30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X6C3A);
	MakeCode	(x=0X6C3E);
	OpHex		(x,	1);
	MakeCode	(x=0X6C44);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6C50);
	OpHex		(x,	1);
	MakeCode	(x=0X6C58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X6C62);
	MakeCode	(x=0X6C66);
	OpHex		(x,	1);
	MakeCode	(x=0X6C6C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6C76);
	OpHex		(x,	1);
	MakeCode	(0X6C7E);
	MakeCode	(x=0X6C80);
	OpHex		(x,	1);
	MakeCode	(x=0X6C88);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6C92);
	OpHex		(x,	1);
	MakeCode	(0X6C98);
	MakeCode	(x=0X6C9A);
	OpHex		(x,	1);
	MakeCode	(0X6CA0);
	MakeCode	(x=0X6CA4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6CAA);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(0X6CC8);
	MakeCode	(x=0X6CCE);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6CD2);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeCode	(0X6CDA);
	MakeCode	(x=0X6D0E);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeComm	(0X6D12,	"p_err");
	MakeCode	(x=0X6D18);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6D1A);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeCode	(0X6D20);
	MakeComm	(0X6D50,	"p_err");
	MakeCode	(x=0X6D56);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6D6A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6D76);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6D7C);
	OpOff		(x,	1,	0X1000007E);
	OpOff		(x,	129,	0X1000007E);
	MakeCode	(0X6D82);
	MakeCode	(0X6DCC);
	MakeCode	(0X6DFE);
	MakeCode	(0X6E12);
	MakeCode	(0X6E8C);
	MakeCode	(x=0X6E90);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X6E96);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6E9A);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6EA6);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6EB6);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeComm	(0X6EC2,	"switch 5 cases ");
	MakeComm	(0X6EC8,	"switch jump");
	MakeComm	(0X6ECC,	"jump table for switch statement");
	MakeByte	(0X6ECC);
	MakeName	(0X6ECC,	"jpt_6EC8");
	MakeByte	(0X6ECD);
	MakeByte	(0X6ECE);
	MakeByte	(0X6ECF);
	MakeByte	(0X6ED0);
	MakeRptCmt	(0X6ED2,	"jumptable 00006EC8 case 0");
	MakeCode	(x=0X6ED2);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6EE2);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(0X6EE8);
	MakeCode	(x=0X6EEC);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(0X6EF2);
	MakeCode	(x=0X6EFA);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(0X6F00);
	MakeCode	(x=0X6F02);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeRptCmt	(0X6F06,	"jumptable 00006EC8 case 1");
	MakeCode	(0X6F06);
	MakeCode	(x=0X6F0C);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6F1A);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6F1E);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6F20);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeRptCmt	(0X6F26,	"jumptable 00006EC8 case 2");
	MakeCode	(0X6F26);
	MakeCode	(x=0X6F2C);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6F3A);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6F3E);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6F40);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeRptCmt	(0X6F46,	"jumptable 00006EC8 case 3");
	MakeCode	(0X6F46);
	MakeCode	(x=0X6F4E);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6F5C);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6F60);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6F62);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeRptCmt	(0X6F68,	"jumptable 00006EC8 case 4");
	MakeCode	(0X6F68);
	MakeCode	(x=0X6F6E);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(0X6F7C);
	MakeCode	(0X6F7E);
	MakeCode	(x=0X6F80);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6F84);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6F88);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X6F8A);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeRptCmt	(0X6F8C,	"jumptable 00006EC8 default case");
	MakeCode	(x=0X6F8C);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeName	(0X6F8C,	"def_6EC8");
	MakeCode	(0X6F92);
	MakeCode	(0X6F9A);
	MakeCode	(0X6FA0);
	MakeCode	(0X6FC4);
	MakeDword	(x=0X6FDC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X6FE0);
	MakeDword	(x=0X6FE4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X6FE8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X6FEC);
	MakeCode	(0X6FFE);
	MakeCode	(0X7014);
	MakeCode	(x=0X7016);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7018);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7020);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7026);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7028);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeComm	(0X702A,	"p_err");
	MakeCode	(x=0X7030);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7032);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeComm	(0X703A,	"p_err");
	MakeCode	(x=0X7040);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X704A);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X705C);
	OpHex		(x,	1);
	MakeCode	(0X706C);
	MakeCode	(x=0X7074);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(0X7078);
	MakeCode	(x=0X707A);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X707C);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(0X7082);
	MakeCode	(x=0X7084);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7088);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X708C);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7090);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X709C);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X709E);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X70A0);
	OpHex		(x,	1);
	MakeCode	(x=0X70A4);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X70A8);
	OpHex		(x,	1);
	MakeCode	(x=0X70AC);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(0X70B4);
	MakeCode	(x=0X70BA);
	OpHex		(x,	1);
	MakeCode	(x=0X70BE);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X70CA);
	OpHex		(x,	1);
	MakeCode	(x=0X70D0);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X70D2);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(0X70D6);
	MakeCode	(0X70DC);
	MakeCode	(x=0X70DE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X70E8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X70EA);
	OpHex		(x,	1);
	MakeCode	(x=0X7106);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7116);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7118);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7122);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7124);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X712E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7130);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X713A);
	MakeCode	(0X7146);
	MakeCode	(x=0X7148);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7152);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7156);
	OpHex		(x,	1);
	MakeCode	(x=0X7172);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7184);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7186);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7192);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7194);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X71A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X71A2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X71AE);
	MakeCode	(x=0X71BA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X71BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X71BE);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X71C0);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X71C2);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X71C6);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X71CE);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X71D4);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(0X71D8);
	MakeCode	(x=0X71DE);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X71E0);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X71E6);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X71EC);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X71EE);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X71F2);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(0X71FE);
	MakeCode	(x=0X7204);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7208);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X720C);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X720E);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(0X7212);
	MakeCode	(x=0X7218);
	OpStkvar	(x,	1);
	MakeCode	(x=0X721A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7236);
	OpHex		(x,	1);
	MakeCode	(x=0X7240);
	OpHex		(x,	1);
	MakeCode	(x=0X7248);
	OpHex		(x,	1);
	MakeCode	(x=0X7250);
	OpHex		(x,	1);
	MakeCode	(x=0X7258);
	OpHex		(x,	1);
	MakeCode	(x=0X7260);
	OpHex		(x,	1);
	MakeCode	(x=0X7268);
	OpHex		(x,	1);
	MakeCode	(x=0X7270);
	OpHex		(x,	1);
	MakeCode	(x=0X7278);
	OpHex		(x,	1);
	MakeCode	(x=0X7280);
	OpHex		(x,	1);
	MakeCode	(x=0X7288);
	OpHex		(x,	1);
	MakeCode	(x=0X7296);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X72A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X72AA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X72BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X72C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X72D2);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X72D8);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X72E6);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X72EC);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X72F2);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X72FC);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X7302);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X7308);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X7312);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X7318);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X731E);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X7328);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X732E);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X7334);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X734A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7354);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X735A);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X7368);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X736E);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X7374);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X737E);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X7384);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X738A);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X7394);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X739A);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X73A0);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X73AA);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X73B0);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(0X73B8);
	MakeCode	(x=0X73BA);
	OpOff		(x,	1,	0X100001D2);
	OpOff		(x,	129,	0X100001D2);
	MakeCode	(x=0X73C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X73D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X73E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X73EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X73F2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X7410);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X7414);
	MakeDword	(x=0X7418);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X741C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X7420);
	MakeDword	(x=0X7424);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X7428);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X742C);
	MakeCode	(x=0X743A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X7456);
	MakeCode	(0X746C);
	MakeCode	(0X7486);
	MakeCode	(0X748A);
	MakeCode	(0X74BC);
	MakeCode	(0X74D0);
	MakeCode	(x=0X74DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X74DE);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X74E0);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X74F6);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X74FE);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7502);
	OpHex		(x,	1);
	MakeCode	(x=0X751E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7526);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X754A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7556);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X755A);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeComm	(0X7562,	"channel");
	MakeCode	(x=0X7572);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7584);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7590);
	OpHex		(x,	1);
	MakeCode	(0X7596);
	MakeCode	(x=0X7598);
	OpHex		(x,	1);
	MakeCode	(x=0X759E);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X75A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X75B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X75D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X75D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X75D8);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X75E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X75F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X75F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7606);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7608);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7612);
	OpStkvar	(x,	1);
	MakeCode	(x=0X763A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X763C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X763E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7642);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7648);
	OpOff		(x,	1,	0X100001A6);
	OpOff		(x,	129,	0X100001A6);
	MakeCode	(x=0X7650);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7656);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X765A);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X765E);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X766A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X766C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X766E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7674);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7676);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X7678);
	OpStkvar	(x,	1);
	MakeCode	(x=0X767A);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X767C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7680);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X768C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7694);
	OpStkvar	(x,	1);
	MakeCode	(0X769E);
	MakeCode	(x=0X76A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X76A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X76B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X76B8);
	OpHex		(x,	1);
	MakeCode	(x=0X76C0);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X76C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X76CE);
	OpHex		(x,	1);
	MakeCode	(x=0X76DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X76EC);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X76F6);
	OpHex		(x,	1);
	MakeCode	(x=0X7706);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7710);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7718);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X771A);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X771E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7720);
	OpOff		(x,	1,	0X100001AE);
	OpOff		(x,	129,	0X100001AE);
	MakeCode	(x=0X772E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7732);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7736);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X773A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X773E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X774E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7764);
	OpStkvar	(x,	1);
	MakeCode	(x=0X776A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X776E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7770);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7776);
	OpStkvar	(x,	1);
	MakeCode	(x=0X777C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7780);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7782);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7786);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7788);
	OpStkvar	(x,	1);
	MakeCode	(x=0X778C);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7790);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7794);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X779C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X77A2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X77AA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X77AE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X77C6);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X77C8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X77D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X77F2);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X77F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X77FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7800);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7802);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7806);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7808);
	OpStkvar	(x,	1);
	MakeCode	(0X780E);
	MakeDword	(x=0X7810);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X7814);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X7818);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X781C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X7820);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X7824);
	MakeDword	(x=0X7828);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X782C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X7830);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X7834);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X7838);
	MakeCode	(0X783C);
	MakeCode	(0X783E);
	MakeCode	(0X7840);
	MakeCode	(x=0X7842);
	OpStkvar	(x,	1);
	MakeCode	(x=0X784C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7854);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7856);
	OpStkvar	(x,	1);
	MakeCode	(x=0X785E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7860);
	OpStkvar	(x,	1);
	MakeCode	(x=0X786A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X786E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7882);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(0X7886);
	MakeCode	(x=0X788C);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7892);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7898);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X78B0);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X78B4);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X78B8);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X78CC);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X78CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X78D4);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(0X78D8);
	MakeCode	(0X78DA);
	MakeCode	(0X78DC);
	MakeCode	(0X78DE);
	MakeCode	(x=0X78EC);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X78EE);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7902);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X790A);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7914);
	OpHex		(x,	1);
	MakeCode	(x=0X791C);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(0X7920);
	MakeCode	(0X7930);
	MakeCode	(x=0X7944);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(0X7948);
	MakeCode	(x=0X7950);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7952);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X795C);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7962);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7966);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(0X796A);
	MakeCode	(x=0X797E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(0X7982);
	MakeCode	(x=0X798A);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X798C);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7996);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X799C);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X79A0);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(0X79A4);
	MakeCode	(x=0X79AC);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X79AE);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X79B6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X79C4);
	OpStkvar	(x,	1);
	MakeCode	(0X79E2);
	MakeCode	(x=0X79E4);
	OpStkvar	(x,	1);
	MakeCode	(0X7A02);
	MakeCode	(x=0X7A06);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7A50);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A54);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A58);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A60);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A64);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A68);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A6C);
	OpStkvar	(x,	1);
	MakeCode	(0X7A72);
	MakeCode	(x=0X7A74);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A7A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A80);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A86);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A92);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A98);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7A9C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AA2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7AA8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7ABE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AC8);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7ACA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AD6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7ADA);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7ADC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AE0);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7AE2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AE6);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7AE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7AEC);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7B00);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7B04);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B0A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B0E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7B10);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B14);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7B16);
	OpStkvar	(x,	1);
	MakeCode	(0X7B1C);
	MakeCode	(x=0X7B1E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B28);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B30);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7B32);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B3A);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7B3C);
	OpStkvar	(x,	1);
	MakeCode	(0X7B46);
	MakeCode	(x=0X7B48);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7B4A);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7B4C);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7B4E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7B5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B64);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7B66);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7B68);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B6E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B76);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7B8E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7B90);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7B98);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7BAA);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7BAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7BB4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7BC6);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7BC8);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7BCA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7BD4);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X7BDC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7BE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7BEA);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7BEC);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7BF4);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7BFA);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7C16);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7C18);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7C1A);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7C34);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7C3A);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7C42);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7C44);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7C4A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7C4C);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7C50);
	OpHex		(x,	1);
	MakeCode	(0X7C56);
	MakeCode	(x=0X7C58);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7C5A);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7C5C);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7C5E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7C60);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7C62);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7C66);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7C6C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7C78);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7C7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7C80);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7C84);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7C88);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7C8C);
	OpStkvar	(x,	1);
	MakeDword	(0X7C9C);
	MakeDword	(x=0X7CA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X7CA4);
	MakeDword	(x=0X7CA8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X7CAC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X7CB0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X7CB4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X7CB8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X7CBC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X7CC0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X7CC4);
	MakeCode	(0X7CC6);
	MakeCode	(x=0X7CC8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7CCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CD0);
	OpOff		(x,	1,	0X10003A12);
	OpOff		(x,	129,	0X10003A12);
	MakeCode	(x=0X7CD2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CD6);
	OpOff		(x,	1,	0X10003A12);
	OpOff		(x,	129,	0X10003A12);
	MakeCode	(x=0X7CD8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CDC);
	OpOff		(x,	1,	0X10003A12);
	OpOff		(x,	129,	0X10003A12);
	MakeCode	(x=0X7CDE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CE2);
	OpOff		(x,	1,	0X10003A12);
	OpOff		(x,	129,	0X10003A12);
	MakeCode	(x=0X7CE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CF2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7CF6);
	OpOff		(x,	1,	0X10003A12);
	OpOff		(x,	129,	0X10003A12);
	MakeCode	(x=0X7CF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D06);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D1A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D20);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D24);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D28);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D30);
	OpHex		(x,	1);
	MakeCode	(x=0X7D34);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D38);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D40);
	OpHex		(x,	1);
	MakeCode	(x=0X7D44);
	OpStkvar	(x,	1);
	MakeCode	(0X7D4A);
	MakeCode	(x=0X7D4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D50);
	OpHex		(x,	1);
	MakeCode	(x=0X7D54);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D5E);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7D62);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D66);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D6A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7D6E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7D92);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D98);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7D9E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7DA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7DAA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7DB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7DB6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7DC6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7DCA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7DD6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7DE2);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7DE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7DEC);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7E04);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7E0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7E0E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X7E14);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7E16);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7E1E);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7E24);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7E40);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7E42);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7E44);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7E5E);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7E66);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7E6C);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7E70);
	OpHex		(x,	1);
	MakeCode	(x=0X7E74);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7E76);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7E78);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7E7C);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X7E84);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7E8C);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7E90);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7E94);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X7E9C);
	MakeCode	(0X7E9E);
	MakeCode	(x=0X7EA0);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7EB2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7EB6);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0X7EC4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7EC8);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7ED0);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7ED2);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7EE8);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7EF4);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7F00);
	OpHex		(x,	1);
	MakeCode	(x=0X7F08);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7F0A);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7F1A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7F22);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7F2A);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7F32);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X7F36);
	MakeCode	(0X7F38);
	MakeCode	(x=0X7F3E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7F4A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7F50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7F58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7F5A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7F64);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7F68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7F72);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X7F7E);
	MakeCode	(x=0X7F86);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X7F8C);
	MakeCode	(0X7F92);
	MakeCode	(0X7F96);
	MakeCode	(0X7F9E);
	MakeCode	(x=0X7FA4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X7FAC);
	MakeCode	(x=0X7FB0);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X7FB8);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7FC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7FC2);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7FCC);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X7FD4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7FD6);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7FDC);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7FDE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7FE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X7FE4);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7FE8);
	OpOff		(x,	1,	0X10003A08);
	OpOff		(x,	129,	0X10003A08);
	MakeCode	(x=0X7FEA);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7FEE);
	OpOff		(x,	1,	0X10003A08);
	OpOff		(x,	129,	0X10003A08);
	MakeCode	(x=0X7FF0);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7FF6);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X7FF8);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X7FFE);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X8004);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X800E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8012);
	OpOff		(x,	1,	0X100033D0);
	OpOff		(x,	129,	0X100033D0);
	MakeCode	(x=0X8024);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X8028);
	OpStkvar	(x,	1);
	MakeCode	(0X8030);
	MakeCode	(0X8034);
	MakeCode	(x=0X8036);
	OpStkvar	(x,	1);
	MakeCode	(0X803E);
	MakeCode	(x=0X8040);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8042);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8048);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804C);
	OpOff		(x,	1,	0X100033D0);
	OpOff		(x,	129,	0X100033D0);
	MakeCode	(x=0X8072);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8074);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X807A);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X807E);
	OpHex		(x,	1);
	MakeCode	(x=0X8082);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8084);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X808A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8090);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X8094);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8098);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X80A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X80AA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X80B2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X80C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X80C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X80CC);
	MakeDword	(x=0X80D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X80D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X80D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X80DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X80E0);
	MakeDword	(x=0X80E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X80E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X80EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X80F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X80F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X80F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X80FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8100);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8104);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X8108);
	OpStkvar	(x,	1);
	MakeCode	(x=0X810E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X8114);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X8116);
	OpStkvar	(x,	1);
	MakeCode	(x=0X811C);
	OpOff		(x,	1,	0X10002728);
	OpOff		(x,	129,	0X10002728);
	MakeCode	(x=0X811E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X812A);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X8130);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X8134);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X813E);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeCode	(x=0X8144);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeComm	(0X8146,	"p_err");
	MakeCode	(x=0X8146);
	OpStkvar	(x,	1);
	MakeCode	(x=0X814A);
	OpOff		(x,	1,	0X10000170);
	OpOff		(x,	129,	0X10000170);
	MakeComm	(0X814C,	"opt");
	MakeComm	(0X814E,	"dly");
	MakeDword	(x=0X8158);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X815C);
	MakeComm	(0X815E,	"minutes");
	MakeCode	(x=0X8160);
	OpStkvar	(x,	1);
	MakeComm	(0X8162,	"opt");
	MakeComm	(0X8166,	"milli");
	MakeComm	(0X8168,	"seconds");
	MakeComm	(0X816A,	"hours");
	MakeCode	(0X8172);
	MakeCode	(x=0X817C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X817E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8182);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8186);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8188);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X81A6);
	MakeCode	(x=0X81B2);
	OpHex		(x,	1);
	MakeCode	(0X81BA);
	MakeCode	(0X81F0);
	MakeCode	(x=0X81FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8210);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8226);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8230);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8238);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8244);
	OpHex		(x,	1);
	MakeCode	(x=0X824E);
	OpHex		(x,	1);
	MakeCode	(0X8260);
	MakeCode	(0X8266);
	MakeCode	(0X826E);
	MakeCode	(x=0X8270);
	OpHex		(x,	1);
	MakeCode	(x=0X827E);
	OpHex		(x,	1);
	MakeCode	(x=0X8286);
	OpHex		(x,	1);
	MakeCode	(x=0X828E);
	OpHex		(x,	1);
	MakeCode	(x=0X8296);
	OpHex		(x,	1);
	MakeCode	(x=0X829C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X829E,	"cnt");
	MakeComm	(0X82A0,	"p_err");
	MakeCode	(x=0X82A2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X82A4,	"p_sem");
	MakeCode	(x=0X82A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X82AE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X82B2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X82B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X82BA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X82C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X82C6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X82EC);
	OpHex		(x,	1);
	MakeCode	(0X82F4);
	MakeCode	(x=0X82F6);
	OpHex		(x,	1);
	MakeCode	(x=0X8304);
	OpHex		(x,	1);
	MakeCode	(0X830C);
	MakeCode	(x=0X830E);
	OpHex		(x,	1);
	MakeCode	(x=0X8320);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X8342);
	MakeCode	(0X834E);
	MakeCode	(x=0X837C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8382);
	OpStkvar	(x,	1);
	MakeCode	(0X83A2);
	MakeCode	(0X83A8);
	MakeCode	(x=0X83AA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8404);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X8478);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X847C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8480);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8484);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8488);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X848C,	0X84AE);
	MakeName	(0X848C,	"aXXXXXXXXXXX");
	MakeArray	(0X84AE,	0X2);
	MakeDword	(0X84B0);
	MakeStr		(0X84B4,	0X84BC);
	MakeName	(0X84B4,	"aAmcSem");
	MakeDword	(x=0X84BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X84BC,	"p_sem");
	MakeDword	(x=0X84C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X84C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X84C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X84CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X84D0);
	MakeCode	(0X84DC);
	MakeCode	(0X84E2);
	MakeCode	(0X84F4);
	MakeCode	(0X8560);
	MakeCode	(0X85BC);
	MakeCode	(x=0X85CA);
	OpHex		(x,	1);
	MakeCode	(x=0X85DA);
	OpHex		(x,	1);
	MakeCode	(x=0X85F2);
	OpHex		(x,	1);
	MakeCode	(x=0X8600);
	OpHex		(x,	1);
	MakeCode	(0X8612);
	MakeCode	(x=0X861C);
	OpHex		(x,	1);
	MakeCode	(x=0X8630);
	OpHex		(x,	1);
	MakeCode	(0X8640);
	MakeCode	(x=0X8646);
	OpHex		(x,	1);
	MakeCode	(x=0X8658);
	OpHex		(x,	1);
	MakeCode	(0X8660);
	MakeCode	(x=0X866E);
	OpHex		(x,	1);
	MakeCode	(0X867C);
	MakeCode	(x=0X868E);
	OpHex		(x,	1);
	MakeCode	(0X869A);
	MakeCode	(x=0X86A8);
	OpHex		(x,	1);
	MakeCode	(x=0X86B0);
	OpHex		(x,	1);
	MakeCode	(x=0X86C0);
	OpHex		(x,	1);
	MakeCode	(x=0X86C8);
	OpHex		(x,	1);
	MakeCode	(x=0X86D0);
	OpHex		(x,	1);
	MakeCode	(0X86D8);
	MakeCode	(x=0X86E6);
	OpHex		(x,	1);
	MakeCode	(x=0X86EE);
	OpHex		(x,	1);
	MakeCode	(x=0X86FE);
	OpHex		(x,	1);
	MakeCode	(x=0X8706);
	OpHex		(x,	1);
	MakeCode	(x=0X870E);
	OpHex		(x,	1);
	MakeCode	(0X8716);
	MakeCode	(0X871C);
	MakeCode	(x=0X8726);
	OpHex		(x,	1);
	MakeCode	(0X8730);
	MakeCode	(0X873E);
	MakeCode	(x=0X8754);
	OpHex		(x,	1);
	MakeCode	(x=0X8774);
	OpHex		(x,	1);
	MakeCode	(x=0X87A6);
	OpHex		(x,	1);
	MakeCode	(x=0X87D4);
	OpHex		(x,	1);
	MakeCode	(0X87FA);
	MakeName	(0X87FA,	"rf_power_unkn1");
	MakeCode	(x=0X8804);
	OpHex		(x,	1);
	MakeCode	(0X8820);
	MakeCode	(x=0X882C);
	OpHex		(x,	1);
	MakeCode	(0X8848);
	MakeCode	(0X884A);
	MakeCode	(x=0X8854);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X885A);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8860);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8872);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8880);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X888A);
	OpHex		(x,	1);
	MakeCode	(0X889A);
	MakeCode	(x=0X88AE);
	OpHex		(x,	1);
	MakeCode	(x=0X88B6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X88B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X88C6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X88D0);
	OpOff		(x,	1,	0X10003B54);
	OpOff		(x,	129,	0X10003B54);
	MakeCode	(x=0X88DA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X88FC);
	MakeCode	(x=0X891A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X891C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X8926);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8934);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X8938);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(0X8940);
	MakeCode	(0X8942);
	MakeCode	(0X8954);
	MakeCode	(0X896C);
	MakeCode	(0X896E);
	MakeCode	(x=0X897C);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(0X8988);
	MakeCode	(x=0X8994);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeDword	(0X89A0);
	MakeDword	(0X89A4);
	MakeDword	(x=0X89A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X89AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X89B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X89B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X89B8);
	MakeCode	(x=0X89BE);
	OpHex		(x,	1);
	MakeCode	(0X89C8);
	MakeCode	(0X89D0);
	MakeCode	(x=0X89DE);
	OpHex		(x,	1);
	MakeCode	(0X89F2);
	MakeCode	(x=0X89FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8A08);
	OpHex		(x,	1);
	MakeCode	(x=0X8A16);
	OpHex		(x,	1);
	MakeCode	(x=0X8A3E);
	OpHex		(x,	1);
	MakeCode	(x=0X8A52);
	OpHex		(x,	1);
	MakeCode	(0X8A58);
	MakeCode	(x=0X8A68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8A7C);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X8A82);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8A8A);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8A90);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8A92);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8A98);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8AA4);
	OpHex		(x,	1);
	MakeCode	(x=0X8AC0);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(0X8AC4);
	MakeCode	(0X8AC8);
	MakeCode	(x=0X8ACC);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X8ACE);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8AD4);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0X8AD8);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8AE0);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8AF4);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8AF8);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X8AFE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8B00);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(x=0X8B08);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8B12);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8B18);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8B1E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8B24);
	OpOff		(x,	1,	0X10003B94);
	OpOff		(x,	129,	0X10003B94);
	MakeCode	(x=0X8B26);
	OpOff		(x,	1,	0X10003B94);
	OpOff		(x,	129,	0X10003B94);
	MakeCode	(x=0X8B2A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8B2C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8B2E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X8B30);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0X8B32);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X8B36);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0X8B38);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X8B3C);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0X8B3E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X8B40);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0X8B42);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X8B46);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0X8B48);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X8B4C);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0X8B4E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X8B52);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0X8B58);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X8B5C);
	OpOff		(x,	1,	0X10003CD4);
	OpOff		(x,	129,	0X10003CD4);
	MakeCode	(x=0X8B62);
	OpOff		(x,	1,	0X10003CD4);
	OpOff		(x,	129,	0X10003CD4);
	MakeCode	(x=0X8B6A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8B6C);
	OpStkvar	(x,	1);
	MakeCode	(0X8B74);
	MakeCode	(0X8B76);
	MakeCode	(x=0X8B7E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8B84);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8B86);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8B92);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8B98);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8B9E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8BA0);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8BA8);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8BAE);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8BBC);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8BC2);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8BC6);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(0X8BD0);
	MakeCode	(x=0X8BD2);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeComm	(0X8BD8,	"switch 7 cases ");
	MakeComm	(0X8BE0,	"switch jump");
	MakeComm	(0X8BE4,	"jump table for switch statement");
	MakeByte	(0X8BE4);
	MakeName	(0X8BE4,	"jpt_8BE0");
	MakeByte	(0X8BE5);
	MakeByte	(0X8BE6);
	MakeByte	(0X8BE7);
	MakeByte	(0X8BE8);
	MakeByte	(0X8BE9);
	MakeByte	(0X8BEA);
	MakeCode	(0X8BEC);
	MakeRptCmt	(0X8BF0,	"jumptable 00008BE0 case 1");
	MakeCode	(0X8BF0);
	MakeCode	(x=0X8BF4);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X8BFA);
	OpHex		(x,	1);
	MakeCode	(x=0X8C04);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeRptCmt	(0X8C0C,	"jumptable 00008BE0 case 2");
	MakeCode	(0X8C0C);
	MakeCode	(x=0X8C10);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X8C12);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8C1A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8C20);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X8C22);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeRptCmt	(0X8C2A,	"jumptable 00008BE0 default case");
	MakeCode	(x=0X8C2A);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeName	(0X8C2A,	"def_8BE0");
	MakeCode	(x=0X8C2E);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeRptCmt	(0X8C34,	"jumptable 00008BE0 case 3");
	MakeCode	(0X8C34);
	MakeCode	(x=0X8C38);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X8C3A);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeRptCmt	(0X8C46,	"jumptable 00008BE0 case 4");
	MakeCode	(0X8C46);
	MakeCode	(x=0X8C4A);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X8C4C);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeRptCmt	(0X8C58,	"jumptable 00008BE0 case 5");
	MakeCode	(0X8C58);
	MakeCode	(x=0X8C5C);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X8C5E);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeRptCmt	(0X8C6A,	"jumptable 00008BE0 case 6");
	MakeCode	(0X8C6A);
	MakeCode	(x=0X8C6E);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X8C70);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(0X8C7C);
	MakeCode	(x=0X8C8C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8CAC);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X8CB0);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X8CC0);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8CC8);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8CD2);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(x=0X8CD4);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X8CDE);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8CFA);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8D0E);
	OpHex		(x,	1);
	MakeCode	(x=0X8D18);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X8D1C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8D22);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X8D3E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X8D48);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8D4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8D58);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X8D5A);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(x=0X8D62);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8D6E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8D7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8D82);
	OpOff		(x,	1,	0X10003BAD);
	OpOff		(x,	129,	0X10003BAD);
	MakeCode	(x=0X8D84);
	OpOff		(x,	1,	0X10003BAD);
	OpOff		(x,	129,	0X10003BAD);
	MakeCode	(x=0X8D86);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X8D8A);
	MakeCode	(x=0X8D8C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8D8E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8D90);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0X8D96);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8D98);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8DA8);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8DAC);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeDword	(0X8DB4);
	MakeDword	(x=0X8DB8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8DBC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8DC0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X8DC4);
	MakeDword	(x=0X8DC8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8DCC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8DD0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8DD4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X8DD8);
	MakeDword	(0X8DDC);
	MakeDword	(x=0X8DE0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8DE4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8DE8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X8DEC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X8DF0);
	MakeCode	(x=0X8DF2);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X8DF6);
	OpOff		(x,	1,	0X10003D54);
	OpOff		(x,	129,	0X10003D54);
	MakeCode	(x=0X8DFA);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X8DFC);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0X8E00);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X8E02);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0X8E06);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X8E08);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0X8E10);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0X8E14);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8E16);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0X8E18);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0X8E20);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0X8E28);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(0X8E38);
	MakeCode	(x=0X8E3A);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0X8E3E);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0X8E42);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X8E66);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X8E70);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0X8E74);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X8E76);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0X8E7A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8E82);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X8E86);
	MakeCode	(0X8E88);
	MakeCode	(0X8F10);
	MakeCode	(0X8F12);
	MakeCode	(x=0X8F20);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8F2E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8F36);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8F40);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8F48);
	OpOff		(x,	1,	0X10003CD4);
	OpOff		(x,	129,	0X10003CD4);
	MakeCode	(x=0X8F4E);
	OpOff		(x,	1,	0X10003CD4);
	OpOff		(x,	129,	0X10003CD4);
	MakeCode	(x=0X8F52);
	OpOff		(x,	1,	0X10003CD4);
	OpOff		(x,	129,	0X10003CD4);
	MakeCode	(x=0X8F5A);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0X8F5E);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0X8F62);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0X8F68);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0X8F8A);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0X8F8E);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0X8F94);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8FA0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8FCE);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X8FF8);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X8FFE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9008);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X900A);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(0X9016);
	MakeCode	(x=0X902E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9030);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9036);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9038);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X903E);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9044);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9048);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X904E);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9058);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9068);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9072);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9078);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(x=0X907C);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(0X9088);
	MakeCode	(x=0X908C);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9092);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9098);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X909A);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(0X90A8);
	MakeCode	(x=0X90AC);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X90B2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X90BA);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X90BC);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(x=0X90C8);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(0X90CC);
	MakeCode	(0X90CE);
	MakeCode	(x=0X90D2);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X90D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X90E2);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X90E4);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(0X90F2);
	MakeCode	(x=0X90F6);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X90FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9106);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X9108);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(0X9116);
	MakeCode	(0X9118);
	MakeCode	(x=0X911C);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9122);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X912C);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X912E);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(0X913C);
	MakeCode	(x=0X914C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9170);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9174);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9184);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X918A);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9196);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(x=0X9198);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X91C2);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X91F4);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X91FA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9204);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X9206);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeDword	(x=0X9210);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9214);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X9218,	0X921A);
	MakeName	(0X9218,	"aC");
	MakeArray	(0X921A,	0X2);
	MakeDword	(x=0X921C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X9220);
	MakeDword	(0X9224);
	MakeCode	(0X9228);
	MakeCode	(0X922E);
	MakeCode	(x=0X9246);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9248);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X924E);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9250);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9256);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X925C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X925E);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X927E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9284);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(x=0X9288);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(0X9294);
	MakeCode	(x=0X9298);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X929E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X92A4);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X92A6);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(0X92B4);
	MakeCode	(0X92B6);
	MakeCode	(0X92B8);
	MakeCode	(x=0X92BC);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X92C2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X92CA);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X92CC);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(x=0X92D8);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(0X92DE);
	MakeCode	(x=0X92E2);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X92E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X92F2);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X92F4);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(0X9302);
	MakeCode	(x=0X9306);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X930C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9316);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X9318);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(0X9326);
	MakeCode	(0X9328);
	MakeCode	(x=0X932C);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9332);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X933C);
	OpOff		(x,	1,	0X10000233);
	OpOff		(x,	129,	0X10000233);
	MakeCode	(x=0X933E);
	OpOff		(x,	1,	0X10000238);
	OpOff		(x,	129,	0X10000238);
	MakeCode	(0X934C);
	MakeCode	(x=0X9354);
	OpHex		(x,	1);
	MakeCode	(x=0X935E);
	OpHex		(x,	1);
	MakeCode	(x=0X936E);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9372);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9376);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X937C);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9382);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9386);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9388);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X93A6);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X93AA);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X93AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X93AE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X93B2);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0X93B6);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X93B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X93BA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X93BC);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X93C0);
	OpOff		(x,	1,	0X10003CD4);
	OpOff		(x,	129,	0X10003CD4);
	MakeCode	(x=0X93C6);
	OpOff		(x,	1,	0X10003CD4);
	OpOff		(x,	129,	0X10003CD4);
	MakeCode	(x=0X93CC);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0X93D0);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0X93D4);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(0X93D8);
	MakeCode	(x=0X93E0);
	OpHex		(x,	1);
	MakeCode	(x=0X93EA);
	OpHex		(x,	1);
	MakeCode	(x=0X93FA);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X93FE);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9402);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9408);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X940C);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X940E);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9412);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9414);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9432);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9436);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X943C);
	OpHex		(x,	1);
	MakeCode	(x=0X9442);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9444);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9448);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X944A);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(0X944E);
	MakeCode	(x=0X9456);
	OpHex		(x,	1);
	MakeCode	(x=0X9460);
	OpHex		(x,	1);
	MakeCode	(x=0X9470);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9474);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9478);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X947E);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9482);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9484);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X9488);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X948A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X94A8);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X94AC);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0X94B2);
	OpHex		(x,	1);
	MakeCode	(x=0X94B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X94BA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X94BE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X94C0);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(0X94C4);
	MakeCode	(x=0X94CA);
	OpHex		(x,	1);
	MakeCode	(x=0X94D2);
	OpHex		(x,	1);
	MakeCode	(x=0X94DA);
	OpHex		(x,	1);
	MakeCode	(x=0X94E2);
	OpHex		(x,	1);
	MakeCode	(x=0X94EA);
	OpHex		(x,	1);
	MakeCode	(x=0X94F2);
	OpHex		(x,	1);
	MakeCode	(x=0X94FA);
	OpHex		(x,	1);
	MakeCode	(x=0X9502);
	OpHex		(x,	1);
	MakeCode	(x=0X950A);
	OpHex		(x,	1);
	MakeCode	(x=0X9510);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9512);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X9514);
	OpHex		(x,	1);
	MakeCode	(x=0X9518);
	OpHex		(x,	1);
	MakeCode	(x=0X951C);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X9524);
	OpHex		(x,	1);
	MakeCode	(x=0X9530);
	OpHex		(x,	1);
	MakeCode	(x=0X953C);
	OpHex		(x,	1);
	MakeCode	(x=0X9544);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9550);
	OpHex		(x,	1);
	MakeCode	(x=0X9558);
	OpHex		(x,	1);
	MakeCode	(0X9560);
	MakeCode	(x=0X9564);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X956C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9572);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9576);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X957C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9582);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9584);
	OpHex		(x,	1);
	MakeCode	(x=0X9596);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9598);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X95A8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X95AC);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X95B0);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X95BE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X95C0);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X95C2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X95C4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X95C6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X95C8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X95CE);
	MakeCode	(x=0X95D0);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	MakeCode	(0X95D4);
	MakeCode	(x=0X95DE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X95F2);
	MakeDword	(x=0X9640);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X9644);
	MakeDword	(x=0X9648);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X964C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9650);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X9654);
	MakeDword	(x=0X9658);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X965C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X9660);
	MakeCode	(0X9662);
	MakeCode	(0X9696);
	MakeCode	(0X96B6);
	MakeCode	(x=0X96CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X96D6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X9704);
	MakeCode	(0X9732);
	MakeCode	(x=0X9764);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X976E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X977A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9784);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X97A2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X97B2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X97B8);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(0X97BC);
	MakeCode	(0X97CA);
	MakeCode	(x=0X97DC);
	OpHex		(x,	1);
	MakeCode	(x=0X97E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X97EC);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X97EE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X97F0);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X97FA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X980E);
	MakeCode	(0X9810);
	MakeCode	(x=0X9816);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X981C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9820);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9826);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9834);
	OpOff		(x,	1,	0X100033A0);
	OpOff		(x,	129,	0X100033A0);
	MakeCode	(x=0X9838);
	OpStkvar	(x,	1);
	MakeCode	(x=0X983A);
	OpOff		(x,	1,	0X100033A0);
	OpOff		(x,	129,	0X100033A0);
	MakeCode	(x=0X983E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X9840);
	OpOff		(x,	1,	0X100033A0);
	OpOff		(x,	129,	0X100033A0);
	MakeCode	(x=0X9844);
	OpStkvar	(x,	1);
	MakeCode	(x=0X9848);
	OpOff		(x,	1,	0X100033A0);
	OpOff		(x,	129,	0X100033A0);
	MakeCode	(x=0X984A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X984E);
	OpOff		(x,	1,	0X100033A0);
	OpOff		(x,	129,	0X100033A0);
	MakeCode	(x=0X9850);
	OpStkvar	(x,	1);
	MakeCode	(0X985A);
	MakeCode	(0X985E);
	MakeCode	(x=0X9860);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X986A);
	OpOff		(x,	1,	0X10003A08);
	OpOff		(x,	129,	0X10003A08);
	MakeCode	(x=0X986E);
	OpOff		(x,	1,	0X10003A08);
	OpOff		(x,	129,	0X10003A08);
	MakeComm	(0X9870,	"p_err");
	MakeCode	(x=0X9876);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X987C);
	MakeCode	(x=0X9890);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9896);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X98CA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X98F4);
	MakeCode	(x=0X98F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X98FA);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X98FE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9900);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X990A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X991A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X992C,	"switch 6 cases ");
	MakeComm	(0X9932,	"switch jump");
	MakeComm	(0X9936,	"jump table for switch statement");
	MakeByte	(0X9936);
	MakeName	(0X9936,	"jpt_9932");
	MakeByte	(0X9937);
	MakeByte	(0X9938);
	MakeByte	(0X9939);
	MakeByte	(0X993A);
	MakeByte	(0X993B);
	MakeRptCmt	(0X993C,	"jumptable 00009932 case 2");
	MakeCode	(0X993C);
	MakeRptCmt	(0X9944,	"jumptable 00009932 case 3");
	MakeCode	(0X9944);
	MakeRptCmt	(0X994C,	"jumptable 00009932 case 4");
	MakeCode	(0X994C);
	MakeRptCmt	(0X9950,	"jumptable 00009932 case 5");
	MakeCode	(0X9950);
	MakeRptCmt	(0X9954,	"jumptable 00009932 case 6");
	MakeCode	(0X9954);
	MakeRptCmt	(0X995C,	"jumptable 00009932 case 7");
	MakeCode	(0X995C);
	MakeCode	(x=0X9964);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X9982,	"jumptable 00009932 default case");
	MakeName	(0X9982,	"def_9932");
	MakeCode	(0X9984);
	MakeCode	(0X9986);
	MakeCode	(0X99A6);
	MakeCode	(0X99AE);
	MakeCode	(0X99B4);
	MakeCode	(0X99BA);
	MakeCode	(0X99C8);
	MakeCode	(0X99D4);
	MakeCode	(0X99DC);
	MakeCode	(x=0X99EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X99F2);
	OpOff		(x,	1,	0X10003E21);
	OpOff		(x,	129,	0X10003E21);
	MakeCode	(x=0X99F6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X9A04);
	MakeCode	(x=0X9A08);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9A0C);
	OpStkvar	(x,	1);
	MakeCode	(0X9A28);
	MakeCode	(0X9A34);
	MakeCode	(x=0X9A3A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X9A44);
	MakeCode	(0X9A52);
	MakeCode	(0X9A68);
	MakeCode	(0X9A7A);
	MakeCode	(x=0X9A8A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X9A9A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X9AA4);
	MakeDword	(x=0X9AB0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X9AB4);
	MakeDword	(0X9AB8);
	MakeDword	(x=0X9ABC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9AC0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9AC4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9AC8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9ACC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9AD0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9AD4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X9AD8,	0X9AE9);
	MakeName	(0X9AD8,	"a5_8gVerErrD");
	MakeByte	(0X9AE9);
	MakeArray	(0X9AE9,	0X3);
	MakeDword	(0X9AEC);
	MakeStr		(0X9AF0,	0X9AFD);
	MakeName	(0X9AF0,	"aRfmCrcErr");
	MakeByte	(0X9AFD);
	MakeArray	(0X9AFD,	0X3);
	MakeCode	(0X9B00);
	MakeCode	(0X9B3A);
	MakeCode	(0X9B46);
	MakeCode	(x=0X9B60);
	OpOff		(x,	1,	0X10003E21);
	OpOff		(x,	129,	0X10003E21);
	MakeCode	(x=0X9B66);
	OpStkvar	(x,	1);
	MakeComm	(0X9B6A,	"milli");
	MakeComm	(0X9B6C,	"opt");
	MakeComm	(0X9B70,	"seconds");
	MakeComm	(0X9B72,	"minutes");
	MakeComm	(0X9B74,	"hours");
	MakeCode	(x=0X9B7A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9B92);
	OpHex		(x,	1);
	MakeCode	(0X9B98);
	MakeCode	(0X9B9E);
	MakeCode	(x=0X9BA0);
	OpHex		(x,	1);
	MakeCode	(x=0X9BA4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9BAA);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X9BAE);
	OpHex		(x,	1);
	MakeCode	(x=0X9BB4);
	OpHex		(x,	1);
	MakeCode	(x=0X9BB8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9BBC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9BBE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9BC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9BC2);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0X9BCE);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X9BD0);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(0X9BE6);
	MakeCode	(x=0X9BF0);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9BF4);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9BF8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9BFE);
	OpOff		(x,	1,	0X10003CD4);
	OpOff		(x,	129,	0X10003CD4);
	MakeCode	(x=0X9C02);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9C06);
	OpOff		(x,	1,	0X10003CD4);
	OpOff		(x,	129,	0X10003CD4);
	MakeCode	(x=0X9C0A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9C0E);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0X9C12);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9C14);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0X9C16);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9C18);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0X9C1A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9C1C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X9C20);
	MakeCode	(x=0X9C2A);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9C2E);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9C32);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9C34);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9C36);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9C3A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9C42);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0X9C48);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(0X9C4C);
	MakeCode	(x=0X9C4E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9C50);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9C58);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0X9C66);
	MakeCode	(x=0X9C6A);
	OpHex		(x,	1);
	MakeCode	(x=0X9C72);
	OpHex		(x,	1);
	MakeCode	(x=0X9C84);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9C86);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9C88);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(0X9C8E);
	MakeCode	(0X9C94);
	MakeCode	(0X9C9A);
	MakeCode	(x=0X9C9E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9CA0);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9CA2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9CA4);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(0X9CB2);
	MakeCode	(0X9CB6);
	MakeCode	(x=0X9CBC);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9CBE);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9CC0);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9CC6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9CC8);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(0X9CDA);
	MakeCode	(0X9CE0);
	MakeCode	(0X9CE6);
	MakeCode	(x=0X9CEA);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9CEC);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9CEE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9CF0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X9CFE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9D02);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9D04);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9D06);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9D08);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeCode	(x=0X9D10);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9D26);
	OpHex		(x,	1);
	MakeCode	(x=0X9D2C);
	OpHex		(x,	1);
	MakeCode	(x=0X9D46);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0X9D48);
	OpOff		(x,	1,	0X10000214);
	OpOff		(x,	129,	0X10000214);
	MakeComm	(0X9D4E,	"seconds");
	MakeComm	(0X9D50,	"opt");
	MakeComm	(0X9D54,	"milli");
	MakeComm	(0X9D56,	"minutes");
	MakeComm	(0X9D58,	"hours");
	MakeCode	(0X9D60);
	MakeCode	(0X9D64);
	MakeCode	(0X9D6C);
	MakeDword	(0X9D90);
	MakeDword	(0X9D94);
	MakeDword	(x=0X9D98);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9D9C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9DA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9DA4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9DA8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9DAC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X9DB0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X9DB4,	0X9DBB);
	MakeName	(0X9DB4,	"aMaster");
	MakeByte	(0X9DBB);
	MakeStr		(0X9DBC,	0X9DC3);
	MakeName	(0X9DBC,	"aSlaver");
	MakeByte	(0X9DC3);
	MakeDword	(0X9DC4);
	MakeCode	(0X9DC8);
	MakeCode	(x=0X9DD6);
	OpHex		(x,	1);
	MakeCode	(x=0X9DE6);
	OpHex		(x,	1);
	MakeCode	(x=0X9DFE);
	OpHex		(x,	1);
	MakeCode	(x=0X9E0C);
	OpHex		(x,	1);
	MakeCode	(0X9E1E);
	MakeCode	(0X9E32);
	MakeCode	(x=0X9E36);
	OpHex		(x,	1);
	MakeCode	(0X9E44);
	MakeCode	(0X9E5A);
	MakeCode	(0X9E70);
	MakeCode	(0X9E84);
	MakeCode	(0X9E8E);
	MakeCode	(0X9E96);
	MakeCode	(0X9EA8);
	MakeCode	(0X9EB0);
	MakeCode	(x=0X9EBC);
	OpHex		(x,	1);
	MakeCode	(x=0X9EDE);
	OpHex		(x,	1);
	MakeCode	(0X9EEA);
	MakeCode	(x=0X9EF2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X9EF8);
	OpHex		(x,	1);
	MakeCode	(x=0X9F20);
	OpHex		(x,	1);
	MakeCode	(0X9F2C);
	MakeCode	(0X9F40);
	MakeCode	(x=0X9F46);
	OpStkvar	(x,	1);
	MakeCode	(0X9F54);
	MakeCode	(0X9F64);
	MakeCode	(0X9F78);
	MakeCode	(x=0X9F7E);
	OpStkvar	(x,	1);
	MakeCode	(0X9F8C);
	MakeCode	(0X9F9C);
	MakeCode	(0X9FA6);
	MakeCode	(0X9FB0);
	MakeCode	(0X9FB6);
	MakeCode	(0X9FBC);
	MakeCode	(x=0X9FC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X9FDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X9FE6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X9FEE);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA006);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA00E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA018);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA020);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA03E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA04C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA050);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA066);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA06E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA078);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA080);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA098);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA09C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA0A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA0B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA0B6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA0C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA0CA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA0D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA0DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA0EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA0EE);
	OpStkvar	(x,	1);
	MakeCode	(0XA102);
	MakeCode	(x=0XA10A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA10E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA114);
	OpStkvar	(x,	1);
	MakeCode	(0XA13E);
	MakeCode	(x=0XA148);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA152);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA160);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA16A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA16E);
	OpHex		(x,	1);
	MakeCode	(x=0XA178);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA17E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA182);
	OpStkvar	(x,	1);
	MakeCode	(0XA19C);
	MakeCode	(0XA1A6);
	MakeCode	(x=0XA1B0);
	OpStkvar	(x,	1);
	MakeByte	(0XA1C6);
	MakeArray	(0XA1C6,	0X2);
	MakeDword	(0XA1C8);
	MakeCode	(x=0XA1CC);
	OpStkvar	(x,	1);
	MakeCode	(0XA1DC);
	MakeCode	(0XA1E0);
	MakeCode	(x=0XA1E6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA1F2);
	OpHex		(x,	1);
	MakeCode	(x=0XA204);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA20C);
	OpStkvar	(x,	1);
	MakeCode	(0XA21E);
	MakeCode	(x=0XA234);
	OpHex		(x,	1);
	MakeCode	(x=0XA23E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA254);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA266);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA268);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA272);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA282);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA286);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA288);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA296);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA298);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA2A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA2A2);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XA2A4);
	OpHex		(x,	1);
	MakeCode	(x=0XA2A8);
	OpHex		(x,	1);
	MakeCode	(x=0XA2AC);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XA2B4);
	OpHex		(x,	1);
	MakeCode	(x=0XA2C0);
	OpHex		(x,	1);
	MakeCode	(x=0XA2CC);
	OpHex		(x,	1);
	MakeCode	(x=0XA2D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XA2DE);
	MakeCode	(x=0XA2E4);
	OpHex		(x,	1);
	MakeCode	(x=0XA2EC);
	OpHex		(x,	1);
	MakeCode	(x=0XA2F4);
	OpHex		(x,	1);
	MakeCode	(x=0XA2FC);
	OpHex		(x,	1);
	MakeCode	(x=0XA302);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA304);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XA30A);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XA30E);
	OpHex		(x,	1);
	MakeCode	(x=0XA31A);
	OpHex		(x,	1);
	MakeCode	(x=0XA322);
	OpHex		(x,	1);
	MakeCode	(0XA32A);
	MakeCode	(x=0XA348);
	OpStkvar	(x,	1);
	MakeCode	(0XA360);
	MakeCode	(x=0XA376);
	OpStkvar	(x,	1);
	MakeCode	(0XA384);
	MakeCode	(0XA390);
	MakeCode	(x=0XA398);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA3AA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA3BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA3CC);
	OpStkvar	(x,	1);
	MakeCode	(0XA3D6);
	MakeCode	(0XA3F0);
	MakeCode	(x=0XA400);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA40A);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA40E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA418);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA420);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA42C);
	OpHex		(x,	1);
	MakeCode	(0XA448);
	MakeCode	(0XA44E);
	MakeCode	(0XA452);
	MakeCode	(x=0XA456);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0XA45E);
	OpOff		(x,	1,	0X10000168);
	OpOff		(x,	129,	0X10000168);
	MakeCode	(x=0XA462);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA46A);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA47C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA484);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA488);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA48C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA494);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA496);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA49A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA4A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA4A2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA4A4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA4A6);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XA4A8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA4AC);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XA4AE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA4B2);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XA4B4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA4B6);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XA4B8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA4BC);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XA4BE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA4C2);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XA4C4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA4C8);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XA4CA);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA4D2);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XA4DA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA4E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA4F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA4F8);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA4FE);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(0XA504);
	MakeCode	(0XA506);
	MakeCode	(x=0XA508);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA50A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA50E);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA524);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA544);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA546);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XA558);
	MakeCode	(0XA55A);
	MakeCode	(0XA55E);
	MakeCode	(x=0XA562);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA564);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XA572);
	MakeCode	(x=0XA576);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA578);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XA592);
	MakeCode	(x=0XA5A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA5A6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA5AA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA5BA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA5C6);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA5C8);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA5D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA5D2);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA5D8);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeByte	(0XA5E6);
	MakeArray	(0XA5E6,	0X2);
	MakeDword	(0XA5E8);
	MakeDword	(0XA5EC);
	MakeDword	(x=0XA5F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XA5F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XA5F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XA5FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XA600);
	MakeDword	(x=0XA604);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XA608);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XA60C);
	MakeDword	(0XA610);
	MakeDword	(x=0XA614);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XA618);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XA61C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XA620);
	MakeDword	(x=0XA624);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XA628);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XA62C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XA630);
	MakeCode	(0XA634);
	MakeCode	(x=0XA65A);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA67C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA682);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA696);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA69C);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA6B2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA6B8);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(0XA6D0);
	MakeCode	(x=0XA6D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA6D4);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA6DA);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA6DC);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA6E2);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA6E8);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA712);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA718);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA720);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA722);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA726);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA72A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA732);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA734);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA738);
	OpStkvar	(x,	1);
	MakeCode	(x=0XA73C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0XA740);
	MakeCode	(x=0XA742);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA744);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA746);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0XA74E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA750);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0XA756);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA75A);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0XA75E);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0XA760);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XA762);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0XA764);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XA766);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0XA768);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XA76A);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0XA76C);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XA76E);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XA770);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0XA790);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0XA792);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XA794);
	OpOff		(x,	1,	0X10003D10);
	OpOff		(x,	129,	0X10003D10);
	MakeCode	(x=0XA7A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA7AA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA7B2);
	OpStkvar	(x,	1);
	MakeCode	(0XA7BE);
	MakeCode	(x=0XA7C0);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0XA7C6);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XA7C8);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0XA7CA);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XA7CC);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0XA7CE);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XA7D0);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0XA7D6);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0XA7D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA7DA);
	OpOff		(x,	1,	0X1000271C);
	OpOff		(x,	129,	0X1000271C);
	MakeCode	(x=0XA7DC);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0XA7DE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA7E0);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0XA7E8);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XA7F6);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0XA7F8);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0XA7FA);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XA81E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA826);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0XA828);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XA82A);
	OpOff		(x,	1,	0X10003D95);
	OpOff		(x,	129,	0X10003D95);
	MakeCode	(x=0XA832);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0XA838);
	MakeCode	(x=0XA848);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA84A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA84E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA85E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA86A);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA872);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA874);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA87A);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA8AC);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA8CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA8D0);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA8D6);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA8D8);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA8DE);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA8E6);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA910);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA916);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA92A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA930);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XA944);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA94A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA950);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(0XA968);
	MakeCode	(x=0XA970);
	OpHex		(x,	1);
	MakeCode	(x=0XA97A);
	OpHex		(x,	1);
	MakeCode	(x=0XA98A);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA98E);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA992);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA998);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA99E);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA9A2);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA9A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA9C2);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA9C6);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XA9C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA9CA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA9CC);
	OpOff		(x,	1,	0X1000001C);
	OpOff		(x,	129,	0X1000001C);
	MakeCode	(x=0XA9D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA9D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XA9D6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XA9DE);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XA9E2);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XA9E6);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XA9EA);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(0XA9EE);
	MakeCode	(x=0XA9F6);
	OpHex		(x,	1);
	MakeCode	(x=0XAA00);
	OpHex		(x,	1);
	MakeCode	(x=0XAA10);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAA14);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAA18);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAA1E);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAA22);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAA24);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAA28);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAA2A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAA48);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAA4C);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAA4E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAA50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAA52);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeDword	(0XAA58);
	MakeDword	(x=0XAA5C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XAA60);
	MakeDword	(x=0XAA64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAA68);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAA6C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAA70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAA74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAA78);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAA7C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAA80);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAA84);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAA88);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAA8C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAA90);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XAA94);
	MakeDword	(x=0XAA98);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XAA9C);
	MakeCode	(x=0XAAA4);
	OpHex		(x,	1);
	MakeCode	(x=0XAAAE);
	OpHex		(x,	1);
	MakeCode	(x=0XAABE);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAAC2);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAAC6);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAACC);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAAD0);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAAD4);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAAD6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAAF4);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAAF8);
	OpOff		(x,	1,	0X40004000);
	OpOff		(x,	129,	0X40004000);
	MakeCode	(x=0XAAFA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAAFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAAFE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0XAB04);
	MakeCode	(x=0XAB14);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XAB18);
	MakeCode	(x=0XAB26);
	OpHex		(x,	1);
	MakeCode	(x=0XAB2A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAB2E);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0XAB32);
	OpHex		(x,	1);
	MakeCode	(0XAB38);
	MakeCode	(x=0XAB3A);
	OpHex		(x,	1);
	MakeCode	(x=0XAB42);
	OpHex		(x,	1);
	MakeCode	(x=0XAB48);
	OpHex		(x,	1);
	MakeCode	(x=0XAB4C);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0XAB52);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAB56);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAB5A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAB5E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAB60);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAB62);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAB70);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XAB74);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(0XAB8A);
	MakeCode	(x=0XAB94);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAB96);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XAB9C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XABA0);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XABA2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XABA6);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XABAA);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XABAC);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XABAE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XABB0);
	OpOff		(x,	1,	0X10003D02);
	OpOff		(x,	129,	0X10003D02);
	MakeCode	(x=0XABB2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XABB4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XABB8);
	MakeCode	(x=0XABC4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XABC6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XABC8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XABCC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XABD4);
	OpOff		(x,	1,	0X10003AD0);
	OpOff		(x,	129,	0X10003AD0);
	MakeCode	(x=0XABDC);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(0XABE0);
	MakeCode	(x=0XABE2);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XABE4);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XABEC);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0XABFA);
	MakeCode	(x=0XAC06);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAC0A);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(x=0XAC0C);
	OpOff		(x,	1,	0X10000244);
	OpOff		(x,	129,	0X10000244);
	MakeCode	(0XAC10);
	MakeCode	(0XAC16);
	MakeCode	(0XAC1C);
	MakeCode	(x=0XAC20);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XAC22);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XAC24);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XAC2A);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XAC2C);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(0XAC3E);
	MakeCode	(x=0XAC42);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XAC46);
	MakeCode	(x=0XAC4A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAC52);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XAC54);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XAC56);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAC5C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAC64);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XAC68);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XAC6C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XAC6E);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XAC76);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XAC8C);
	OpHex		(x,	1);
	MakeCode	(0XAC92);
	MakeCode	(x=0XAC96);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAC9A);
	OpHex		(x,	1);
	MakeCode	(x=0XACB4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XACB6);
	OpOff		(x,	1,	0X10000264);
	OpOff		(x,	129,	0X10000264);
	MakeCode	(x=0XACBC);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeComm	(0XACBE,	"seconds");
	MakeCode	(x=0XACC0);
	OpHex		(x,	1);
	MakeCode	(x=0XACC4);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XACC6);
	OpStkvar	(x,	1);
	MakeComm	(0XACC8,	"opt");
	MakeComm	(0XACCC,	"milli");
	MakeComm	(0XACCE,	"minutes");
	MakeComm	(0XACD0,	"hours");
	MakeCode	(0XACD8);
	MakeCode	(0XACDC);
	MakeCode	(0XACE4);
	MakeCode	(x=0XACEC);
	OpHex		(x,	1);
	MakeCode	(x=0XAD00);
	OpHex		(x,	1);
	MakeDword	(0XAD08);
	MakeDword	(x=0XAD0C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAD10);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XAD14);
	MakeDword	(x=0XAD18);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAD1C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAD20);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAD24);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAD28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAD2C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XAD30);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XAD34,	0XAD3F);
	MakeName	(0XAD34,	"aTestmaster");
	MakeByte	(0XAD3F);
	MakeStr		(0XAD40,	0XAD4B);
	MakeName	(0XAD40,	"aTestslaver");
	MakeByte	(0XAD4B);
	MakeDword	(x=0XAD4C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XAD50,	0XAD58);
	MakeName	(0XAD50,	"aMonitor");
	MakeDword	(0XAD58);
	MakeCode	(0XAD5C);
	MakeCode	(0XAD70);
	MakeCode	(0XADA0);
	MakeCode	(0XADDA);
	MakeCode	(0XADEE);
	MakeCode	(0XAE26);
	MakeCode	(0XAE2C);
	MakeCode	(0XAE3C);
	MakeCode	(0XAE48);
	MakeCode	(x=0XAE52);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAE6C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAE88);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAEA4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XAEC2);
	MakeCode	(0XAED4);
	MakeCode	(0XAEDC);
	MakeCode	(0XAEE2);
	MakeCode	(0XAEFA);
	MakeCode	(0XAF04);
	MakeCode	(x=0XAF12);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAF16);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XAF1E);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(0XAF28);
	MakeCode	(0XAF3C);
	MakeCode	(x=0XAF40);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAF4E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAF50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XAF88);
	OpHex		(x,	1);
	MakeCode	(0XAFBA);
	MakeCode	(x=0XAFE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB03C);
	MakeCode	(x=0XB040);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB046);
	OpStkvar	(x,	1);
	MakeCode	(0XB05A);
	MakeCode	(0XB068);
	MakeCode	(x=0XB076);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0B0);
	MakeCode	(x=0XB0B6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0C6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0FC);
	OpHex		(x,	1);
	MakeCode	(0XB12E);
	MakeCode	(x=0XB15C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB17E);
	MakeCode	(0XB1A4);
	MakeCode	(0XB1B8);
	MakeCode	(0XB214);
	MakeCode	(x=0XB216);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB226);
	MakeDword	(x=0XB240);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XB244);
	MakeDword	(0XB248);
	MakeByte	(0XB24C);
	MakeByte	(0XB24D);
	MakeArray	(0XB24D,	0X3);
	MakeDword	(0XB250);
	MakeDword	(x=0XB254);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB258);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XB25C);
	MakeDword	(0XB260);
	MakeCode	(0XB264);
	MakeCode	(x=0XB270);
	OpOff		(x,	1,	0X100042AD);
	OpOff		(x,	129,	0X100042AD);
	MakeCode	(0XB27A);
	MakeCode	(0XB2A6);
	MakeCode	(0XB2BE);
	MakeCode	(0XB2C8);
	MakeCode	(x=0XB2CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB2CE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0XB2DC);
	MakeCode	(0XB2DE);
	MakeCode	(x=0XB2E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB2E2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB2E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB2E6);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XB2EA);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB2EE);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB2FE);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB306);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB308);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB30A);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB30C);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB30E);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB310);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB312);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB314);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(0XB318);
	MakeCode	(x=0XB31C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB31E);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(0XB32A);
	MakeCode	(x=0XB330);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB336);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB33C);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB342);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB350);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB352);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XB358);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XB35E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XB362);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XB366);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB378);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB37A);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB386);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB388);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB3A6);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB3A8);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB3AA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB3AC);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XB3AE);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB3B0);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(0XB3BC);
	MakeCode	(x=0XB3BE);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB3C0);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(0XB3CC);
	MakeCode	(x=0XB3CE);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB3D0);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(0XB3DC);
	MakeCode	(x=0XB3E0);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB3E6);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(0XB3EA);
	MakeCode	(x=0XB3EC);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB3EE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB3F0);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XB3F2);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XB3FA);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(0XB428);
	MakeCode	(x=0XB430);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB438);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB43C);
	OpOff		(x,	1,	0X100040C4);
	OpOff		(x,	129,	0X100040C4);
	MakeCode	(x=0XB444);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB454);
	MakeCode	(0XB456);
	MakeCode	(0XB496);
	MakeCode	(x=0XB49E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB4B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB4B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB4C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB4CC);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XB4D0);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB4D2);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB4DC);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XB4E4);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB4E6);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB4EC);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(0XB4F0);
	MakeCode	(x=0XB4FE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB504);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB506);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XB50C);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB512);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB518);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB522);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB530);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB540);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB546);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB552);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB556);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB558);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB55A);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB560);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB56A);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB570);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB572);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB578);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB57C);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB57E);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB584);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB586);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB588);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB58C);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(0XB590);
	MakeCode	(0XB592);
	MakeCode	(0XB594);
	MakeCode	(0XB5EE);
	MakeCode	(0XB62E);
	MakeCode	(x=0XB650);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB658);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeCode	(x=0XB67E);
	OpOff		(x,	1,	0X10000270);
	OpOff		(x,	129,	0X10000270);
	MakeByte	(0XB692);
	MakeArray	(0XB692,	0X2);
	MakeDword	(0XB694);
	MakeDword	(x=0XB698);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB69C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB6A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB6A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XB6A8);
	MakeDword	(0XB6AC);
	MakeDword	(x=0XB6B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB6B4);
	MakeCode	(0XB6BC);
	MakeCode	(0XB6C0);
	MakeCode	(0XB6DE);
	MakeCode	(0XB6FC);
	MakeCode	(x=0XB70A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB70C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB71E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB724);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB728);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB72E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB736);
	OpHex		(x,	1);
	MakeCode	(x=0XB744);
	OpStkvar	(x,	1);
	MakeCode	(0XB750);
	MakeCode	(x=0XB780);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB786);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB796);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB79C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB7A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB7A6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB7AC);
	OpHex		(x,	1);
	MakeCode	(x=0XB7B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB7BA);
	OpStkvar	(x,	1);
	MakeCode	(0XB7C4);
	MakeCode	(x=0XB7E2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB7F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB7FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB802);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB808);
	OpHex		(x,	1);
	MakeCode	(x=0XB80E);
	OpStkvar	(x,	1);
	MakeCode	(0XB820);
	MakeCode	(x=0XB822);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB826);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB840);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB84A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB850);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB856);
	OpHex		(x,	1);
	MakeCode	(x=0XB85C);
	OpStkvar	(x,	1);
	MakeCode	(0XB86C);
	MakeCode	(x=0XB872);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB878);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB88C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB896);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB89C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB8A2);
	OpHex		(x,	1);
	MakeCode	(x=0XB8A8);
	OpStkvar	(x,	1);
	MakeCode	(0XB8B8);
	MakeCode	(x=0XB8CA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB8DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB8E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB8EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB8F0);
	OpHex		(x,	1);
	MakeCode	(x=0XB8F6);
	OpStkvar	(x,	1);
	MakeCode	(0XB906);
	MakeCode	(x=0XB91E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB92E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB934);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB938);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB93E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB944);
	OpHex		(x,	1);
	MakeCode	(x=0XB952);
	OpStkvar	(x,	1);
	MakeCode	(0XB95C);
	MakeCode	(0XB980);
	MakeCode	(x=0XB998);
	OpStkvar	(x,	1);
	MakeCode	(0XB99E);
	MakeCode	(0XB9B8);
	MakeCode	(x=0XB9BA);
	OpStkvar	(x,	1);
	MakeCode	(0XB9C4);
	MakeCode	(x=0XB9C6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB9CA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB9D0);
	OpStkvar	(x,	1);
	MakeCode	(0XB9D4);
	MakeCode	(x=0XB9D6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB9DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB9DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB9EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB9F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB9F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB9FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0XBA04);
	OpHex		(x,	1);
	MakeCode	(x=0XBA12);
	OpStkvar	(x,	1);
	MakeCode	(0XBA1C);
	MakeCode	(0XBA42);
	MakeCode	(0XBA50);
	MakeCode	(0XBA52);
	MakeCode	(0XBA54);
	MakeCode	(0XBA56);
	MakeCode	(0XBA58);
	MakeCode	(0XBA5A);
	MakeCode	(0XBA5C);
	MakeByte	(0XBA5E);
	MakeArray	(0XBA5E,	0X2);
	MakeDword	(x=0XBA60);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XBA64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XBA68);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XBA6C);
	MakeCode	(x=0XBA76);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XBA78,	"switch 8 cases ");
	MakeComm	(0XBA7E,	"switch jump");
	MakeComm	(0XBA82,	"jump table for switch statement");
	MakeByte	(0XBA82);
	MakeName	(0XBA82,	"jpt_BA7E");
	MakeByte	(0XBA83);
	MakeByte	(0XBA84);
	MakeByte	(0XBA85);
	MakeByte	(0XBA86);
	MakeByte	(0XBA87);
	MakeByte	(0XBA88);
	MakeByte	(0XBA89);
	MakeRptCmt	(0XBA8A,	"jumptable 0000BA7E case 5");
	MakeCode	(0XBA8A);
	MakeRptCmt	(0XBA92,	"jumptable 0000BA7E case 6");
	MakeCode	(0XBA92);
	MakeCode	(0XBAAE);
	MakeCode	(x=0XBAB0);
	OpHex		(x,	1);
	MakeCode	(x=0XBAB4);
	OpHex		(x,	1);
	MakeRptCmt	(0XBABA,	"jumptable 0000BA7E case 7");
	MakeCode	(0XBABA);
	MakeRptCmt	(0XBAC6,	"jumptable 0000BA7E case 8");
	MakeCode	(0XBAC6);
	MakeRptCmt	(0XBAE0,	"jumptable 0000BA7E default case");
	MakeName	(0XBAE0,	"def_BA7E");
	MakeRptCmt	(0XBAE4,	"jumptable 0000BA7E case 9");
	MakeCode	(0XBAE4);
	MakeRptCmt	(0XBAEE,	"jumptable 0000BA7E case 10");
	MakeCode	(0XBAEE);
	MakeCode	(x=0XBAF8);
	OpHex		(x,	1);
	MakeRptCmt	(0XBB2C,	"jumptable 0000BA7E case 11");
	MakeCode	(0XBB2C);
	MakeRptCmt	(0XBB36,	"jumptable 0000BA7E case 12");
	MakeCode	(0XBB36);
	MakeCode	(0XBB4C);
	MakeCode	(0XBB50);
	MakeCode	(0XBB5E);
	MakeCode	(x=0XBB68);
	OpHex		(x,	1);
	MakeCode	(x=0XBB76);
	OpHex		(x,	1);
	MakeCode	(0XBB86);
	MakeCode	(x=0XBBA6);
	OpHex		(x,	1);
	MakeCode	(x=0XBBB4);
	OpHex		(x,	1);
	MakeCode	(0XBBEC);
	MakeCode	(0XBBF6);
	MakeCode	(0XBC00);
	MakeCode	(0XBC10);
	MakeCode	(x=0XBC18);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XBC4C);
	MakeCode	(0XBC92);
	MakeCode	(0XBC96);
	MakeCode	(0XBCEC);
	MakeCode	(0XBCFA);
	MakeCode	(x=0XBD04);
	OpHex		(x,	1);
	MakeCode	(x=0XBD12);
	OpHex		(x,	1);
	MakeCode	(0XBD22);
	MakeCode	(x=0XBD2C);
	OpHex		(x,	1);
	MakeCode	(x=0XBD3A);
	OpHex		(x,	1);
	MakeCode	(0XBD4A);
	MakeCode	(x=0XBD62);
	OpHex		(x,	1);
	MakeCode	(x=0XBD72);
	OpHex		(x,	1);
	MakeCode	(0XBD78);
	MakeCode	(0XBD7A);
	MakeCode	(x=0XBD84);
	OpHex		(x,	1);
	MakeCode	(0XBD96);
	MakeComm	(0XBD98,	"minutes");
	MakeCode	(x=0XBD9A);
	OpStkvar	(x,	1);
	MakeComm	(0XBD9C,	"opt");
	MakeComm	(0XBDA0,	"milli");
	MakeComm	(0XBDA2,	"seconds");
	MakeComm	(0XBDA4,	"hours");
	MakeDword	(x=0XBDAC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XBDB0);
	MakeDword	(0XBDB4);
	MakeDword	(0XBDB8);
	MakeDword	(x=0XBDBC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XBDC0);
	MakeCode	(x=0XBDC4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XBDCA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XBDCE);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XBDD0);
	OpHex		(x,	1);
	MakeCode	(x=0XBDD4);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XBDDA);
	OpHex		(x,	1);
	MakeCode	(x=0XBDE8);
	OpHex		(x,	1);
	MakeCode	(x=0XBDEE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XBDF6);
	MakeCode	(x=0XBE02);
	OpHex		(x,	1);
	MakeCode	(x=0XBE1C);
	OpHex		(x,	1);
	MakeCode	(0XBE24);
	MakeCode	(x=0XBE2E);
	OpHex		(x,	1);
	MakeCode	(x=0XBE48);
	OpHex		(x,	1);
	MakeCode	(0XBE50);
	MakeCode	(x=0XBE60);
	OpHex		(x,	1);
	MakeCode	(0XBE70);
	MakeCode	(x=0XBE80);
	OpHex		(x,	1);
	MakeCode	(0XBE8A);
	MakeCode	(x=0XBE9A);
	OpHex		(x,	1);
	MakeCode	(0XBEAE);
	MakeCode	(x=0XBEC0);
	OpHex		(x,	1);
	MakeCode	(0XBEC8);
	MakeCode	(x=0XBEE0);
	OpHex		(x,	1);
	MakeCode	(x=0XBEFE);
	OpHex		(x,	1);
	MakeCode	(0XBF0A);
	MakeCode	(0XBF16);
	MakeCode	(x=0XBF2A);
	OpHex		(x,	1);
	MakeCode	(x=0XBF48);
	OpHex		(x,	1);
	MakeCode	(0XBF54);
	MakeByte	(0XBF62);
	MakeArray	(0XBF62,	0X2);
	MakeDword	(x=0XBF64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XBF68);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XBF6C);
	MakeDword	(0XBF70);
	MakeCode	(0XBF74);
	MakeCode	(x=0XBF78);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XBF7A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XBF80);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XBF88);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XBFB6);
	MakeCode	(x=0XBFBC);
	OpHex		(x,	1);
	MakeCode	(x=0XBFC6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XBFC8);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XBFCC);
	OpHex		(x,	1);
	MakeCode	(0XBFD8);
	MakeCode	(0XBFF0);
	MakeCode	(x=0XBFF6);
	OpHex		(x,	1);
	MakeCode	(x=0XC004);
	OpHex		(x,	1);
	MakeCode	(x=0XC01C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC01E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC022);
	OpHex		(x,	1);
	MakeCode	(x=0XC02C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC02E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC032);
	OpHex		(x,	1);
	MakeCode	(x=0XC04A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC04C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XC054);
	MakeCode	(x=0XC056);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC058);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC05A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC05E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC060);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC07E);
	OpHex		(x,	1);
	MakeCode	(x=0XC088);
	OpHex		(x,	1);
	MakeCode	(x=0XC090);
	OpHex		(x,	1);
	MakeCode	(x=0XC094);
	OpHex		(x,	1);
	MakeCode	(x=0XC098);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XC09E);
	MakeCode	(x=0XC0A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC0AC);
	OpHex		(x,	1);
	MakeCode	(x=0XC0B0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XC0E0);
	MakeCode	(x=0XC0F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XC124);
	MakeCode	(x=0XC12A);
	OpHex		(x,	1);
	MakeCode	(0XC136);
	MakeCode	(x=0XC148);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC156);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XC166);
	MakeCode	(x=0XC168);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC16A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC16E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC176);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC178);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC17A);
	OpHex		(x,	1);
	MakeCode	(x=0XC182);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC184);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC18E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC196);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC19E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XC1A8);
	MakeCode	(x=0XC1B0);
	OpHex		(x,	1);
	MakeCode	(x=0XC1B4);
	OpHex		(x,	1);
	MakeCode	(x=0XC1C8);
	OpHex		(x,	1);
	MakeCode	(0XC1CE);
	MakeCode	(x=0XC1D6);
	OpHex		(x,	1);
	MakeCode	(x=0XC1DA);
	OpHex		(x,	1);
	MakeCode	(x=0XC1EE);
	OpHex		(x,	1);
	MakeCode	(x=0XC1F4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC1F6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC1F8);
	OpHex		(x,	1);
	MakeCode	(x=0XC20E);
	OpHex		(x,	1);
	MakeCode	(x=0XC21A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC21C);
	OpHex		(x,	1);
	MakeCode	(x=0XC246);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC24C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC24E);
	OpHex		(x,	1);
	MakeCode	(x=0XC252);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC254);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC25A);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(0XC25E);
	MakeCode	(x=0XC272);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC288);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC28E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XC298);
	MakeCode	(0XC29E);
	MakeCode	(0XC2DE);
	MakeCode	(x=0XC31A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XC326);
	MakeCode	(x=0XC33A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC342);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC346);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC34C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeByte	(0XC356);
	MakeArray	(0XC356,	0X2);
	MakeDword	(x=0XC358);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XC35C);
	MakeDword	(0XC360);
	MakeDword	(x=0XC364);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XC368);
	MakeDword	(0XC36C);
	MakeDword	(x=0XC370);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XC374);
	MakeDword	(0XC378);
	MakeDword	(0XC37C);
	MakeDword	(0XC380);
	MakeCode	(0XC384);
	MakeCode	(0XC388);
	MakeCode	(x=0XC38A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC38E);
	OpHex		(x,	1);
	MakeCode	(x=0XC3A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XC3CC);
	MakeCode	(x=0XC3D2);
	OpHex		(x,	1);
	MakeCode	(x=0XC3EE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC404);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XC40A);
	MakeCode	(0XC414);
	MakeCode	(x=0XC418);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC41A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC41C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC422);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC428);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC42C);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC432);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC436);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC43C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC43E);
	OpHex		(x,	1);
	MakeCode	(x=0XC460);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC462);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC480);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC482);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC49C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC49E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC4B8);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC4BA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC4CE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC4D6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC4D8);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC4F2);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC4F4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC50E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC510);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC52A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC52C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XC538);
	MakeCode	(0XC53A);
	MakeCode	(0XC53C);
	MakeCode	(0XC53E);
	MakeCode	(x=0XC54E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC550);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC56A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC572);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC574);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC584);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC59E);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(0XC5A2);
	MakeCode	(x=0XC5B4);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC5B6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC5BC);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC5BE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC5C2);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC5C4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC5C8);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC5CA);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC5D6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC5EE);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XC602);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XC616);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XC62A);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XC63E);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(0XC64A);
	MakeCode	(0XC6AA);
	MakeCode	(x=0XC6AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC6AE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC6B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC6B6);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC6BC);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC6BE);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC6C8);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC6CE);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC6D0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC6D6);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC6D8);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC6DE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XC6EC);
	MakeCode	(x=0XC6FA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC702);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC706);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC70C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC710);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XC728);
	OpHex		(x,	1);
	MakeCode	(0XC72E);
	MakeCode	(x=0XC740);
	OpHex		(x,	1);
	MakeCode	(0XC754);
	MakeCode	(0XC756);
	MakeCode	(x=0XC758);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC75A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC76A);
	OpHex		(x,	1);
	MakeCode	(x=0XC76E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC776);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC780);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC78E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC794);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeByte	(0XC7A2);
	MakeArray	(0XC7A2,	0X2);
	MakeDword	(x=0XC7A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XC7A8);
	MakeDword	(x=0XC7AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XC7B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XC7B4);
	MakeDword	(0XC7B8);
	MakeDword	(0XC7BC);
	MakeDword	(0XC7C0);
	MakeCode	(0XC7C4);
	MakeCode	(x=0XC7DE);
	OpHex		(x,	1);
	MakeCode	(x=0XC7F2);
	OpHex		(x,	1);
	MakeCode	(x=0XC7FE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC804);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC814);
	OpHex		(x,	1);
	MakeCode	(0XC82A);
	MakeCode	(x=0XC832);
	OpHex		(x,	1);
	MakeCode	(0XC846);
	MakeCode	(x=0XC848);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC84A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XC850);
	MakeCode	(0XC896);
	MakeCode	(x=0XC898);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC89C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC8B8);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC8CE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC8E0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC8F2);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC908);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC90C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XC916);
	MakeCode	(0XC972);
	MakeCode	(0XC988);
	MakeCode	(0XC98A);
	MakeCode	(x=0XC98E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC994);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC998);
	OpStkvar	(x,	1);
	MakeCode	(x=0XC99A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC99E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XC9A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XC9C4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC9CA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC9CC);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC9D0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XC9F4);
	OpHex		(x,	1);
	MakeCode	(x=0XC9FC);
	OpOff		(x,	1,	0X100041D9);
	OpOff		(x,	129,	0X100041D9);
	MakeCode	(x=0XCA82);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCA86);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCA88);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCA8E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCAA2);
	OpHex		(x,	1);
	MakeCode	(0XCAA8);
	MakeCode	(0XCAAA);
	MakeCode	(0XCAAC);
	MakeCode	(0XCAB0);
	MakeCode	(x=0XCAB4);
	OpHex		(x,	1);
	MakeCode	(x=0XCAC0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCAC4);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCAD0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCAD2);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XCAD8);
	MakeCode	(x=0XCADC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCAE6);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(0XCB54);
	MakeCode	(0XCB6C);
	MakeCode	(0XCB86);
	MakeCode	(x=0XCBA6);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XCBAC);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XCBC4);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XCBD4);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XCBDC);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(0XCBF0);
	MakeCode	(0XCBF2);
	MakeCode	(x=0XCC04);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCC06);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCC0E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCC10);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XCC16);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XCC1A);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XCC22);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XCC2A);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(0XCC32);
	MakeDword	(x=0XCC34);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XCC38);
	MakeDword	(0XCC3C);
	MakeDword	(x=0XCC40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XCC44);
	MakeDword	(0XCC48);
	MakeDword	(0XCC4C);
	MakeDword	(0XCC50);
	MakeDword	(0XCC54);
	MakeDword	(x=0XCC58);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XCC5C);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XCC64);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XCC6E);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(0XCC74);
	MakeCode	(x=0XCC76);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCC78);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCC7C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCC82);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCC8A);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XCC8E);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XCC9A);
	OpOff		(x,	1,	0X100040D0);
	OpOff		(x,	129,	0X100040D0);
	MakeCode	(x=0XCCA0);
	OpOff		(x,	1,	0X100040D0);
	OpOff		(x,	129,	0X100040D0);
	MakeCode	(x=0XCCA6);
	OpOff		(x,	1,	0X100040D0);
	OpOff		(x,	129,	0X100040D0);
	MakeCode	(x=0XCCB0);
	OpOff		(x,	1,	0X100040D0);
	OpOff		(x,	129,	0X100040D0);
	MakeCode	(x=0XCCD0);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCCD2);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCCD4);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XCCD8);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCCDA);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCCE4);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XCCEC);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCCF6);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCCF8);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(0XCCFC);
	MakeCode	(x=0XCCFE);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCD00);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCD02);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCD04);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(0XCD08);
	MakeCode	(0XCD20);
	MakeCode	(0XCD2A);
	MakeCode	(0XCD34);
	MakeCode	(0XCD40);
	MakeCode	(x=0XCD4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XCD54);
	MakeCode	(x=0XCD56);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCD58);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCD5C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCD62);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCD66);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCD74);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCD76);
	OpHex		(x,	1);
	MakeCode	(0XCD9A);
	MakeCode	(0XCDD0);
	MakeCode	(x=0XCDDE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCDE6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCE00);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCE08);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCE1C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCE24);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCE30);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCE3A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCE3E);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCE40);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCE48);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCE50);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCE52);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCE5A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCE68);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCE6A);
	OpHex		(x,	1);
	MakeCode	(x=0XCE76);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XCE94);
	MakeCode	(0XCEBC);
	MakeCode	(0XCECE);
	MakeCode	(x=0XCEE4);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCEEE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCEF2);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCEF6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCEFA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCEFE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XCF00);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCF06);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XCF0A);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XCF18);
	OpHex		(x,	1);
	MakeCode	(x=0XCF26);
	OpHex		(x,	1);
	MakeCode	(x=0XCFB2);
	OpHex		(x,	1);
	MakeCode	(0XCFC2);
	MakeCode	(x=0XCFC4);
	OpHex		(x,	1);
	MakeCode	(x=0XCFD2);
	OpHex		(x,	1);
	MakeCode	(0XD004);
	MakeCode	(0XD006);
	MakeDword	(x=0XD054);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD058);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XD05C);
	MakeCode	(0XD060);
	MakeCode	(0XD062);
	MakeCode	(0XD070);
	MakeCode	(0XD084);
	MakeCode	(x=0XD086);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD088);
	OpOff		(x,	1,	0X100042D0);
	OpOff		(x,	129,	0X100042D0);
	MakeCode	(x=0XD08C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XD090);
	OpStkvar	(x,	1);
	MakeCode	(x=0XD09A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD09E);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0XD0BE);
	MakeCode	(x=0XD0C2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD0C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD0C6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD0D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD0DA);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0XD0EE);
	MakeCode	(x=0XD0F0);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(0XD0F6);
	MakeCode	(x=0XD0F8);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XD0FE);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XD10A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD110);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD112);
	OpHex		(x,	1);
	MakeCode	(x=0XD118);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD11A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD124);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD12E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD132);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD13C);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD140);
	OpHex		(x,	1);
	MakeCode	(x=0XD146);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD14A);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD14C);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD14E);
	OpHex		(x,	1);
	MakeCode	(x=0XD156);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD15E);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD162);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD164);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD166);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD16C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD172);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD174);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD176);
	OpHex		(x,	1);
	MakeCode	(x=0XD17A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD180);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD186);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD18C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XD190);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD196);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD198);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD19A);
	OpHex		(x,	1);
	MakeCode	(x=0XD19E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD1A2);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(0XD1A6);
	MakeCode	(x=0XD1A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD1AE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD1C8);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD1D2);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD1DC);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD1E6);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD1F0);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD1F2);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD1F4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD1F8);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD1FA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD204);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD21E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD224);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD234);
	OpHex		(x,	1);
	MakeCode	(x=0XD248);
	OpHex		(x,	1);
	MakeCode	(x=0XD26A);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD274);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD27E);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD288);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD292);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD29C);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD2A6);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD2B0);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD2BA);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD2C4);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD2CE);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD2D8);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD2E2);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD2EC);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD2F6);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD300);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD30A);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD314);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD31E);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD320);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD326);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD334);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD346);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XD352);
	MakeCode	(0XD354);
	MakeCode	(x=0XD358);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD366);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD374);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD37C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD380);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD38A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD390);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD396);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD39C);
	OpHex		(x,	1);
	MakeComm	(0XD3A0,	"switch 8 cases ");
	MakeComm	(0XD3A4,	"switch jump");
	MakeComm	(0XD3A8,	"jump table for switch statement");
	MakeByte	(0XD3A8);
	MakeName	(0XD3A8,	"jpt_D3A4");
	MakeByte	(0XD3A9);
	MakeByte	(0XD3AA);
	MakeByte	(0XD3AB);
	MakeByte	(0XD3AC);
	MakeByte	(0XD3AD);
	MakeByte	(0XD3AE);
	MakeByte	(0XD3AF);
	MakeRptCmt	(0XD3B0,	"jumptable 0000D3A4 case 0");
	MakeCode	(0XD3B0);
	MakeRptCmt	(0XD3B6,	"jumptable 0000D3A4 case 1");
	MakeCode	(0XD3B6);
	MakeCode	(x=0XD3BA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeRptCmt	(0XD3C0,	"jumptable 0000D3A4 case 5");
	MakeCode	(0XD3C0);
	MakeRptCmt	(0XD3C6,	"jumptable 0000D3A4 case 2");
	MakeCode	(0XD3C6);
	MakeRptCmt	(0XD3CC,	"jumptable 0000D3A4 case 3");
	MakeCode	(0XD3CC);
	MakeRptCmt	(0XD3D2,	"jumptable 0000D3A4 case 7");
	MakeCode	(0XD3D2);
	MakeRptCmt	(0XD3D8,	"jumptable 0000D3A4 default case");
	MakeCode	(0XD3D8);
	MakeName	(0XD3D8,	"def_D3A4");
	MakeCode	(0XD3EA);
	MakeCode	(x=0XD3EC);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD3F0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD3F4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD3FA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD3FE);
	OpHex		(x,	1);
	MakeCode	(x=0XD404);
	OpHex		(x,	1);
	MakeCode	(x=0XD408);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD40A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD40C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XD426);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD428);
	OpHex		(x,	1);
	MakeCode	(x=0XD42E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD432);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD43A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XD43E);
	MakeCode	(x=0XD446);
	OpHex		(x,	1);
	MakeCode	(x=0XD450);
	OpHex		(x,	1);
	MakeCode	(x=0XD456);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD45A);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD462);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD464);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD468);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD46E);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD474);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD47A);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeByte	(0XD47E);
	MakeArray	(0XD47E,	0X2);
	MakeDword	(x=0XD480);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD484);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD488);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD48C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD490);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD494);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD498);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XD49C);
	MakeDword	(x=0XD4A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD4A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XD4A8);
	MakeCode	(0XD4AC);
	MakeCode	(x=0XD4B0);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD4B6);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD4B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD4D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD4D8);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD4DE);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD4E2);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD4E6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD4EA);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD4EE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD4F0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD4F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD4FC);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD502);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD506);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(x=0XD50A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD50E);
	OpOff		(x,	1,	0X40028000);
	OpOff		(x,	129,	0X40028000);
	MakeCode	(x=0XD512);
	OpHex		(x,	1);
	MakeCode	(x=0XD51C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD520);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD526);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD52A);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XD52C);
	OpHex		(x,	1);
	MakeCode	(x=0XD530);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XD536);
	OpHex		(x,	1);
	MakeCode	(x=0XD53C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD550);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD552);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD558);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XD55C);
	MakeCode	(x=0XD566);
	OpStkvar	(x,	1);
	MakeCode	(x=0XD568);
	OpStkvar	(x,	1);
	MakeCode	(x=0XD56A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XD56C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XD576);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD580);
	OpOff		(x,	1,	0X100041D0);
	OpOff		(x,	129,	0X100041D0);
	MakeCode	(x=0XD586);
	OpOff		(x,	1,	0X100041D0);
	OpOff		(x,	129,	0X100041D0);
	MakeCode	(x=0XD58A);
	OpOff		(x,	1,	0X100041D0);
	OpOff		(x,	129,	0X100041D0);
	MakeCode	(x=0XD58E);
	OpOff		(x,	1,	0X100041D0);
	OpOff		(x,	129,	0X100041D0);
	MakeCode	(x=0XD596);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD5AA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD5AC);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5B0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5B4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5B6);
	OpHex		(x,	1);
	MakeCode	(x=0XD5BE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5C0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5C2);
	OpHex		(x,	1);
	MakeCode	(x=0XD5CA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5CC);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5CE);
	OpHex		(x,	1);
	MakeCode	(x=0XD5D2);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5D4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5D6);
	OpHex		(x,	1);
	MakeCode	(x=0XD5DA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5DE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5E2);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5E4);
	OpHex		(x,	1);
	MakeCode	(x=0XD5EA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5EC);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5EE);
	OpHex		(x,	1);
	MakeCode	(x=0XD5F2);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5F4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5F6);
	OpHex		(x,	1);
	MakeCode	(x=0XD5FA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD5FC);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD600);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD604);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD608);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD60C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD612);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD614);
	OpHex		(x,	1);
	MakeCode	(x=0XD61E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD624);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD626);
	OpHex		(x,	1);
	MakeCode	(x=0XD630);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD632);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD666);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XD66A);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XD67E);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XD682);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XD686);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XD68C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD68E);
	OpHex		(x,	1);
	MakeCode	(x=0XD692);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD694);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD698);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD69E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD6A4);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(x=0XD6AA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD6AC);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XD6B0);
	OpOff		(x,	1,	0X100041D0);
	OpOff		(x,	129,	0X100041D0);
	MakeCode	(x=0XD6B6);
	OpOff		(x,	1,	0X100041D0);
	OpOff		(x,	129,	0X100041D0);
	MakeCode	(x=0XD6BC);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD6BE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD6DC);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XD6E8);
	MakeCode	(0XD6EE);
	MakeCode	(x=0XD6F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD6FA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD702);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD704);
	OpOff		(x,	1,	0X40028000);
	OpOff		(x,	129,	0X40028000);
	MakeCode	(x=0XD708);
	OpHex		(x,	1);
	MakeCode	(x=0XD710);
	OpHex		(x,	1);
	MakeCode	(x=0XD718);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD71E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD720);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD728);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD72A);
	OpOff		(x,	1,	0X40028000);
	OpOff		(x,	129,	0X40028000);
	MakeCode	(x=0XD72E);
	OpHex		(x,	1);
	MakeCode	(x=0XD736);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD73A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD73E);
	OpOff		(x,	1,	0X40008000);
	OpOff		(x,	129,	0X40008000);
	MakeCode	(0XD742);
	MakeCode	(x=0XD744);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD746);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD764);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD766);
	OpHex		(x,	1);
	MakeCode	(x=0XD76A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD774);
	OpOff		(x,	1,	0X10004442);
	OpOff		(x,	129,	0X10004442);
	MakeCode	(0XD77E);
	MakeCode	(x=0XD780);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD784);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD788);
	OpHex		(x,	1);
	MakeCode	(x=0XD78C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XD790);
	MakeCode	(x=0XD79E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD7A8);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD7AA);
	OpHex		(x,	1);
	MakeCode	(x=0XD7AE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD7B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD7BC);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD7C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD7C4);
	OpOff		(x,	1,	0X100041D0);
	OpOff		(x,	129,	0X100041D0);
	MakeCode	(x=0XD7D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD7D4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD7DA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD7E0);
	OpOff		(x,	1,	0X100041D0);
	OpOff		(x,	129,	0X100041D0);
	MakeCode	(0XD7E8);
	MakeCode	(x=0XD7EA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD7F0);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD7F2);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD7FA);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD7FC);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD802);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD806);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD808);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD80A);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD810);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD812);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD814);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD81A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD81E);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD822);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD82A);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD830);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD836);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD83A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD844);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD848);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XD84C);
	OpOff		(x,	1,	0X100005E8);
	OpOff		(x,	129,	0X100005E8);
	MakeCode	(x=0XD85A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD85E);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD860);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD864);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD866);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD86C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD870);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD87C);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XD88A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD890);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD894);
	OpHex		(x,	1);
	MakeCode	(x=0XD89A);
	OpHex		(x,	1);
	MakeCode	(x=0XD89E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD8A6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD8AA);
	OpHex		(x,	1);
	MakeCode	(x=0XD8B0);
	OpHex		(x,	1);
	MakeCode	(x=0XD8B4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeDword	(x=0XD8BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD8C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD8C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD8C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XD8CC);
	MakeDword	(x=0XD8D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD8D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XD8D8);
	MakeDword	(0XD8DC);
	MakeDword	(x=0XD8E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD8E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XD8E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XD8EC);
	MakeCode	(x=0XD8F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD8F4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD8F8);
	OpHex		(x,	1);
	MakeCode	(x=0XD8FE);
	OpHex		(x,	1);
	MakeCode	(x=0XD902);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD906);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD908);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD90E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD912);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD914);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XD91C);
	MakeCode	(x=0XD920);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD922);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD924);
	OpHex		(x,	1);
	MakeCode	(x=0XD92C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD92E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD934);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD938);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD93A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XD942);
	MakeCode	(x=0XD946);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD948);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD94E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD952);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD954);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD95C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD95E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD966);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD96C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD970);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD972);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD978);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD97A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD980);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD982);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD988);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD98C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD990);
	OpHex		(x,	1);
	MakeCode	(x=0XD996);
	OpHex		(x,	1);
	MakeCode	(x=0XD99A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XD99E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD9A0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XD9AA);
	MakeCode	(x=0XD9AE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD9B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD9B6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XD9CA);
	MakeCode	(x=0XD9CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD9D8);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XD9EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XD9F0);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD9F2);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XD9FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDA00);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XDA04);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XDA0A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDA0C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA12);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA16);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDA1A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA1E);
	OpHex		(x,	1);
	MakeCode	(x=0XDA24);
	OpHex		(x,	1);
	MakeCode	(x=0XDA28);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XDA2C);
	MakeCode	(x=0XDA38);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDA3A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA40);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDA42);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XDA48);
	MakeCode	(x=0XDA4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDA4E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA54);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA56);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA58);
	OpHex		(x,	1);
	MakeCode	(x=0XDA60);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA66);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA6A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDA6C);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA6E);
	OpHex		(x,	1);
	MakeCode	(x=0XDA74);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDA76);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA7C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDA7E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA84);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDA86);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDA8C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDA8E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XDA94);
	MakeCode	(x=0XDA96);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDAA0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDAAE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDAB2);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDAB6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDABA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDAC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDAC4);
	OpOff		(x,	1,	0X100041D0);
	OpOff		(x,	129,	0X100041D0);
	MakeCode	(x=0XDACA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDADC);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDAE4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDAEA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDAF2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDAF4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XDB02);
	MakeCode	(x=0XDB06);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDB0A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDB12);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDB14);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDB20);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDB24);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDB28);
	OpHex		(x,	1);
	MakeCode	(x=0XDB30);
	OpHex		(x,	1);
	MakeCode	(x=0XDB38);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDB3E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDB40);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDB46);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDB48);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XDB4E);
	MakeCode	(0XDB58);
	MakeCode	(0XDB60);
	MakeCode	(x=0XDB66);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDB74);
	OpHex		(x,	1);
	MakeCode	(x=0XDBBC);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDBC4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDBC6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDBCE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDBD6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDBD8);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDBDE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XDBE2);
	MakeCode	(x=0XDBEA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDBF0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDBF8);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDBFA);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDC00);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDC04);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDC0A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDC0E);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeCode	(x=0XDC14);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDC1A);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDC1E);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XDC24);
	MakeCode	(0XDC30);
	MakeCode	(x=0XDC34);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDC82);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDC84);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDC94);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDC96);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDCA6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDCAE);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDCB4);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDCB6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDCBC);
	OpHex		(x,	1);
	MakeCode	(x=0XDCC6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDCCC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDCD0);
	OpOff		(x,	1,	0X100042A1);
	OpOff		(x,	129,	0X100042A1);
	MakeByte	(0XDCD6);
	MakeArray	(0XDCD6,	0X2);
	MakeDword	(x=0XDCD8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XDCDC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XDCE0);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(x=0XDCE6);
	OpOff		(x,	1,	0X100041D8);
	OpOff		(x,	129,	0X100041D8);
	MakeCode	(0XDCEE);
	MakeCode	(0XDCFA);
	MakeCode	(x=0XDD04);
	OpHex		(x,	1);
	MakeCode	(x=0XDD14);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDD16);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XDD18);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDD1A);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XDD20);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XDD22);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XDD28);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XDD2A);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XDD2C);
	OpOff		(x,	1,	0X10004288);
	OpOff		(x,	129,	0X10004288);
	MakeCode	(x=0XDD2E);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XDD32);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XDD36);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(x=0XDD3C);
	OpOff		(x,	1,	0X10000314);
	OpOff		(x,	129,	0X10000314);
	MakeCode	(0XDD46);
	MakeByte	(0XDD4A);
	MakeArray	(0XDD4A,	0X2);
	MakeDword	(x=0XDD4C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XDD50);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XDD54);
	MakeName	(0XDD54,	"SPI_Init");
	MakeCode	(x=0XDD58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDD60);
	OpHex		(x,	1);
	MakeCode	(x=0XDD68);
	OpHex		(x,	1);
	MakeCode	(x=0XDD6E);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XDD70);
	OpHex		(x,	1);
	MakeCode	(x=0XDD74);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XDD76);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XDD78);
	OpHex		(x,	1);
	MakeCode	(x=0XDD7C);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XDD7E);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XDD80);
	OpHex		(x,	1);
	MakeCode	(x=0XDD84);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XDD86);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XDD88);
	OpHex		(x,	1);
	MakeCode	(x=0XDD8C);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0XDD94);
	OpHex		(x,	1);
	MakeCode	(x=0XDDA0);
	OpHex		(x,	1);
	MakeCode	(x=0XDDA8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XDDB0,	"ClkType");
	MakeCode	(x=0XDDB0);
	OpEnumEx		(x,	1,	GetEnum("CLKPWR_PCLKSEL"),0);
	MakeCode	(0XDDC4);
	MakeCode	(x=0XDDCC);
	OpHex		(x,	1);
	MakeCode	(0XDDD6);
	MakeCode	(x=0XDDD8);
	OpOff		(x,	1,	0X40020000);
	OpOff		(x,	129,	0X40020000);
	MakeCode	(0XDDDC);
	MakeCode	(x=0XDDDE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XDDE0);
	OpOff		(x,	1,	0X40020000);
	OpOff		(x,	129,	0X40020000);
	MakeCode	(x=0XDDE2);
	OpOff		(x,	1,	0X40020000);
	OpOff		(x,	129,	0X40020000);
	MakeCode	(x=0XDDEA);
	OpOff		(x,	1,	0X40020000);
	OpOff		(x,	129,	0X40020000);
	MakeDword	(x=0XDDF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XDDF4);
	MakeDword	(x=0XDDF8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XDDFC);
	MakeCode	(0XDE1E);
	MakeCode	(0XDE42);
	MakeCode	(0XDE5C);
	MakeCode	(x=0XDE60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XDE6A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XDE76);
	OpStkvar	(x,	1);
	MakeCode	(x=0XDE82);
	OpStkvar	(x,	1);
	MakeCode	(x=0XDE8E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XDE92);
	OpStkvar	(x,	1);
	MakeCode	(0XDE96);
	MakeCode	(x=0XDEAE);
	OpHex		(x,	1);
	MakeCode	(0XDED0);
	MakeCode	(0XDED4);
	MakeCode	(0XDEF2);
	MakeCode	(0XDEFE);
	MakeCode	(x=0XDF10);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XDF3C);
	MakeCode	(0XDF48);
	MakeCode	(0XDF52);
	MakeCode	(0XDF78);
	MakeCode	(0XDF84);
	MakeCode	(0XDF86);
	MakeCode	(0XDF8E);
	MakeCode	(0XDFDE);
	MakeCode	(x=0XDFE0);
	OpHex		(x,	1);
	MakeCode	(0XDFEA);
	MakeCode	(x=0XDFEC);
	OpHex		(x,	1);
	MakeCode	(0XDFF6);
	MakeCode	(0XE000);
	MakeCode	(x=0XE016);
	OpHex		(x,	1);
	MakeCode	(0XE032);
	MakeCode	(0XE036);
	MakeCode	(0XE054);
	MakeCode	(0XE060);
	MakeCode	(0XE068);
	MakeCode	(0XE08E);
	MakeCode	(0XE09A);
	MakeCode	(0XE0A2);
	MakeCode	(x=0XE0BA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE0BC);
	OpOff		(x,	1,	0X10000344);
	OpOff		(x,	129,	0X10000344);
	MakeCode	(x=0XE0BE);
	OpHex		(x,	1);
	MakeCode	(x=0XE0C2);
	OpOff		(x,	1,	0X10000344);
	OpOff		(x,	129,	0X10000344);
	MakeCode	(0XE0C8);
	MakeCode	(x=0XE0D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XE0F4);
	MakeCode	(x=0XE104);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XE12E);
	MakeCode	(0XE132);
	MakeCode	(0XE150);
	MakeCode	(0XE15C);
	MakeCode	(0XE164);
	MakeCode	(0XE1BC);
	MakeCode	(0XE1C0);
	MakeCode	(0XE1C4);
	MakeCode	(x=0XE1C6);
	OpHex		(x,	1);
	MakeCode	(0XE1D0);
	MakeDword	(0XE1FC);
	MakeDword	(x=0XE200);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XE204);
	MakeCode	(0XE208);
	MakeCode	(0XE20E);
	MakeByte	(0XE212);
	MakeArray	(0XE212,	0X2);
	MakeCode	(0XE214);
	MakeCode	(0XE228);
	MakeCode	(0XE246);
	MakeCode	(x=0XE24E);
	OpHex		(x,	1);
	MakeCode	(x=0XE25E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XE27E);
	MakeCode	(0XE28A);
	MakeCode	(0XE2C2);
	MakeCode	(x=0XE2CA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE2CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE2DE);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE2E4);
	OpOff		(x,	1,	0X10000350);
	OpOff		(x,	129,	0X10000350);
	MakeCode	(x=0XE2EA);
	OpOff		(x,	1,	0X10000350);
	OpOff		(x,	129,	0X10000350);
	MakeCode	(x=0XE2F6);
	OpOff		(x,	1,	0X10000350);
	OpOff		(x,	129,	0X10000350);
	MakeCode	(x=0XE300);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE322);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE340);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE358);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE376);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE38E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE3A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE3AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE3E2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XE3EA);
	MakeCode	(0XE3EC);
	MakeCode	(x=0XE3F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE41A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE46E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE48A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE4A4);
	OpStkvar	(x,	1);
	MakeCode	(0XE4A8);
	MakeCode	(x=0XE4B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE4B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE4BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE4C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE4C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE4C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE4CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE4D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE4DE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE4F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE4FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE4FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE4FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE500);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE504);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE50A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE50E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE510);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XE512);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE514);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XE518);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE522);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE524);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE526);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE52A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE530);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE532);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XE534);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE536);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XE538);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE540);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XE542);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE554);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE55E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE560);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE562);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE568);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE5AE);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE5CA);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XE5CE);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE5D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XE5DC);
	MakeCode	(0XE5DE);
	MakeCode	(0XE5E0);
	MakeCode	(x=0XE5E6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE5F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE5F2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE5F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE5FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE640);
	OpStkvar	(x,	1);
	MakeCode	(0XE65A);
	MakeDword	(x=0XE65C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XE660);
	MakeDword	(x=0XE664);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XE668);
	MakeDword	(0XE66C);
	MakeDword	(0XE670);
	MakeDword	(0XE674);
	MakeDword	(0XE678);
	MakeDword	(x=0XE67C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XE680,	0XE68A);
	MakeName	(0XE680,	"a2d2d2d");
	MakeByte	(0XE68A);
	MakeArray	(0XE68A,	0X2);
	MakeStr		(0XE68C,	0XE696);
	MakeName	(0XE68C,	"a2d2d4d");
	MakeByte	(0XE696);
	MakeArray	(0XE696,	0X2);
	MakeStr		(0XE698,	0XE69B);
	MakeName	(0XE698,	"aF");
	MakeByte	(0XE69B);
	MakeDword	(0XE69C);
	MakeDword	(0XE6A0);
	MakeDword	(0XE6A4);
	MakeCode	(0XE6A8);
	MakeCode	(x=0XE6AC);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XE6B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE6BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE6BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE6C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE6C6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE6D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE6DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE6E6);
	OpStkvar	(x,	1);
	MakeCode	(0XE6EA);
	MakeCode	(x=0XE6EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE6F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE6F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE71C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE736);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XE738);
	OpStkvar	(x,	1);
	MakeCode	(0XE744);
	MakeCode	(0XE746);
	MakeCode	(x=0XE75A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE774);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XE778);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE782);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE78A);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(0XE794);
	MakeCode	(0XE798);
	MakeCode	(x=0XE79C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE79E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE7B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE7BE);
	OpOff		(x,	1,	0X10000350);
	OpOff		(x,	129,	0X10000350);
	MakeCode	(x=0XE7D8);
	OpOff		(x,	1,	0X10000350);
	OpOff		(x,	129,	0X10000350);
	MakeCode	(x=0XE7F2);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XE808);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE80C);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XE828);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE838);
	OpOff		(x,	1,	0X10000350);
	OpOff		(x,	129,	0X10000350);
	MakeCode	(x=0XE83E);
	OpOff		(x,	1,	0X10000350);
	OpOff		(x,	129,	0X10000350);
	MakeCode	(x=0XE846);
	OpOff		(x,	1,	0X10000350);
	OpOff		(x,	129,	0X10000350);
	MakeCode	(x=0XE84A);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(0XE84E);
	MakeCode	(x=0XE856);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE868);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE870);
	OpOff		(x,	1,	0X10004508);
	OpOff		(x,	129,	0X10004508);
	MakeCode	(x=0XE872);
	OpOff		(x,	1,	0X10004508);
	OpOff		(x,	129,	0X10004508);
	MakeCode	(x=0XE87C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE8AA);
	OpOff		(x,	1,	0X10000350);
	OpOff		(x,	129,	0X10000350);
	MakeCode	(0XE8AE);
	MakeCode	(0XE8B8);
	MakeCode	(x=0XE8BE);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE8C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE8D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE8D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE8D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE8DE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE8E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE8EA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE902);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE904);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE916);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE918);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE91A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE920);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE922);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE92E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE942);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE944);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE956);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE958);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE95A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE960);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE96A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE97E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE980);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE992);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE994);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE996);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE99C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE9A6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE9BA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE9BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XE9CC);
	MakeCode	(0XE9CE);
	MakeCode	(x=0XE9D2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE9D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE9D6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE9DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XE9E6);
	OpStkvar	(x,	1);
	MakeCode	(0XE9EE);
	MakeCode	(x=0XE9F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XE9FE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XEA0A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XEA1E);
	MakeCode	(x=0XEA20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XEA30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XEA32);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XEA38);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XEA3A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XEA3E);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XEA4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XEA4E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XEA52);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XEA5A);
	MakeCode	(0XEA62);
	MakeCode	(x=0XEA64);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XEA66,	"Timetype");
	MakeComm	(0XEA68,	"RTCx");
	MakeCode	(x=0XEA6E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XEA70,	"Timetype");
	MakeComm	(0XEA76,	"RTCx");
	MakeCode	(x=0XEA7C);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeComm	(0XEA7E,	"Timetype");
	MakeComm	(0XEA80,	"RTCx");
	MakeCode	(x=0XEA86);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeComm	(0XEA88,	"Timetype");
	MakeComm	(0XEA8A,	"RTCx");
	MakeCode	(x=0XEA90);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeComm	(0XEA92,	"Timetype");
	MakeComm	(0XEA94,	"RTCx");
	MakeCode	(x=0XEA9A);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeComm	(0XEA9C,	"Timetype");
	MakeComm	(0XEA9E,	"RTCx");
	MakeCode	(x=0XEAA4);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeCode	(x=0XEAA8);
	OpOff		(x,	1,	0X1000457C);
	OpOff		(x,	129,	0X1000457C);
	MakeDword	(x=0XEAAC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XEAB0);
	MakeDword	(0XEAB4);
	MakeDword	(0XEAB8);
	MakeDword	(0XEABC);
	MakeDword	(0XEAC0);
	MakeDword	(0XEAC4);
	MakeDword	(0XEAC8);
	MakeDword	(x=0XEACC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XEAD0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XEAD4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XEAD8);
	MakeDword	(0XEADC);
	MakeDword	(0XEAE0);
	MakeDword	(0XEAE4);
	MakeByte	(0XEAE8);
	MakeByte	(0XEAE9);
	MakeArray	(0XEAE9,	0X3);
	MakeStr		(0XEAEC,	0XEAF3);
	MakeName	(0XEAEC,	"aGpgga");
	MakeByte	(0XEAF3);
	MakeStr		(0XEAF4,	0XEAFB);
	MakeName	(0XEAF4,	"aGprmc");
	MakeByte	(0XEAFB);
	MakeStr		(0XEAFC,	0XEB03);
	MakeName	(0XEAFC,	"aGpgsv");
	MakeByte	(0XEB03);
	MakeStr		(0XEB04,	0XEB07);
	MakeName	(0XEB04,	"aD");
	MakeByte	(0XEB07);
	MakeStr		(0XEB08,	0XEB0B);
	MakeName	(0XEB08,	"aF_0");
	MakeByte	(0XEB0B);
	MakeDword	(x=0XEB0C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XEB10);
	MakeCode	(0XEB16);
	MakeCode	(0XEB24);
	MakeCode	(0XEB32);
	MakeComm	(0XEB66,	"p_err");
	MakeCode	(x=0XEB66);
	OpStkvar	(x,	1);
	MakeCode	(0XEB7C);
	MakeCode	(0XEB82);
	MakeCode	(0XEB92);
	MakeComm	(0XEB9E,	"p_err");
	MakeCode	(x=0XEB9E);
	OpStkvar	(x,	1);
	MakeCode	(0XEBAA);
	MakeCode	(x=0XEBC4);
	OpHex		(x,	1);
	MakeCode	(0XEBD8);
	MakeCode	(0XEBDE);
	MakeCode	(0XEBF2);
	MakeCode	(0XEC04);
	MakeCode	(x=0XEC38);
	OpStkvar	(x,	1);
	MakeCode	(0XEC5A);
	MakeCode	(x=0XEC60);
	OpStkvar	(x,	1);
	MakeDword	(0XEC68);
	MakeCode	(0XEC6C);
	MakeCode	(0XEC70);
	MakeCode	(0XEC78);
	MakeCode	(0XEC82);
	MakeCode	(0XEC8A);
	MakeCode	(0XEC90);
	MakeCode	(x=0XEC9C);
	OpHex		(x,	1);
	MakeCode	(x=0XECA4);
	OpStkvar	(x,	1);
	MakeCode	(0XECAA);
	MakeCode	(x=0XECB6);
	OpHex		(x,	1);
	MakeCode	(x=0XECBE);
	OpStkvar	(x,	1);
	MakeCode	(0XECC4);
	MakeCode	(x=0XECD0);
	OpHex		(x,	1);
	MakeCode	(x=0XECDE);
	OpHex		(x,	1);
	MakeCode	(x=0XECE6);
	OpStkvar	(x,	1);
	MakeCode	(0XECEC);
	MakeCode	(0XECF4);
	MakeCode	(0XED02);
	MakeCode	(x=0XED08);
	OpHex		(x,	1);
	MakeCode	(x=0XED14);
	OpHex		(x,	1);
	MakeCode	(x=0XED2C);
	OpHex		(x,	1);
	MakeCode	(x=0XED3E);
	OpStkvar	(x,	1);
	MakeCode	(0XED44);
	MakeCode	(x=0XED4A);
	OpHex		(x,	1);
	MakeCode	(x=0XED56);
	OpHex		(x,	1);
	MakeCode	(x=0XED6E);
	OpHex		(x,	1);
	MakeCode	(x=0XED76);
	OpStkvar	(x,	1);
	MakeCode	(0XED7C);
	MakeCode	(x=0XED84);
	OpHex		(x,	1);
	MakeCode	(x=0XED96);
	OpHex		(x,	1);
	MakeCode	(0XED9E);
	MakeCode	(x=0XEDA0);
	OpHex		(x,	1);
	MakeCode	(x=0XEDBC);
	OpHex		(x,	1);
	MakeCode	(0XEDCE);
	MakeCode	(x=0XEDE8);
	OpHex		(x,	1);
	MakeCode	(0XEDF2);
	MakeCode	(0XEDF6);
	MakeCode	(x=0XEDFE);
	OpHex		(x,	1);
	MakeCode	(x=0XEE0C);
	OpHex		(x,	1);
	MakeCode	(0XEE14);
	MakeCode	(x=0XEE16);
	OpHex		(x,	1);
	MakeCode	(x=0XEE2C);
	OpStkvar	(x,	1);
	MakeCode	(0XEE32);
	MakeCode	(x=0XEE3A);
	OpHex		(x,	1);
	MakeCode	(x=0XEE42);
	OpHex		(x,	1);
	MakeCode	(x=0XEE60);
	OpHex		(x,	1);
	MakeCode	(0XEE6A);
	MakeCode	(x=0XEE72);
	OpHex		(x,	1);
	MakeCode	(0XEE7C);
	MakeCode	(0XEE9C);
	MakeCode	(0XEEA6);
	MakeCode	(0XEECC);
	MakeCode	(0XEED6);
	MakeCode	(0XEEEE);
	MakeCode	(0XEEF2);
	MakeCode	(x=0XEEF8);
	OpHex		(x,	1);
	MakeCode	(x=0XEF04);
	OpHex		(x,	1);
	MakeCode	(x=0XEF1C);
	OpHex		(x,	1);
	MakeCode	(0XEF36);
	MakeCode	(x=0XEF3C);
	OpHex		(x,	1);
	MakeCode	(x=0XEF48);
	OpHex		(x,	1);
	MakeCode	(x=0XEF60);
	OpHex		(x,	1);
	MakeCode	(0XEF70);
	MakeCode	(0XEF84);
	MakeCode	(0XEFA4);
	MakeCode	(0XEFAC);
	MakeCode	(x=0XEFBE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XEFD0);
	MakeCode	(0XEFEA);
	MakeCode	(0XEFF8);
	MakeCode	(x=0XEFFC);
	OpStkvar	(x,	1);
	MakeCode	(0XF01E);
	MakeCode	(0XF02A);
	MakeCode	(0XF03E);
	MakeCode	(0XF04C);
	MakeCode	(x=0XF05E);
	OpHex		(x,	1);
	MakeByte	(0XF076);
	MakeArray	(0XF076,	0X2);
	MakeDword	(0XF078);
	MakeStr		(0XF07C,	0XF0A3);
	MakeName	(0XF07C,	"aSha204p_send_s");
	MakeByte	(0XF0A3);
	MakeCode	(0XF0A4);
	MakeCode	(x=0XF0AA);
	OpStkvar	(x,	1);
	MakeCode	(0XF0CE);
	MakeCode	(0XF0EE);
	MakeCode	(0XF0F8);
	MakeCode	(0XF110);
	MakeCode	(x=0XF12E);
	OpStkvar	(x,	1);
	MakeCode	(0XF13A);
	MakeCode	(x=0XF148);
	OpStkvar	(x,	1);
	MakeCode	(0XF152);
	MakeCode	(0XF158);
	MakeCode	(x=0XF162);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF176);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF17C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF180);
	OpStkvar	(x,	1);
	MakeCode	(0XF18C);
	MakeCode	(x=0XF196);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF1A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF1B0);
	OpStkvar	(x,	1);
	MakeCode	(0XF1BE);
	MakeCode	(0XF1CC);
	MakeCode	(0XF1DC);
	MakeCode	(0XF1F8);
	MakeCode	(0XF200);
	MakeCode	(0XF204);
	MakeCode	(0XF208);
	MakeCode	(0XF21C);
	MakeCode	(x=0XF220);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF22A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF22C);
	OpStkvar	(x,	1);
	MakeCode	(0XF282);
	MakeCode	(0XF290);
	MakeCode	(0XF2A4);
	MakeCode	(0XF2AE);
	MakeCode	(x=0XF2B2);
	OpHex		(x,	1);
	MakeCode	(0XF2BE);
	MakeCode	(x=0XF2C0);
	OpHex		(x,	1);
	MakeCode	(0XF2C6);
	MakeCode	(x=0XF2D0);
	OpHex		(x,	1);
	MakeCode	(x=0XF2D6);
	OpHex		(x,	1);
	MakeCode	(x=0XF2E4);
	OpHex		(x,	1);
	MakeCode	(x=0XF2EA);
	OpHex		(x,	1);
	MakeCode	(0XF2F4);
	MakeCode	(0XF300);
	MakeCode	(x=0XF306);
	OpHex		(x,	1);
	MakeCode	(0XF316);
	MakeCode	(x=0XF318);
	OpHex		(x,	1);
	MakeCode	(0XF322);
	MakeCode	(0XF326);
	MakeCode	(x=0XF332);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF334);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF338);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF33C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF348);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF34E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF350);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF356);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF358);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF35E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF360);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF36A);
	OpStkvar	(x,	1);
	MakeCode	(0XF386);
	MakeCode	(0XF394);
	MakeCode	(0XF3A8);
	MakeCode	(x=0XF3BE);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF3C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF3C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF3D2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF3D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF3EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF3FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF40E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF416);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF41E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF424);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF42A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF42C);
	OpStkvar	(x,	1);
	MakeCode	(0XF436);
	MakeCode	(0XF43C);
	MakeCode	(0XF442);
	MakeCode	(0XF448);
	MakeCode	(0XF44E);
	MakeCode	(0XF450);
	MakeCode	(0XF452);
	MakeCode	(0XF454);
	MakeCode	(0XF456);
	MakeCode	(0XF45C);
	MakeCode	(0XF462);
	MakeCode	(0XF468);
	MakeCode	(0XF476);
	MakeCode	(0XF478);
	MakeCode	(0XF47A);
	MakeCode	(0XF47C);
	MakeCode	(0XF47E);
	MakeCode	(0XF484);
	MakeCode	(0XF48A);
	MakeCode	(0XF498);
	MakeCode	(0XF49C);
	MakeCode	(0XF4A2);
	MakeCode	(0XF4A8);
	MakeCode	(0XF4AE);
	MakeCode	(x=0XF4D0);
	OpHex		(x,	1);
	MakeCode	(x=0XF4D6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF4E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF4F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF4F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF4FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF4FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF4FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF502);
	OpStkvar	(x,	1);
	MakeCode	(0XF51E);
	MakeCode	(0XF52C);
	MakeCode	(x=0XF54E);
	OpHex		(x,	1);
	MakeCode	(x=0XF552);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF560);
	OpHex		(x,	1);
	MakeCode	(x=0XF566);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF568);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF56C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF576);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF578);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF57A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF57C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF584);
	OpStkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_3(void) {
        auto x;
#define id x

	MakeCode	(0XF5A0);
	MakeCode	(x=0XF5AC);
	OpHex		(x,	1);
	MakeCode	(x=0XF5B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF5BE);
	OpHex		(x,	1);
	MakeCode	(x=0XF5C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF5C6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF5CA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF5D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF5D6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF5D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF5DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF5E0);
	OpStkvar	(x,	1);
	MakeCode	(0XF5FC);
	MakeCode	(x=0XF60C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF61A);
	OpHex		(x,	1);
	MakeCode	(x=0XF622);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF62C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF632);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF634);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF636);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF638);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF63A);
	OpStkvar	(x,	1);
	MakeCode	(0XF65C);
	MakeCode	(0XF66A);
	MakeCode	(0XF670);
	MakeCode	(0XF688);
	MakeCode	(0XF68E);
	MakeCode	(0XF6A6);
	MakeName	(0XF6A6,	"factory_Info");
	MakeCode	(x=0XF6BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF6C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF6CA);
	OpStkvar	(x,	1);
	MakeCode	(0XF6DC);
	MakeName	(0XF6DC,	"chip_Info");
	MakeCode	(x=0XF6EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF6F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF6F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF6F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF6F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF6FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF6FE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF702);
	OpStkvar	(x,	1);
	MakeCode	(0XF714);
	MakeName	(0XF714,	"get_mac");
	MakeCode	(x=0XF720);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF722);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0XF724);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF726);
	OpOff		(x,	1,	0X100006F1);
	OpOff		(x,	129,	0X100006F1);
	MakeCode	(x=0XF728);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF72C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF72E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF746);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF752);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF756);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF75A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF75E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF764);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF768);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF76C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF770);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF772);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF776);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF784);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF790);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF792);
	OpStkvar	(x,	1);
	MakeCode	(0XF7A2);
	MakeCode	(x=0XF7A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF7D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF7DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF7E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XF7E4);
	MakeCode	(x=0XF7EC);
	OpHex		(x,	1);
	MakeCode	(x=0XF7F4);
	OpHex		(x,	1);
	MakeCode	(x=0XF7FC);
	OpHex		(x,	1);
	MakeCode	(x=0XF804);
	OpHex		(x,	1);
	MakeCode	(x=0XF80A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF81C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF820);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF822);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF828);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF82C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF834);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF836);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF838);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF83A);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF83C);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF842);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF844);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF846);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF848);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF84E);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF850);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF852);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF85C);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF85E);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF864);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF868);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF870);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF872);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF876);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF878);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF87A);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF880);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF882);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF884);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF886);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF88C);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF88E);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF890);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF8AA);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF8B0);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF8B6);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(x=0XF8C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF8CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF8D2);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF8D8);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF8DE);
	OpOff		(x,	1,	0X100027A7);
	OpOff		(x,	129,	0X100027A7);
	MakeCode	(x=0XF8E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF8F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF8FA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF902);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF908);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF914);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF91C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF936);
	OpHex		(x,	1);
	MakeCode	(0XF940);
	MakeCode	(x=0XF942);
	OpHex		(x,	1);
	MakeCode	(x=0XF948);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XF94A);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(x=0XF94C);
	OpHex		(x,	1);
	MakeCode	(x=0XF950);
	OpOff		(x,	1,	0X10000018);
	OpOff		(x,	129,	0X10000018);
	MakeCode	(0XF954);
	MakeCode	(x=0XF95C);
	OpStkvar	(x,	1);
	MakeCode	(0XF976);
	MakeCode	(x=0XF980);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF986);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF98C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF990);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF998);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF9A0);
	OpStkvar	(x,	1);
	MakeCode	(0XF9AE);
	MakeCode	(0XF9B6);
	MakeCode	(x=0XF9BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF9C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF9C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF9CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XF9D6);
	OpStkvar	(x,	1);
	MakeCode	(0XF9F4);
	MakeCode	(0XFA00);
	MakeCode	(x=0XFA12);
	OpStkvar	(x,	1);
	MakeCode	(0XFA20);
	MakeCode	(0XFA24);
	MakeCode	(0XFA2C);
	MakeCode	(x=0XFA3E);
	OpStkvar	(x,	1);
	MakeCode	(0XFA4C);
	MakeCode	(0XFA50);
	MakeCode	(0XFA58);
	MakeCode	(x=0XFA7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFA80);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFA84);
	OpStkvar	(x,	1);
	MakeCode	(0XFA8C);
	MakeCode	(x=0XFAAE);
	OpStkvar	(x,	1);
	MakeCode	(0XFAB4);
	MakeByte	(0XFAB6);
	MakeArray	(0XFAB6,	0X2);
	MakeDword	(x=0XFAB8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XFABC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XFAC0,	0XFAD1);
	MakeName	(0XFAC0,	"aFactory_infoEr");
	MakeByte	(0XFAD1);
	MakeArray	(0XFAD1,	0X3);
	MakeStr		(0XFAD4,	0XFADC);
	MakeName	(0XFAD4,	"aMacErr");
	MakeStr		(0XFADC,	0XFAEA);
	MakeName	(0XFADC,	"aChip_infoErr");
	MakeByte	(0XFAEA);
	MakeArray	(0XFAEA,	0X2);
	MakeDword	(0XFAEC);
	MakeDword	(x=0XFAF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0XFAF4,	0XFB18);
	MakeName	(0XFAF4,	"aIsareadyencrpt");
	MakeStr		(0XFB18,	0XFB30);
	MakeName	(0XFB18,	"aBnCCCCCCCCCC");
	MakeStr		(0XFB30,	0XFB55);
	MakeName	(0XFB30,	"aIsareadyencr_0");
	MakeByte	(0XFB55);
	MakeArray	(0XFB55,	0X3);
	MakeStr		(0XFB58,	0XFB71);
	MakeName	(0XFB58,	"aBn2CCCCCCCCCC");
	MakeByte	(0XFB71);
	MakeArray	(0XFB71,	0X3);
	MakeStr		(0XFB74,	0XFB86);
	MakeName	(0XFB74,	"aEncryptChange");
	MakeByte	(0XFB86);
	MakeArray	(0XFB86,	0X2);
	MakeStr		(0XFB88,	0XFB98);
	MakeName	(0XFB88,	"aEncryptLoss");
	MakeDword	(x=0XFB98);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XFB9C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XFBA0);
	MakeCode	(x=0XFBB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFBBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFBC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFBC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFBCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFBD0);
	OpStkvar	(x,	1);
	MakeCode	(0XFBD8);
	MakeCode	(0XFBFA);
	MakeCode	(0XFC06);
	MakeCode	(x=0XFC1C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XFC1E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFC22);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFC24);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFC26);
	OpOff		(x,	1,	0X10002760);
	OpOff		(x,	129,	0X10002760);
	MakeCode	(0XFC32);
	MakeCode	(x=0XFC3E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFC48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFC4E);
	OpStkvar	(x,	1);
	MakeCode	(0XFC58);
	MakeCode	(0XFC60);
	MakeCode	(0XFC76);
	MakeCode	(0XFC8C);
	MakeCode	(0XFCA2);
	MakeCode	(0XFCB8);
	MakeCode	(0XFCCE);
	MakeCode	(0XFCDE);
	MakeCode	(0XFCE8);
	MakeCode	(0XFCF6);
	MakeCode	(0XFD02);
	MakeName	(0XFD02,	"sha204p_send_slave_address");
	MakeCode	(x=0XFD04);
	OpHex		(x,	1);
	MakeCode	(x=0XFD08);
	OpStkvar	(x,	1);
	MakeCode	(0XFD28);
	MakeCode	(0XFD32);
	MakeDword	(x=0XFD50);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XFD54);
	MakeCode	(0XFD66);
	MakeCode	(x=0XFDDE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XFDEA);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFDEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE04);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE18);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE24);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE26);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE36);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE3A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE3E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE40);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE42);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE4A);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE4E);
	OpStkvar	(x,	1);
	MakeCode	(x=0XFE56);
	OpStkvar	(x,	1);
	MakeCode	(0XFE80);
	MakeCode	(x=0XFE8A);
	OpHex		(x,	1);
	MakeCode	(0XFE96);
	MakeCode	(0XFF00);
	MakeCode	(0XFF32);
	MakeCode	(x=0XFF4C);
	OpHex		(x,	1);
	MakeCode	(x=0XFF6C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XFF8E);
	MakeCode	(0XFFB4);
	MakeByte	(0XFFE2);
	MakeArray	(0XFFE2,	0X2);
	MakeDword	(x=0XFFE4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XFFE8);
	MakeCode	(x=0X100C0);
	OpHex		(x,	1);
	MakeCode	(x=0X100C8);
	OpHex		(x,	1);
	MakeCode	(x=0X100D0);
	OpHex		(x,	1);
	MakeCode	(x=0X100D8);
	OpHex		(x,	1);
	MakeCode	(x=0X100E0);
	OpHex		(x,	1);
	MakeCode	(x=0X100E8);
	OpHex		(x,	1);
	MakeCode	(x=0X100F0);
	OpHex		(x,	1);
	MakeCode	(x=0X100F8);
	OpHex		(x,	1);
	MakeCode	(0X1020C);
	MakeCode	(x=0X1023E);
	OpHex		(x,	1);
	MakeCode	(x=0X10246);
	OpHex		(x,	1);
	MakeCode	(0X1040E);
	MakeCode	(x=0X1047C);
	OpHex		(x,	1);
	MakeCode	(x=0X1049C);
	OpHex		(x,	1);
	MakeCode	(x=0X104BC);
	OpHex		(x,	1);
	MakeCode	(x=0X104DA);
	OpHex		(x,	1);
	MakeCode	(x=0X1052C);
	OpHex		(x,	1);
	MakeCode	(x=0X10576);
	OpHex		(x,	1);
	MakeCode	(x=0X10586);
	OpHex		(x,	1);
	MakeCode	(x=0X10590);
	OpHex		(x,	1);
	MakeCode	(x=0X105D0);
	OpHex		(x,	1);
	MakeCode	(x=0X105F0);
	OpHex		(x,	1);
	MakeCode	(x=0X10606);
	OpHex		(x,	1);
	MakeCode	(x=0X1060C);
	OpHex		(x,	1);
	MakeCode	(0X1072E);
	MakeCode	(x=0X10740);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1074A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10756);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1076E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10778);
	OpHex		(x,	1);
	MakeCode	(x=0X10784);
	OpHex		(x,	1);
	MakeCode	(x=0X1079A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107A4);
	OpHex		(x,	1);
	MakeCode	(x=0X107B0);
	OpHex		(x,	1);
	MakeCode	(x=0X107C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107DA);
	OpHex		(x,	1);
	MakeCode	(x=0X107E6);
	OpHex		(x,	1);
	MakeCode	(x=0X10810);
	OpHex		(x,	1);
	MakeCode	(x=0X1081C);
	OpHex		(x,	1);
	MakeCode	(0X10836);
	MakeCode	(0X1083C);
	MakeCode	(x=0X1084C);
	OpHex		(x,	1);
	MakeCode	(x=0X10852);
	OpHex		(x,	1);
	MakeCode	(0X10872);
	MakeCode	(x=0X10886);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10892);
	OpStkvar	(x,	1);
	MakeCode	(x=0X108A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X108AC);
	OpStkvar	(x,	1);
	MakeCode	(0X108B8);
	MakeCode	(0X108EE);
	MakeCode	(0X10908);
	MakeDword	(0X1092C);
	MakeDword	(0X10930);
	MakeDword	(0X10934);
	MakeCode	(0X10938);
	MakeCode	(x=0X10940);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10944);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10948);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1094C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1095A);
	OpStkvar	(x,	1);
	MakeCode	(0X1095E);
	MakeCode	(x=0X10996);
	OpHex		(x,	1);
	MakeCode	(0X109C8);
	MakeCode	(x=0X109EC);
	OpHex		(x,	1);
	MakeCode	(0X10A14);
	MakeCode	(0X10A40);
	MakeCode	(0X10A42);
	MakeCode	(0X10A44);
	MakeCode	(0X10A80);
	MakeCode	(0X10A82);
	MakeCode	(0X10ACA);
	MakeCode	(x=0X10AE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10AEA);
	OpStkvar	(x,	1);
	MakeCode	(0X10AF6);
	MakeCode	(0X10AF8);
	MakeCode	(x=0X10B28);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10B34);
	OpStkvar	(x,	1);
	MakeCode	(0X10B58);
	MakeCode	(0X10B98);
	MakeCode	(0X10B9A);
	MakeCode	(0X10BA6);
	MakeCode	(0X10BB4);
	MakeCode	(0X10BE4);
	MakeCode	(x=0X10C22);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10C24);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X10C26);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X10C34);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X10C36);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X10C40);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X10C42);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X10C4A);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X10C4C);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X10C56);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X10C58);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10C64);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10C6C);
	OpOff		(x,	1,	0X100045C8);
	OpOff		(x,	129,	0X100045C8);
	MakeCode	(x=0X10C70);
	OpOff		(x,	1,	0X100045C8);
	OpOff		(x,	129,	0X100045C8);
	MakeCode	(x=0X10C72);
	OpOff		(x,	1,	0X100045C8);
	OpOff		(x,	129,	0X100045C8);
	MakeCode	(x=0X10C74);
	OpOff		(x,	1,	0X100045C8);
	OpOff		(x,	129,	0X100045C8);
	MakeCode	(x=0X10C7A);
	OpOff		(x,	1,	0X100045C8);
	OpOff		(x,	129,	0X100045C8);
	MakeCode	(x=0X10C7C);
	OpOff		(x,	1,	0X100045C8);
	OpOff		(x,	129,	0X100045C8);
	MakeCode	(x=0X10C7E);
	OpOff		(x,	1,	0X100045C8);
	OpOff		(x,	129,	0X100045C8);
	MakeCode	(x=0X10C82);
	OpOff		(x,	1,	0X100045C8);
	OpOff		(x,	129,	0X100045C8);
	MakeCode	(x=0X10C8A);
	OpOff		(x,	1,	0X100045A0);
	OpOff		(x,	129,	0X100045A0);
	MakeCode	(x=0X10C8C);
	OpOff		(x,	1,	0X100045A0);
	OpOff		(x,	129,	0X100045A0);
	MakeCode	(x=0X10C90);
	OpOff		(x,	1,	0X100045A0);
	OpOff		(x,	129,	0X100045A0);
	MakeCode	(x=0X10C92);
	OpOff		(x,	1,	0X100045A0);
	OpOff		(x,	129,	0X100045A0);
	MakeCode	(x=0X10C94);
	OpOff		(x,	1,	0X100045A0);
	OpOff		(x,	129,	0X100045A0);
	MakeCode	(x=0X10C96);
	OpOff		(x,	1,	0X100045A0);
	OpOff		(x,	129,	0X100045A0);
	MakeCode	(x=0X10C98);
	OpOff		(x,	1,	0X100045A0);
	OpOff		(x,	129,	0X100045A0);
	MakeCode	(x=0X10C9A);
	OpOff		(x,	1,	0X100045A0);
	OpOff		(x,	129,	0X100045A0);
	MakeCode	(x=0X10C9C);
	OpOff		(x,	1,	0X100045A0);
	OpOff		(x,	129,	0X100045A0);
	MakeCode	(x=0X10CA0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10CB0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10CB6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X10CBA);
	MakeCode	(x=0X10CBE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10CCC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10CD6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10CDE);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X10CEE);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X10CF8);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X10D00);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X10D16);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10D32);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeByte	(0X10D36);
	MakeArray	(0X10D36,	0X2);
	MakeDword	(x=0X10D38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10D3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10D40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10D44);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10D48);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10D4C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10D50);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X10D54);
	MakeCode	(x=0X10D78);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10D7C);
	OpStkvar	(x,	1);
	MakeCode	(0X10D80);
	MakeCode	(0X10DB2);
	MakeCode	(x=0X10DC6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10DC8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X10DE4);
	MakeCode	(0X10DEE);
	MakeCode	(0X10E04);
	MakeCode	(0X10E10);
	MakeCode	(0X10E22);
	MakeCode	(0X10E36);
	MakeCode	(0X10E4C);
	MakeCode	(0X10E5A);
	MakeCode	(x=0X10E6E);
	OpStkvar	(x,	1);
	MakeCode	(0X10E76);
	MakeCode	(0X10E78);
	MakeCode	(0X10E80);
	MakeCode	(x=0X10EAC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10EAE);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(0X10ECA);
	MakeCode	(0X10EEE);
	MakeCode	(0X10F28);
	MakeCode	(0X10F2C);
	MakeCode	(x=0X10F32);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10F3A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10F42);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10F52);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X10F5A);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X10F5E);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X10F62);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X10F7A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10F80);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10F8C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10F94);
	OpHex		(x,	1);
	MakeCode	(0X10FAA);
	MakeCode	(x=0X10FD8);
	OpHex		(x,	1);
	MakeCode	(0X10FDE);
	MakeCode	(0X10FE8);
	MakeCode	(0X11002);
	MakeCode	(0X1100E);
	MakeCode	(0X11022);
	MakeCode	(0X1103A);
	MakeCode	(0X11050);
	MakeCode	(0X1105A);
	MakeCode	(0X11076);
	MakeCode	(0X1107E);
	MakeCode	(x=0X110BE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X110DA);
	MakeCode	(x=0X110FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11102);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X11106);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X11108);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X1110C);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X1110E);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X11112);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X11114);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X11118);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X1111A);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X1111E);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(0X11128);
	MakeCode	(x=0X11132);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1113A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11142);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1114C);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X1115A);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X11160);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X11162);
	OpStkvar	(x,	1);
	MakeCode	(x=0X11166);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X11170);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X11188);
	MakeCode	(x=0X111A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X111B2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X111B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X111BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X111C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X111C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X111C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X111CC);
	MakeCode	(x=0X111CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X111D4);
	MakeCode	(0X111DA);
	MakeCode	(0X11212);
	MakeCode	(0X11214);
	MakeCode	(0X11234);
	MakeCode	(x=0X11248);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11250);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X11254);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X11256);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X1125A);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X1125C);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(0X11262);
	MakeCode	(0X11264);
	MakeCode	(x=0X1126A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1126C);
	OpHex		(x,	1);
	MakeCode	(x=0X11270);
	OpHex		(x,	1);
	MakeCode	(0X11290);
	MakeCode	(x=0X11292);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1129C);
	MakeCode	(x=0X112A2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X112C2);
	OpHex		(x,	1);
	MakeCode	(x=0X112C6);
	OpHex		(x,	1);
	MakeCode	(x=0X112CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X112DE);
	MakeCode	(x=0X112EE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1130E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X11312);
	MakeCode	(0X11314);
	MakeCode	(0X11318);
	MakeCode	(x=0X11336);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1133C);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X11340);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11342);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X11346);
	OpOff		(x,	1,	0X4003C000);
	OpOff		(x,	129,	0X4003C000);
	MakeCode	(x=0X11348);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1134E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X11356);
	MakeCode	(0X1135A);
	MakeCode	(x=0X1135E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11364);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11368);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11378);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1137A);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X11384);
	OpStkvar	(x,	1);
	MakeCode	(x=0X11386);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X1138A);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(x=0X11392);
	OpOff		(x,	1,	0X1000047C);
	OpOff		(x,	129,	0X1000047C);
	MakeCode	(0X113BE);
	MakeCode	(0X113DC);
	MakeCode	(0X11400);
	MakeCode	(x=0X11434);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1143A);
	OpStkvar	(x,	1);
	MakeCode	(0X1143E);
	MakeCode	(0X1144E);
	MakeCode	(0X11458);
	MakeCode	(0X114A6);
	MakeCode	(0X114A8);
	MakeCode	(0X114AA);
	MakeCode	(0X114AC);
	MakeCode	(0X114AE);
	MakeCode	(0X114B8);
	MakeCode	(0X114D6);
	MakeCode	(x=0X114E2);
	OpStkvar	(x,	1);
	MakeCode	(0X11500);
	MakeCode	(0X11524);
	MakeCode	(x=0X11558);
	OpStkvar	(x,	1);
	MakeCode	(x=0X11560);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X11566);
	MakeCode	(0X11576);
	MakeCode	(0X11580);
	MakeDword	(x=0X115BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X115C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X115C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X115C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X115CC);
	MakeCode	(x=0X115DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X115DE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X115EE);
	MakeCode	(0X11618);
	MakeCode	(x=0X1162E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X11634);
	MakeCode	(0X11670);
	MakeCode	(0X11682);
	MakeCode	(0X116A2);
	MakeByte	(0X116A6);
	MakeArray	(0X116A6,	0X2);
	MakeDword	(x=0X116A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X116AC);
	MakeCode	(x=0X116B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X116D0);
	MakeCode	(0X116D2);
	MakeCode	(0X11700);
	MakeCode	(0X1171A);
	MakeCode	(0X1171E);
	MakeCode	(0X11722);
	MakeCode	(0X11726);
	MakeCode	(0X11730);
	MakeCode	(0X11732);
	MakeCode	(x=0X11736);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11744);
	OpOff		(x,	1,	0X10004608);
	OpOff		(x,	129,	0X10004608);
	MakeCode	(x=0X11748);
	OpOff		(x,	1,	0X10004608);
	OpOff		(x,	129,	0X10004608);
	MakeCode	(x=0X1174C);
	OpOff		(x,	1,	0X10004608);
	OpOff		(x,	129,	0X10004608);
	MakeCode	(x=0X11752);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11764);
	OpOff		(x,	1,	0X10004608);
	OpOff		(x,	129,	0X10004608);
	MakeCode	(x=0X11770);
	OpOff		(x,	1,	0X10004608);
	OpOff		(x,	129,	0X10004608);
	MakeCode	(x=0X11772);
	OpOff		(x,	1,	0X10000486);
	OpOff		(x,	129,	0X10000486);
	MakeCode	(x=0X11776);
	OpOff		(x,	1,	0X10004608);
	OpOff		(x,	129,	0X10004608);
	MakeCode	(x=0X11778);
	OpOff		(x,	1,	0X10000486);
	OpOff		(x,	129,	0X10000486);
	MakeCode	(x=0X1177E);
	OpOff		(x,	1,	0X10000486);
	OpOff		(x,	129,	0X10000486);
	MakeCode	(0X11782);
	MakeCode	(0X11786);
	MakeCode	(x=0X11788);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1178A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11798);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X117AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X117B4);
	OpOff		(x,	1,	0X40044000);
	OpOff		(x,	129,	0X40044000);
	MakeCode	(x=0X117B6);
	OpOff		(x,	1,	0X40044000);
	OpOff		(x,	129,	0X40044000);
	MakeCode	(x=0X117C2);
	OpHex		(x,	1);
	MakeCode	(0X117CA);
	MakeCode	(x=0X117CC);
	OpStkvar	(x,	1);
	MakeCode	(0X117D8);
	MakeCode	(x=0X117DA);
	OpStkvar	(x,	1);
	MakeCode	(0X117E6);
	MakeCode	(x=0X117E8);
	OpStkvar	(x,	1);
	MakeCode	(0X117F4);
	MakeCode	(x=0X117FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X11800);
	OpStkvar	(x,	1);
	MakeCode	(x=0X11802);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11810);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X11828);
	MakeCode	(x=0X1182C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X11852);
	OpStkvar	(x,	1);
	MakeCode	(x=0X11864);
	OpHex		(x,	1);
	MakeCode	(x=0X1186E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1187C);
	OpStkvar	(x,	1);
	MakeCode	(0X1188A);
	MakeCode	(x=0X11898);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1189E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X118AA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X118C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X118E6);
	OpStkvar	(x,	1);
	MakeCode	(0X118F6);
	MakeCode	(x=0X118FA);
	OpHex		(x,	1);
	MakeCode	(x=0X11906);
	OpStkvar	(x,	1);
	MakeCode	(x=0X11928);
	OpStkvar	(x,	1);
	MakeCode	(0X11938);
	MakeCode	(x=0X1193E);
	OpHex		(x,	1);
	MakeCode	(x=0X11948);
	OpStkvar	(x,	1);
	MakeCode	(x=0X11964);
	OpStkvar	(x,	1);
	MakeCode	(0X1197A);
	MakeCode	(x=0X1197C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1197E);
	OpOff		(x,	1,	0X40044000);
	OpOff		(x,	129,	0X40044000);
	MakeCode	(x=0X11998);
	OpHex		(x,	1);
	MakeCode	(x=0X119B6);
	OpOff		(x,	1,	0X40044000);
	OpOff		(x,	129,	0X40044000);
	MakeCode	(x=0X119BE);
	OpOff		(x,	1,	0X40044000);
	OpOff		(x,	129,	0X40044000);
	MakeCode	(x=0X119C0);
	OpOff		(x,	1,	0X40044000);
	OpOff		(x,	129,	0X40044000);
	MakeCode	(0X119CE);
	MakeCode	(0X119D0);
	MakeCode	(x=0X119D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X119D6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X119E0);
	OpHex		(x,	1);
	MakeCode	(x=0X119E6);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X119E8);
	OpHex		(x,	1);
	MakeCode	(x=0X119EC);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X119EE);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X119F0);
	OpHex		(x,	1);
	MakeCode	(x=0X119F4);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X119F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11A02);
	OpHex		(x,	1);
	MakeCode	(x=0X11A08);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X11A0A);
	OpHex		(x,	1);
	MakeCode	(x=0X11A0E);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X11A10);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X11A12);
	OpHex		(x,	1);
	MakeCode	(x=0X11A16);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(0X11A34);
	MakeByte	(0X11A42);
	MakeArray	(0X11A42,	0X2);
	MakeDword	(x=0X11A44);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X11A48);
	MakeDword	(0X11A4C);
	MakeDword	(0X11A50);
	MakeDword	(x=0X11A54);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X11A58);
	MakeDword	(x=0X11A5C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X11A60);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X11A64);
	MakeDword	(x=0X11A68);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X11A6C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X11A70);
	MakeCode	(0X11ACC);
	MakeCode	(0X11AE0);
	MakeCode	(0X11AF2);
	MakeCode	(0X11B06);
	MakeCode	(0X11B0A);
	MakeCode	(0X11B1C);
	MakeCode	(0X11B20);
	MakeCode	(0X11B2C);
	MakeCode	(0X11B34);
	MakeCode	(0X11B4C);
	MakeCode	(0X11B50);
	MakeCode	(0X11B6C);
	MakeCode	(0X11B84);
	MakeCode	(0X11BA0);
	MakeCode	(0X11BDA);
	MakeCode	(0X11BE6);
	MakeCode	(0X11BF2);
	MakeCode	(0X11C06);
	MakeCode	(0X11C08);
	MakeCode	(x=0X11C20);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X11C40);
	MakeByte	(0X11C42);
	MakeArray	(0X11C42,	0X2);
	MakeDword	(0X11C44);
	MakeDword	(0X11C48);
	MakeDword	(0X11C4C);
	MakeStr		(0X11C50,	0X11C65);
	MakeName	(0X11C50,	"aCanBufOverFlow");
	MakeByte	(0X11C65);
	MakeArray	(0X11C65,	0X3);
	MakeCode	(0X11C68);
	MakeCode	(x=0X11C6E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11C72);
	OpHex		(x,	1);
	MakeCode	(x=0X11C78);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11C7C);
	OpHex		(x,	1);
	MakeCode	(x=0X11C8A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X11C8A,	"OS_TS_GET");
	MakeCode	(x=0X11C8C);
	OpOff		(x,	1,	0XE0001000);
	OpOff		(x,	129,	0XE0001000);
	MakeCode	(0X11C90);
	MakeByte	(0X11C96);
	MakeArray	(0X11C96,	0X2);
	MakeDword	(x=0X11C98);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X11C9C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X11CA0);
	MakeName	(0X11CA0,	"nullsub_11");
	MakeCode	(0X11CA2);
	MakeCode	(0X11CAE);
	MakeCode	(0X11CB0);
	MakeName	(0X11CB0,	"j___disable_irq");
	MakeCode	(0X11CB4);
	MakeCode	(0X11CC0);
	MakeCode	(0X11CC2);
	MakeCode	(x=0X11CD6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X11CE0,	"priMask");
	MakeCode	(0X11CEA);
	MakeCode	(0X11CEC);
	MakeComm	(0X11D0E,	"priMask");
	MakeCode	(0X11D18);
	MakeCode	(0X11D1A);
	MakeName	(0X11D1A,	"nullsub_12");
	MakeCode	(0X11D1C);
	MakeCode	(0X11D30);
	MakeCode	(0X11D32);
	MakeCode	(0X11D34);
	MakeCode	(0X11D36);
	MakeCode	(0X11D38);
	MakeCode	(0X11D3A);
	MakeCode	(0X11D3C);
	MakeCode	(0X11D3E);
	MakeName	(0X11D3E,	"OS_CPU_IntHandler");
	MakeComm	(0X11D54,	"priMask");
	MakeCode	(x=0X11D5E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(0X11D70);
	MakeArray	(0X11D70,	0X23);
	MakeDword	(x=0X11DFC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X11E00);
	MakeArray	(0X11E00,	0X64);
	MakeCode	(0X11F90);
	MakeName	(0X11F90,	"OSCfg_Init");
	MakeArray	(0X11F92,	0X2);
	MakeCode	(x=0X11F94);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X11F94,	"OS_IdleTask");
	MakeCode	(0X11FA2);
	MakeName	(0X11FA2,	"OS_IdleTaskInit");
	MakeCode	(x=0X11FA4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X11FAE,	"time_quanta");
	MakeCode	(x=0X11FAE);
	OpStkvar	(x,	1);
	MakeComm	(0X11FB0,	"p_ext");
	MakeCode	(x=0X11FB0);
	OpStkvar	(x,	1);
	MakeComm	(0X11FB2,	"opt");
	MakeComm	(0X11FC2,	"stk_limit");
	MakeCode	(x=0X11FC2);
	OpStkvar	(x,	1);
	MakeComm	(0X11FC4,	"stk_size");
	MakeComm	(0X11FCA,	"prio");
	MakeComm	(0X11FCE,	"p_arg");
	MakeComm	(0X11FD0,	"p_task");
	MakeCode	(x=0X11FD0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11FD4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X11FD6,	"p_tcb");
	MakeCode	(0X11FE0);
	MakeName	(0X11FE0,	"OS_RdyListInit");
	MakeCode	(x=0X11FE2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X11FF8);
	OpDecimal	(x,	1);
	MakeCode	(0X11FFE);
	MakeName	(0X11FFE,	"OSInit");
	MakeCode	(x=0X12006);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1200E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12012);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12016);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1201A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1201E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1203C,	"p_err");
	MakeComm	(0X12048,	"p_err");
	MakeComm	(0X12054,	"p_err");
	MakeComm	(0X12060,	"p_err");
	MakeComm	(0X1206C,	"p_err");
	MakeCode	(0X12084);
	MakeCode	(x=0X12086);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X12086,	"OSIntEnter");
	MakeCode	(x=0X1208E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12092);
	OpDecimal	(x,	1);
	MakeCode	(x=0X1209C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X1209C,	"OSIntExit");
	MakeCode	(x=0X120AA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X120B4);
	OpHex		(x,	1);
	MakeCode	(x=0X120BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X120C6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X120CA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X120D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X120D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X120E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X120F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X120F8,	"priMask");
	MakeCode	(0X12102);
	MakeCode	(x=0X12104);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X12104,	"OSSched");
	MakeCode	(x=0X1210E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X12116,	"CPU_INT_DIS");
	MakeRptCmt	(0X1211C,	"Find the highest priority ready");
	MakeCode	(x=0X12120);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12124);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1212E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12132);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X1213E,	"Inc. # of context switches to this task");
	MakeCode	(x=0X12142);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X12146,	"Increment context switch counter");
	MakeCode	(x=0X1214A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X12152,	"priMask");
	MakeCode	(0X1215C);
	MakeCode	(x=0X1215E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X1215E,	"OS_SchedLockTimeMeasStart");
	MakeCode	(x=0X1216C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12172);
	MakeName	(0X12172,	"OSSchedLock");
	MakeCode	(x=0X12176);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12184);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12192);
	MakeComm	(0X121AA,	"priMask");
	MakeCode	(x=0X121B6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X121B6,	"OS_SchedLockTimeMeasStop");
	MakeCode	(x=0X121C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X121CA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X121D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X121E0);
	MakeName	(0X121E0,	"OSSchedUnlock");
	MakeCode	(x=0X121E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X121F2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12206);
	OpHex		(x,	1);
	MakeComm	(0X12212,	"priMask");
	MakeCode	(0X1221E);
	MakeCode	(0X12224);
	MakeComm	(0X1222C,	"priMask");
	MakeCode	(0X1223C);
	MakeName	(0X1223C,	"OSStart");
	MakeCode	(x=0X1223E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1224E);
	MakeCode	(x=0X12252);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12256);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1225A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12264);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12268);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12274);
	MakeCode	(0X1227A);
	MakeCode	(0X12284);
	MakeName	(0X12284,	"OS_PendDbgNameAdd");
	MakeCode	(0X12296);
	MakeCode	(x=0X122A2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X122A6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X122AA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X122B2);
	MakeName	(0X122B2,	"OS_PendListInsertPrio");
	MakeCode	(0X122C8);
	MakeCode	(0X122D4);
	MakeCode	(0X122E6);
	MakeCode	(0X122F6);
	MakeCode	(0X12302);
	MakeCode	(0X1230C);
	MakeName	(0X1230C,	"OS_PendDataInit");
	MakeCode	(0X12318);
	MakeCode	(0X1233C);
	MakeName	(0X1233C,	"OS_RdyListRemove");
	MakeCode	(x=0X12344);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12368);
	MakeCode	(0X12376);
	MakeCode	(0X12378);
	MakeByte	(0X1237A);
	MakeArray	(0X1237A,	0X2);
	MakeDword	(x=0X1237C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X12380);
	MakeArray	(0X12380,	0X3);
	MakeStr		(0X1238C,	0X123A0);
	MakeName	(0X1238C,	"aUcOsIiiIdleTask");
	MakeCode	(0X123A0);
	MakeDword	(x=0X123A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X123A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X123AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X123B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X123B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X123B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X123BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X123C0);
	MakeDword	(0X123C4);
	MakeDword	(x=0X123C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X123CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X123D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X123D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X123D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X123DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X123E0,	0X123E2);
	MakeStr		(0X123E4,	0X123EB);
	MakeName	(0X123E4,	"aTaskQ");
	MakeByte	(0X123EB);
	MakeStr		(0X123EC,	0X123F5);
	MakeName	(0X123EC,	"aTaskSem");
	MakeByte	(0X123F5);
	MakeArray	(0X123F5,	0X3);
	MakeCode	(0X123F8);
	MakeComm	(0X123FE,	"prio");
	MakeCode	(0X12408);
	MakeCode	(0X1240C);
	MakeName	(0X1240C,	"OS_TaskBlock");
	MakeComm	(0X12414,	"p_err");
	MakeComm	(0X12416,	"opt");
	MakeCode	(x=0X1241C);
	OpStkvar	(x,	1);
	MakeComm	(0X12426,	"p_tcb");
	MakeCode	(0X1242E);
	MakeCode	(0X12436);
	MakeName	(0X12436,	"OS_Pend");
	MakeCode	(x=0X1243A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X12440,	"p_tcb");
	MakeComm	(0X12444,	"timeout");
	MakeComm	(0X1245A,	"tbl_size");
	MakeComm	(0X1245C,	"p_pend_data_tbl");
	MakeComm	(0X1245E,	"p_tcb");
	MakeComm	(0X12464,	"p_pend_data");
	MakeComm	(0X12466,	"p_pend_list");
	MakeCode	(0X1246E);
	MakeComm	(0X12474,	"p_obj");
	MakeComm	(0X12476,	"p_tcb");
	MakeCode	(0X1247E);
	MakeName	(0X1247E,	"OS_PendListRemove1");
	MakeCode	(0X124A0);
	MakeCode	(0X124A6);
	MakeCode	(0X124AE);
	MakeCode	(0X124B4);
	MakeName	(0X124B4,	"OS_PendListRemove");
	MakeCode	(0X124BE);
	MakeComm	(0X124C0,	"p_pend_data");
	MakeComm	(0X124C2,	"p_pend_list");
	MakeCode	(0X124DA);
	MakeName	(0X124DA,	"OS_PendAbort1");
	MakeCode	(0X124E2);
	MakeCode	(0X124EE);
	MakeCode	(0X124FA);
	MakeName	(0X124FA,	"OS_RdyListInsertHead");
	MakeCode	(x=0X124FE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12520);
	MakeCode	(0X1252E);
	MakeName	(0X1252E,	"OS_RdyListInsertTail");
	MakeCode	(x=0X12532);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12552);
	MakeCode	(0X1255E);
	MakeName	(0X1255E,	"OS_RdyListInsert");
	MakeComm	(0X12562,	"prio");
	MakeCode	(x=0X1256A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X12574,	"p_tcb");
	MakeCode	(0X1257E);
	MakeCode	(0X12584);
	MakeName	(0X12584,	"OS_TaskRdy");
	MakeComm	(0X12594,	"p_tcb");
	MakeCode	(0X1259C);
	MakeCode	(0X1259E);
	MakeName	(0X1259E,	"OS_PendAbort");
	MakeComm	(0X125B2,	"switch 8 cases ");
	MakeComm	(0X125B6,	"switch jump");
	MakeComm	(0X125BA,	"jump table for switch statement");
	MakeByte	(0X125BA);
	MakeName	(0X125BA,	"jpt_125B6");
	MakeByte	(0X125BB);
	MakeByte	(0X125BC);
	MakeByte	(0X125BD);
	MakeByte	(0X125BE);
	MakeByte	(0X125BF);
	MakeComm	(0X125C0,	"ts");
	MakeByte	(0X125C0);
	MakeByte	(0X125C1);
	MakeRptCmt	(0X125C2,	"jumptable 000125B6 cases 2,3");
	MakeCode	(0X125C2);
	MakeComm	(0X125CA,	"p_tcb");
	MakeComm	(0X125CC,	"p_obj");
	MakeComm	(0X125DC,	"p_tcb");
	MakeComm	(0X125E2,	"p_tcb");
	MakeRptCmt	(0X125EE,	"jumptable 000125B6 cases 6,7");
	MakeCode	(0X125EE);
	MakeComm	(0X125F6,	"p_tcb");
	MakeComm	(0X125F8,	"p_obj");
	MakeComm	(0X12608,	"p_tcb");
	MakeComm	(0X1260E,	"p_tcb");
	MakeRptCmt	(0X12622,	"jumptable 000125B6 default case");
	MakeName	(0X12622,	"def_126CC");
	MakeCode	(x=0X12626);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X12626,	"OS_PendDbgNameRemove");
	MakeCode	(x=0X12636);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1263C);
	MakeName	(0X1263C,	"OS_PendListChangePrio");
	MakeCode	(0X12648);
	MakeComm	(0X12652,	"p_pend_data");
	MakeComm	(0X12654,	"p_pend_list");
	MakeComm	(0X1265A,	"p_pend_data");
	MakeComm	(0X1265C,	"p_pend_list");
	MakeCode	(0X1266E);
	MakeName	(0X1266E,	"OS_PendListInit");
	MakeCode	(0X12678);
	MakeName	(0X12678,	"OS_PendListInsertHead");
	MakeCode	(0X12698);
	MakeName	(0X12698,	"OS_PendObjDel1");
	MakeCode	(0X126A0);
	MakeCode	(0X126AC);
	MakeCode	(0X126B8);
	MakeName	(0X126B8,	"OS_PendObjDel");
	MakeComm	(0X126C8,	"switch 8 cases ");
	MakeComm	(0X126CC,	"switch jump");
	MakeComm	(0X126D0,	"jump table for switch statement");
	MakeByte	(0X126D0);
	MakeName	(0X126D0,	"jpt_126CC");
	MakeByte	(0X126D1);
	MakeByte	(0X126D2);
	MakeByte	(0X126D3);
	MakeByte	(0X126D4);
	MakeByte	(0X126D5);
	MakeByte	(0X126D6);
	MakeByte	(0X126D7);
	MakeRptCmt	(0X126D8,	"jumptable 000126CC cases 2,3");
	MakeCode	(0X126D8);
	MakeComm	(0X126E0,	"ts");
	MakeComm	(0X126E2,	"p_tcb");
	MakeComm	(0X126EE,	"p_tcb");
	MakeComm	(0X126F6,	"p_tcb");
	MakeRptCmt	(0X12702,	"jumptable 000126CC cases 6,7");
	MakeCode	(0X12702);
	MakeComm	(0X1270A,	"ts");
	MakeComm	(0X1270C,	"p_tcb");
	MakeComm	(0X12718,	"p_tcb");
	MakeComm	(0X12720,	"p_tcb");
	MakeRptCmt	(0X12734,	"jumptable 000126CC cases 0,1,4,5");
	MakeCode	(0X12736);
	MakeName	(0X12736,	"OS_Post1");
	MakeCode	(x=0X1273A);
	OpStkvar	(x,	1);
	MakeCode	(0X12740);
	MakeCode	(0X12750);
	MakeCode	(0X1275C);
	MakeName	(0X1275C,	"OS_Post");
	MakeCode	(x=0X12768);
	OpStkvar	(x,	1);
	MakeComm	(0X1276A,	"switch 8 cases ");
	MakeComm	(0X1276E,	"switch jump");
	MakeComm	(0X12772,	"jump table for switch statement");
	MakeByte	(0X12772);
	MakeName	(0X12772,	"jpt_1276E");
	MakeByte	(0X12773);
	MakeByte	(0X12774);
	MakeByte	(0X12775);
	MakeByte	(0X12776);
	MakeByte	(0X12777);
	MakeByte	(0X12778);
	MakeByte	(0X12779);
	MakeRptCmt	(0X1277A,	"jumptable 0001276E cases 2,3");
	MakeCode	(0X1277A);
	MakeComm	(0X1278C,	"p_tcb");
	MakeComm	(0X12792,	"p_tcb");
	MakeComm	(0X12794,	"p_obj");
	MakeComm	(0X1279A,	"p_tcb");
	MakeComm	(0X127A6,	"ts");
	MakeCode	(x=0X127A6);
	OpStkvar	(x,	1);
	MakeComm	(0X127A8,	"p_tcb");
	MakeComm	(0X127AA,	"p_obj");
	MakeRptCmt	(0X127B2,	"jumptable 0001276E cases 6,7");
	MakeCode	(0X127B2);
	MakeComm	(0X127C2,	"p_tcb");
	MakeComm	(0X127CA,	"p_tcb");
	MakeComm	(0X127D0,	"p_tcb");
	MakeComm	(0X127D2,	"p_obj");
	MakeRptCmt	(0X127E6,	"jumptable 0001276E default case");
	MakeName	(0X127E6,	"def_1276E");
	MakeComm	(0X127E8,	"ts");
	MakeCode	(x=0X127E8);
	OpStkvar	(x,	1);
	MakeComm	(0X127EA,	"p_tcb");
	MakeComm	(0X127EC,	"p_obj");
	MakeCode	(0X127F4);
	MakeCode	(0X12816);
	MakeDword	(x=0X12828);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1282C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X12830);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X12834,	0X12836);
	MakeArray	(0X12836,	0X2);
	MakeCode	(0X12838);
	MakeName	(0X12838,	"OSIdleTaskHook");
	MakeCode	(0X1283A);
	MakeName	(0X1283A,	"OSInitHook");
	MakeRptCmt	(0X1283C,	"OSCfg_ISRStkunk1");
	MakeCode	(x=0X1283C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X12840,	"OSCfg_ISRStkunk2");
	MakeCode	(x=0X12840);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12848);
	MakeCode	(x=0X12854);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12860);
	MakeName	(0X12860,	"OSStatTaskHook");
	MakeCode	(0X12862);
	MakeName	(0X12862,	"OSTaskCreateHook");
	MakeCode	(0X12864);
	MakeName	(0X12864,	"OSTaskDelHook");
	MakeCode	(0X12866);
	MakeName	(0X12866,	"OSTaskReturnHook");
	MakeCode	(0X12868);
	MakeName	(0X12868,	"OSTaskStkInit");
	MakeCode	(x=0X1286A);
	OpStkvar	(x,	1);
	MakeRptCmt	(0X12878,	"OS_TaskReturn ?");
	MakeCode	(x=0X12878);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X128C4);
	MakeName	(0X128C4,	"OSTaskSwHook");
	MakeCode	(x=0X128CA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X128CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X128D6);
	OpStroffEx	(x,	1,	GetStrucIdByName("OS_TCB"),	0);
	MakeCode	(x=0X128DC);
	OpStroffEx	(x,	1,	GetStrucIdByName("OS_TCB"),	0);
	MakeCode	(x=0X128E6);
	OpStroffEx	(x,	1,	GetStrucIdByName("OS_TCB"),	0);
	MakeCode	(x=0X128F0);
	OpStroffEx	(x,	1,	GetStrucIdByName("OS_TCB"),	0);
	MakeCode	(x=0X128F8);
	OpStroffEx	(x,	1,	GetStrucIdByName("OS_TCB"),	0);
	MakeCode	(x=0X128FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X128FE);
	OpStroffEx	(x,	1,	GetStrucIdByName("OS_TCB"),	0);
	MakeCode	(x=0X12908);
	OpStroffEx	(x,	1,	GetStrucIdByName("OS_TCB"),	0);
	MakeCode	(0X12912);
	MakeName	(0X12912,	"OSTimeTickHook");
	MakeCode	(0X12914);
	MakeName	(0X12914,	"OS_CPU_SysTickHandler");
	MakeCode	(x=0X12920);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1292C,	"priMask");
	MakeCode	(0X1293E);
	MakeName	(0X1293E,	"OS_CPU_SysTickInit");
	MakeCode	(x=0X12944);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeCode	(x=0X12946);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1294A);
	OpHex		(x,	1);
	MakeCode	(x=0X12950);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeCode	(x=0X12952);
	OpHex		(x,	1);
	MakeCode	(x=0X12956);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeCode	(x=0X12958);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeCode	(x=0X1295A);
	OpHex		(x,	1);
	MakeCode	(x=0X1295E);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeByte	(0X12962);
	MakeArray	(0X12962,	0X2);
	MakeDword	(x=0X12964);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X12968);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1296C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X12970);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X12974);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X12978);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1297C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X12980);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X12984);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X12988);
	MakeName	(0X12988,	"OS_Dbg_Init");
	MakeByte	(0X1298A);
	MakeArray	(0X1298A,	0X2);
	MakeCode	(0X1298C);
	MakeName	(0X1298C,	"OS_MsgPoolCreate");
	MakeCode	(0X1299C);
	MakeCode	(0X129BC);
	MakeCode	(x=0X129C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X129D6);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(x=0X129DA);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(0X129E2);
	MakeName	(0X129E2,	"OS_MsgPoolInit");
	MakeCode	(x=0X129E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X129E6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X129EA,	"size");
	MakeComm	(0X129EC,	"p_msg");
	MakeCode	(x=0X129F2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X129FC);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(x=0X129FE);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(0X12A04);
	MakeComm	(0X12A1A,	"priMask");
	MakeCode	(0X12A24);
	MakeName	(0X12A24,	"OS_MsgQFreeAll");
	MakeCode	(x=0X12A2A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12A36);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(x=0X12A3C);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(x=0X12A3E);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(x=0X12A42);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(0X12A52);
	MakeName	(0X12A52,	"OS_MsgQInit");
	MakeCode	(0X12A60);
	MakeName	(0X12A60,	"OS_MsgQGet");
	MakeCode	(x=0X12A82);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12A8A);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(x=0X12A8E);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(x=0X12A90);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(x=0X12A94);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(0X12A9C);
	MakeCode	(0X12AAC);
	MakeCode	(0X12AB2);
	MakeName	(0X12AB2,	"OS_MsgQPut");
	MakeCode	(x=0X12AC8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12ACA);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(x=0X12AE2);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(x=0X12AE6);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(x=0X12AEE);
	OpOff		(x,	1,	0X100004A8);
	OpOff		(x,	129,	0X100004A8);
	MakeCode	(0X12B04);
	MakeCode	(0X12B0E);
	MakeCode	(0X12B16);
	MakeDword	(x=0X12B38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X12B3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X12B40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X12B44);
	MakeName	(0X12B44,	"OS_PrioInit");
	MakeCode	(x=0X12B46);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12B54);
	MakeName	(0X12B54,	"OS_PrioGetHighest");
	MakeCode	(x=0X12B58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12B5C);
	MakeComm	(0X12B68,	"val");
	MakeCode	(x=0X12B74);
	OpHex		(x,	1);
	MakeName	(0X12B74,	"OS_PrioInsert");
	MakeCode	(x=0X12B82);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12B90);
	OpHex		(x,	1);
	MakeName	(0X12B90,	"OS_PrioRemove");
	MakeCode	(x=0X12B9E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X12BAC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X12BB0);
	MakeName	(0X12BB0,	"OS_SemDbgListAdd");
	MakeCode	(x=0X12BB2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12BB4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12BC6);
	MakeCode	(0X12BCA);
	MakeName	(0X12BCA,	"OSSemCreate");
	MakeComm	(0X12BEC,	"p_pend_list");
	MakeComm	(0X12BF4,	"p_sem");
	MakeCode	(x=0X12BFA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X12C06,	"priMask");
	MakeCode	(0X12C14);
	MakeName	(0X12C14,	"OS_SemClr");
	MakeCode	(x=0X12C22);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12C2A);
	MakeName	(0X12C2A,	"OS_SemDbgListRemove");
	MakeCode	(x=0X12C3E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X12C4A);
	MakeCode	(0X12C4E);
	MakeName	(0X12C4E,	"OSSemDel");
	MakeRptCmt	(0X12C58,	"CPU_CRITICAL_ENTER 1/2");
	MakeCode	(x=0X12C5C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0X12C5E,	"CPU_CRITICAL_ENTER 2/2");
	MakeCode	(x=0X12C6A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X12C82,	"priMask");
	MakeCode	(x=0X12C82);
	OpStkvar	(x,	1);
	MakeCode	(0X12C8E);
	MakeComm	(0X12C94,	"priMask");
	MakeCode	(x=0X12C94);
	OpStkvar	(x,	1);
	MakeComm	(0X12CA2,	"p_sem");
	MakeCode	(0X12CA2);
	MakeComm	(0X12CAC,	"p_sem");
	MakeComm	(0X12CBC,	"priMask");
	MakeCode	(x=0X12CBC);
	OpStkvar	(x,	1);
	MakeCode	(0X12CC4);
	MakeCode	(0X12CCC);
	MakeComm	(0X12CCE,	"ts");
	MakeComm	(0X12CD0,	"p_tcb");
	MakeComm	(0X12CD2,	"p_obj");
	MakeComm	(0X12CE0,	"p_sem");
	MakeComm	(0X12CEA,	"p_sem");
	MakeRptCmt	(0X12CF6,	"CPU_CRITICAL_EXIT 1/2");
	MakeComm	(0X12CFA,	"priMask");
	MakeCode	(x=0X12CFA);
	OpStkvar	(x,	1);
	MakeRptCmt	(0X12CFC,	"CPU_CRITICAL_EXIT 2/2");
	MakeCode	(0X12D0E);
	MakeCode	(x=0X12D16);
	OpStkvar	(x,	1);
	MakeComm	(0X12D4E,	"priMask");
	MakeCode	(0X12D58);
	MakeComm	(0X12D62,	"priMask");
	MakeCode	(x=0X12D76);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X12D80,	"priMask");
	MakeComm	(0X12D8E,	"timeout");
	MakeCode	(0X12D8E);
	MakeComm	(0X12D90,	"pending_on");
	MakeComm	(0X12D92,	"p_obj");
	MakeComm	(0X12D94,	"p_pend_data");
	MakeComm	(0X12D9E,	"priMask");
	MakeCode	(x=0X12DB2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X12DD2,	"priMask");
	MakeCode	(0X12DDC);
	MakeCode	(0X12DE6);
	MakeCode	(0X12DF2);
	MakeComm	(0X12E02,	"priMask");
	MakeCode	(0X12E0C);
	MakeCode	(0X12E18);
	MakeName	(0X12E18,	"OSxxxPendAbort");
	MakeCode	(0X12E44);
	MakeComm	(0X12E48,	"priMask");
	MakeCode	(0X12E5A);
	MakeComm	(0X12E5C,	"ts");
	MakeComm	(0X12E5E,	"p_tcb");
	MakeComm	(0X12E60,	"p_obj");
	MakeComm	(0X12E78,	"priMask");
	MakeCode	(0X12E8E);
	MakeCode	(0X12EBC);
	MakeComm	(0X12ECC,	"priMask");
	MakeCode	(0X12ED4);
	MakeComm	(0X12ED8,	"priMask");
	MakeComm	(0X12EE8,	"p_tcb");
	MakeCode	(0X12EE8);
	MakeComm	(0X12EEC,	"msg_size");
	MakeComm	(0X12EEE,	"p_void");
	MakeComm	(0X12EF0,	"p_obj");
	MakeComm	(0X12EF2,	"ts");
	MakeCode	(x=0X12EF2);
	OpStkvar	(x,	1);
	MakeComm	(0X12F08,	"priMask");
	MakeCode	(0X12F20);
	MakeCode	(x=0X12F3A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X12F40);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeStr		(0X12F48,	0X12F4A);
	MakeArray	(0X12F4A,	0X2);
	MakeDword	(x=0X12F4C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X12F50,	0X12F54);
	MakeName	(0X12F50,	"aSema");
	MakeDword	(x=0X12F54);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X12F58,	0X12F5C);
	MakeName	(0X12F58,	"aNoneSem");
	MakeStr		(0X12F5C,	0X12F61);
	MakeName	(0X12F5C,	"aSem");
	MakeByte	(0X12F61);
	MakeArray	(0X12F61,	0X3);
	MakeDword	(x=0X12F64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X12F68);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X12F6C);
	MakeName	(0X12F6C,	"OSTaskChangePrio");
	MakeCode	(0X12F84);
	MakeComm	(0X12F96,	"switch 8 cases ");
	MakeComm	(0X12F9A,	"switch jump");
	MakeComm	(0X12F9E,	"jump table for switch statement");
	MakeByte	(0X12F9E);
	MakeName	(0X12F9E,	"jpt_12F9A");
	MakeByte	(0X12F9F);
	MakeByte	(0X12FA0);
	MakeByte	(0X12FA1);
	MakeByte	(0X12FA2);
	MakeByte	(0X12FA3);
	MakeByte	(0X12FA4);
	MakeByte	(0X12FA5);
	MakeCode	(0X12FA6);
	MakeCode	(x=0X12FB0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X12FB8,	"priMask");
	MakeRptCmt	(0X12FC2,	"jumptable 00012F9A case 0");
	MakeCode	(0X12FC2);
	MakeComm	(0X12FCC,	"prio");
	MakeComm	(0X12FD2,	"p_tcb");
	MakeCode	(0X12FDC);
	MakeRptCmt	(0X12FE2,	"jumptable 00012F9A cases 2,3,6,7");
	MakeCode	(0X12FE2);
	MakeComm	(0X12FE6,	"switch 8 cases ");
	MakeComm	(0X12FEA,	"switch jump");
	MakeComm	(0X12FEE,	"jump table for switch statement");
	MakeByte	(0X12FEE);
	MakeName	(0X12FEE,	"jpt_12FEA");
	MakeByte	(0X12FEF);
	MakeByte	(0X12FF0);
	MakeByte	(0X12FF1);
	MakeByte	(0X12FF2);
	MakeByte	(0X12FF3);
	MakeByte	(0X12FF4);
	MakeByte	(0X12FF5);
	MakeRptCmt	(0X12FF6,	"jumptable 00012F9A cases 1,4,5\njumptable 00012FEA cases 1,2,7");
	MakeCode	(0X12FF6);
	MakeRptCmt	(0X12FFC,	"jumptable 00012FEA cases 3-6");
	MakeCode	(0X12FFC);
	MakeComm	(0X12FFE,	"p_tcb");
	MakeRptCmt	(0X13004,	"jumptable 00012FEA default case");
	MakeName	(0X13004,	"def_12FEA");
	MakeComm	(0X13008,	"priMask");
	MakeRptCmt	(0X13018,	"jumptable 00012F9A default case");
	MakeCode	(0X13018);
	MakeName	(0X13018,	"def_12F9A");
	MakeComm	(0X1301C,	"priMask");
	MakeCode	(x=0X13028);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X13028,	"OS_TaskDbgListAdd");
	MakeCode	(0X13040);
	MakeCode	(0X13046);
	MakeName	(0X13046,	"OS_TaskInitTCB");
	MakeCode	(x=0X1305A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1306E,	"size");
	MakeComm	(0X13070,	"p_msg_q");
	MakeCode	(x=0X130C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X130CA);
	MakeName	(0X130CA,	"OSTaskCreate");
	MakeCode	(x=0X130DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X130E6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X130FA,	"p_tcb");
	MakeCode	(0X130FA);
	MakeCode	(0X13114);
	MakeCode	(x=0X1311C);
	OpStkvar	(x,	1);
	MakeComm	(0X1311E,	"stk_size");
	MakeComm	(0X13128,	"p_stk_limit");
	MakeComm	(0X1312A,	"p_stk_base");
	MakeComm	(0X1312C,	"p_arg");
	MakeComm	(0X1312E,	"p_task");
	MakeCode	(x=0X13138);
	OpStkvar	(x,	1);
	MakeCode	(x=0X13146);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1314A);
	OpStkvar	(x,	1);
	MakeComm	(0X13154,	"p_msg_q");
	MakeComm	(0X13158,	"size");
	MakeCode	(x=0X13158);
	OpStkvar	(x,	1);
	MakeComm	(0X1315E,	"p_tcb");
	MakeComm	(0X1316E,	"prio");
	MakeComm	(0X13176,	"p_tcb");
	MakeComm	(0X1317C,	"p_tcb");
	MakeCode	(x=0X13182);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1318A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13198,	"priMask");
	MakeCode	(0X131A2);
	MakeComm	(0X131A6,	"priMask");
	MakeCode	(0X131B6);
	MakeCode	(x=0X131C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X131D0,	"priMask");
	MakeComm	(0X131E0,	"p_msg_q");
	MakeComm	(0X131EE,	"priMask");
	MakeCode	(0X131FC);
	MakeCode	(x=0X13202);
	OpStkvar	(x,	1);
	MakeCode	(x=0X13218);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1321E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13222,	"p_err");
	MakeComm	(0X13224,	"p_ts");
	MakeComm	(0X1322A,	"p_msg_size");
	MakeComm	(0X1322C,	"p_msg_q");
	MakeComm	(0X13246,	"priMask");
	MakeCode	(x=0X13246);
	OpStkvar	(x,	1);
	MakeCode	(0X1324E);
	MakeComm	(0X1326A,	"priMask");
	MakeCode	(x=0X1326A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X13276);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13280,	"priMask");
	MakeCode	(x=0X13280);
	OpStkvar	(x,	1);
	MakeComm	(0X13290,	"p_obj");
	MakeCode	(0X13290);
	MakeComm	(0X13292,	"timeout");
	MakeComm	(0X13294,	"pending_on");
	MakeComm	(0X13296,	"p_pend_data");
	MakeComm	(0X132A0,	"priMask");
	MakeCode	(x=0X132A0);
	OpStkvar	(x,	1);
	MakeComm	(0X132DE,	"priMask");
	MakeCode	(0X132E8);
	MakeCode	(0X13318);
	MakeCode	(0X13328);
	MakeName	(0X13328,	"OS_TaskQPost");
	MakeCode	(x=0X13344);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13350,	"switch 8 cases ");
	MakeComm	(0X13354,	"switch jump");
	MakeComm	(0X13358,	"jump table for switch statement");
	MakeByte	(0X13358);
	MakeName	(0X13358,	"jpt_13354");
	MakeByte	(0X13359);
	MakeByte	(0X1335A);
	MakeByte	(0X1335B);
	MakeByte	(0X1335C);
	MakeByte	(0X1335D);
	MakeByte	(0X1335E);
	MakeByte	(0X1335F);
	MakeRptCmt	(0X13360,	"jumptable 00013354 cases 2,3,6,7");
	MakeCode	(0X13360);
	MakeRptCmt	(0X13368,	"jumptable 00013354 cases 0,1,4,5");
	MakeComm	(0X1336C,	"opt");
	MakeComm	(0X1336E,	"msg_size");
	MakeComm	(0X13370,	"p_void");
	MakeComm	(0X13372,	"p_msg_q");
	MakeComm	(0X1337E,	"priMask");
	MakeComm	(0X13388,	"msg_size");
	MakeCode	(0X13388);
	MakeComm	(0X1338A,	"p_void");
	MakeComm	(0X1338C,	"p_tcb");
	MakeComm	(0X1338E,	"p_obj");
	MakeComm	(0X13390,	"ts");
	MakeCode	(x=0X13390);
	OpStkvar	(x,	1);
	MakeComm	(0X1339A,	"priMask");
	MakeByte	(0X133AA);
	MakeArray	(0X133AA,	0X2);
	MakeDword	(x=0X133AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X133B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X133B4,	0X133BA);
	MakeName	(0X133B4,	"aTask");
	MakeByte	(0X133BA);
	MakeArray	(0X133BA,	0X2);
	MakeStr		(0X133BC,	0X133BE);
	MakeByte	(0X133BE);
	MakeArray	(0X133BE,	0X2);
	MakeDword	(x=0X133C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X133C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X133C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X133CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X133D0);
	MakeName	(0X133D0,	"j_OSSched");
	MakeRptCmt	(0X133D4,	"jumptable 00013354 default case");
	MakeCode	(0X133D4);
	MakeName	(0X133D4,	"def_13354");
	MakeComm	(0X133D8,	"priMask");
	MakeCode	(0X133E8);
	MakeCode	(x=0X133F4);
	OpStkvar	(x,	1);
	MakeComm	(0X133FA,	"ts");
	MakeComm	(0X133FE,	"opt");
	MakeComm	(0X13400,	"msg_size");
	MakeComm	(0X13402,	"p_void");
	MakeComm	(0X13404,	"p_tcb");
	MakeCode	(0X1340E);
	MakeComm	(0X13426,	"switch 8 cases ");
	MakeComm	(0X1342A,	"switch jump");
	MakeComm	(0X1342E,	"jump table for switch statement");
	MakeByte	(0X1342E);
	MakeName	(0X1342E,	"jpt_1342A");
	MakeByte	(0X1342F);
	MakeByte	(0X13430);
	MakeByte	(0X13431);
	MakeByte	(0X13432);
	MakeByte	(0X13433);
	MakeByte	(0X13434);
	MakeByte	(0X13435);
	MakeRptCmt	(0X13436,	"jumptable 0001342A cases 0-3");
	MakeCode	(0X13436);
	MakeComm	(0X1343A,	"priMask");
	MakeRptCmt	(0X13448,	"jumptable 0001342A case 4");
	MakeCode	(0X13448);
	MakeCode	(x=0X1344E);
	OpHex		(x,	1);
	MakeComm	(0X1345C,	"p_tcb");
	MakeComm	(0X13466,	"priMask");
	MakeRptCmt	(0X13474,	"jumptable 0001342A case 5");
	MakeCode	(0X13474);
	MakeCode	(x=0X1347A);
	OpHex		(x,	1);
	MakeRptCmt	(0X13488,	"jumptable 0001342A case 6");
	MakeCode	(0X13488);
	MakeCode	(x=0X1348E);
	OpHex		(x,	1);
	MakeRptCmt	(0X1349C,	"jumptable 0001342A case 7");
	MakeCode	(0X1349C);
	MakeCode	(x=0X134A2);
	OpHex		(x,	1);
	MakeRptCmt	(0X134B4,	"jumptable 0001342A default case");
	MakeCode	(0X134B4);
	MakeName	(0X134B4,	"def_1342A");
	MakeComm	(0X134B8,	"priMask");
	MakeCode	(0X134C6);
	MakeName	(0X134C6,	"OSTaskSemPend");
	MakeCode	(x=0X134E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13516,	"priMask");
	MakeCode	(0X13524);
	MakeComm	(0X1352E,	"priMask");
	MakeCode	(x=0X1353A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13544,	"priMask");
	MakeComm	(0X13554,	"p_obj");
	MakeCode	(0X13554);
	MakeComm	(0X13556,	"timeout");
	MakeComm	(0X13558,	"pending_on");
	MakeComm	(0X1355A,	"p_pend_data");
	MakeComm	(0X13564,	"priMask");
	MakeCode	(0X1358E);
	MakeCode	(0X135B2);
	MakeCode	(0X135BE);
	MakeComm	(0X135D0,	"priMask");
	MakeCode	(0X135DA);
	MakeName	(0X135DA,	"OS_TaskSemPost");
	MakeCode	(x=0X135F2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13600,	"switch 8 cases ");
	MakeComm	(0X13604,	"switch jump");
	MakeComm	(0X13608,	"jump table for switch statement");
	MakeByte	(0X13608);
	MakeName	(0X13608,	"jpt_13604");
	MakeByte	(0X13609);
	MakeByte	(0X1360A);
	MakeByte	(0X1360B);
	MakeByte	(0X1360C);
	MakeByte	(0X1360D);
	MakeByte	(0X1360E);
	MakeByte	(0X1360F);
	MakeRptCmt	(0X13610,	"jumptable 00013604 cases 0,1,4,5");
	MakeCode	(0X13610);
	MakeComm	(0X1361A,	"priMask");
	MakeCode	(0X1362C);
	MakeComm	(0X13634,	"priMask");
	MakeRptCmt	(0X1363C,	"jumptable 00013604 cases 2,3,6,7");
	MakeCode	(0X1363C);
	MakeComm	(0X13648,	"msg_size");
	MakeCode	(0X13648);
	MakeComm	(0X1364A,	"p_void");
	MakeComm	(0X1364C,	"p_tcb");
	MakeComm	(0X1364E,	"p_obj");
	MakeComm	(0X13650,	"ts");
	MakeCode	(x=0X13650);
	OpStkvar	(x,	1);
	MakeComm	(0X1365C,	"priMask");
	MakeRptCmt	(0X1366C,	"jumptable 00013604 default case");
	MakeCode	(0X1366C);
	MakeName	(0X1366C,	"def_13604");
	MakeComm	(0X13670,	"priMask");
	MakeCode	(0X13682);
	MakeName	(0X13682,	"OSTaskSemPost");
	MakeComm	(0X1368E,	"ts");
	MakeComm	(0X13690,	"p_err");
	MakeComm	(0X13692,	"opt");
	MakeComm	(0X13694,	"p_tcb");
	MakeCode	(0X1369C);
	MakeName	(0X1369C,	"OSTaskSemSet");
	MakeCode	(x=0X136B2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X136B6);
	OpStroffEx	(x,	1,	GetStrucIdByName("OS_TCB"),	0);
	MakeCode	(x=0X136B8);
	OpStroffEx	(x,	1,	GetStrucIdByName("OS_TCB"),	0);
	MakeComm	(0X136BE,	"priMask");
	MakeCode	(0X136CC);
	MakeName	(0X136CC,	"OS_TaskSuspend");
	MakeCode	(x=0X136D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X136E0);
	MakeCode	(x=0X136EA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X136F6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13700,	"priMask");
	MakeCode	(0X1370C);
	MakeComm	(0X13716,	"switch 8 cases ");
	MakeComm	(0X1371A,	"switch jump");
	MakeComm	(0X1371E,	"jump table for switch statement");
	MakeByte	(0X1371E);
	MakeName	(0X1371E,	"jpt_1371A");
	MakeByte	(0X1371F);
	MakeByte	(0X13720);
	MakeByte	(0X13721);
	MakeByte	(0X13722);
	MakeByte	(0X13723);
	MakeByte	(0X13724);
	MakeByte	(0X13725);
	MakeRptCmt	(0X13726,	"jumptable 0001371A case 0");
	MakeCode	(0X13726);
	MakeComm	(0X13730,	"p_tcb");
	MakeRptCmt	(0X13738,	"jumptable 0001371A case 1");
	MakeCode	(0X13738);
	MakeCode	(0X1373C);
	MakeComm	(0X13740,	"priMask");
	MakeRptCmt	(0X1374E,	"jumptable 0001371A case 2");
	MakeCode	(0X1374E);
	MakeRptCmt	(0X13752,	"jumptable 0001371A case 3");
	MakeCode	(0X13752);
	MakeRptCmt	(0X1375E,	"jumptable 0001371A cases 4-7");
	MakeCode	(0X1375E);
	MakeRptCmt	(0X13768,	"jumptable 0001371A default case");
	MakeCode	(0X13768);
	MakeName	(0X13768,	"def_1371A");
	MakeComm	(0X1376C,	"priMask");
	MakeCode	(0X1377A);
	MakeName	(0X1377A,	"OS_TaskDbgListRemove");
	MakeCode	(x=0X13796);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X137A6);
	MakeCode	(x=0X137AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X137AC,	"OS_TaskInit");
	MakeCode	(x=0X137B2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X137B6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X137BE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X137BE,	"OS_TaskReturn");
	MakeComm	(0X137C2,	"p_tcb");
	MakeComm	(0X137CA,	"p_err");
	MakeComm	(0X137CC,	"opt");
	MakeComm	(0X137CE,	"dly");
	MakeByte	(0X137D6);
	MakeArray	(0X137D6,	0X2);
	MakeDword	(x=0X137D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X137DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X137E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X137E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X137E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X137EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X137F0);
	MakeCode	(0X137F4);
	MakeName	(0X137F4,	"OS_TickListRemove");
	MakeCode	(0X13810);
	MakeCode	(0X1382A);
	MakeName	(0X1382A,	"OS_TickListUpdate");
	MakeCode	(x=0X13832);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1383C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X13858);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13870,	"switch 8 cases ");
	MakeComm	(0X13874,	"switch jump");
	MakeComm	(0X13878,	"jump table for switch statement");
	MakeByte	(0X13878);
	MakeName	(0X13878,	"jpt_13874");
	MakeByte	(0X13879);
	MakeByte	(0X1387A);
	MakeByte	(0X1387B);
	MakeByte	(0X1387C);
	MakeByte	(0X1387D);
	MakeByte	(0X1387E);
	MakeByte	(0X1387F);
	MakeRptCmt	(0X13880,	"jumptable 00013874 case 1");
	MakeCode	(0X13880);
	MakeComm	(0X13890,	"p_tcb");
	MakeRptCmt	(0X13898,	"jumptable 00013874 case 3");
	MakeCode	(0X13898);
	MakeComm	(0X138B0,	"p_tcb");
	MakeComm	(0X138B6,	"p_tcb");
	MakeRptCmt	(0X138C2,	"jumptable 00013874 case 5");
	MakeCode	(0X138C2);
	MakeComm	(0X138D2,	"p_tcb");
	MakeCode	(0X138DA);
	MakeRptCmt	(0X138DC,	"jumptable 00013874 case 7");
	MakeCode	(0X138DC);
	MakeComm	(0X138F4,	"p_tcb");
	MakeComm	(0X138FA,	"p_tcb");
	MakeCode	(0X1390E);
	MakeRptCmt	(0X13910,	"jumptable 00013874 default case");
	MakeName	(0X13910,	"def_13874");
	MakeCode	(x=0X1391A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1392C,	"priMask");
	MakeCode	(x=0X1392C);
	OpStkvar	(x,	1);
	MakeCode	(0X13936);
	MakeName	(0X13936,	"OS_TickTask");
	MakeCode	(x=0X13938);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1393A,	"opt");
	MakeComm	(0X1393C,	"p_err");
	MakeComm	(0X1393E,	"p_ts");
	MakeCode	(x=0X1393E);
	OpStkvar	(x,	1);
	MakeComm	(0X13940,	"timeout");
	MakeCode	(x=0X13946);
	OpStkvar	(x,	1);
	MakeRptCmt	(0X13950,	"OS_STATE_OS_RUNNING");
	MakeCode	(0X1395A);
	MakeName	(0X1395A,	"OS_TickListInit");
	MakeCode	(x=0X13960);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X13962,	"OSCfg_TickWheelSize");
	MakeCode	(x=0X13962);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X13966);
	MakeCode	(0X1397C);
	MakeName	(0X1397C,	"OS_TickTaskInit");
	MakeCode	(x=0X13980);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X13988);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X139A2);
	MakeComm	(0X139A4,	"p_ext");
	MakeComm	(0X139AA,	"p_err");
	MakeCode	(x=0X139AA);
	OpStkvar	(x,	1);
	MakeComm	(0X139AC,	"time_quanta");
	MakeCode	(x=0X139AC);
	OpStkvar	(x,	1);
	MakeComm	(0X139B8,	"stk_limit");
	MakeComm	(0X139BC,	"q_size");
	MakeCode	(x=0X139BC);
	OpStkvar	(x,	1);
	MakeComm	(0X139BE,	"p_stk_base");
	MakeCode	(x=0X139BE);
	OpStkvar	(x,	1);
	MakeComm	(0X139C2,	"p_arg");
	MakeComm	(0X139C4,	"p_task");
	MakeCode	(x=0X139C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X139C8,	"prio");
	MakeCode	(x=0X139C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X139CA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X139CC,	"p_tcb");
	MakeCode	(x=0X139CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X139D4);
	MakeName	(0X139D4,	"OS_TickListInsert");
	MakeCode	(x=0X139D6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X139E6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X139F6);
	MakeCode	(0X13A08);
	MakeCode	(0X13A18);
	MakeCode	(x=0X13A30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X13A54);
	MakeCode	(0X13A56);
	MakeCode	(0X13A60);
	MakeCode	(0X13A6A);
	MakeCode	(0X13A72);
	MakeCode	(0X13A94);
	MakeCode	(0X13A9E);
	MakeName	(0X13A9E,	"OS_TickListResetPeak");
	MakeCode	(x=0X13AA4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X13AA6,	"OSCfg_TickWheelSize");
	MakeCode	(0X13AAA);
	MakeDword	(x=0X13ABC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X13AC0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X13AC4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X13AC8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X13ACC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X13AD0);
	MakeDword	(0X13AD4);
	MakeDword	(0X13AD8);
	MakeDword	(0X13ADC);
	MakeStr		(0X13AE0,	0X13AF4);
	MakeName	(0X13AE0,	"aUcOsIiiTickTas");
	MakeDword	(x=0X13AF4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X13AF4,	"p_tcb");
	MakeCode	(0X13AF8);
	MakeName	(0X13AF8,	"OSTimeDly");
	MakeCode	(x=0X13AFE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X13B0E);
	MakeCode	(0X13B22);
	MakeCode	(x=0X13B2E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13B32,	"p_err");
	MakeComm	(0X13B34,	"p_tcb");
	MakeComm	(0X13B36,	"opt");
	MakeComm	(0X13B3C,	"time");
	MakeComm	(0X13B4A,	"priMask");
	MakeCode	(0X13B54);
	MakeComm	(0X13B5E,	"p_tcb");
	MakeCode	(0X13B5E);
	MakeComm	(0X13B68,	"priMask");
	MakeCode	(0X13B78);
	MakeName	(0X13B78,	"OSTimeDlyHMSM");
	MakeCode	(x=0X13B7E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X13B90);
	OpHex		(x,	1);
	MakeCode	(0X13BAC);
	MakeCode	(x=0X13BB4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X13BEE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13BF2,	"p_err");
	MakeComm	(0X13BF4,	"p_tcb");
	MakeComm	(0X13BF6,	"opt");
	MakeComm	(0X13BFC,	"time");
	MakeComm	(0X13C0A,	"priMask");
	MakeComm	(0X13C14,	"p_tcb");
	MakeCode	(0X13C14);
	MakeComm	(0X13C1E,	"priMask");
	MakeCode	(0X13C2E);
	MakeCode	(0X13C30);
	MakeCode	(0X13C34);
	MakeName	(0X13C34,	"OSTimeGet");
	MakeCode	(x=0X13C42);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13C4A,	"priMask");
	MakeCode	(0X13C58);
	MakeName	(0X13C58,	"OSTimeSet");
	MakeCode	(x=0X13C68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13C70,	"priMask");
	MakeCode	(0X13C7C);
	MakeName	(0X13C7C,	"OSTimeTick");
	MakeComm	(0X13C82,	"p_err");
	MakeComm	(0X13C84,	"opt");
	MakeComm	(0X13C86,	"p_tcb");
	MakeCode	(x=0X13C86);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeByte	(0X13C8E);
	MakeArray	(0X13C8E,	0X2);
	MakeDword	(x=0X13C90);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X13C94);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X13C98);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X13C9C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X13CA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X13CA4);
	MakeByte	(0X13CBA);
	MakeArray	(0X13CBA,	0X2);
	MakeDword	(x=0X13CBC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X13CC0);
	MakeName	(0X13CC0,	"__disable_irq");
	MakeCode	(0X13CC4);
	MakeName	(0X13CC4,	"__enable_irq");
	MakeCode	(0X13CC8);
	MakeName	(0X13CC8,	"_get_PRIMASK");
	MakeCode	(0X13CD0);
	MakeName	(0X13CD0,	"__set_PRIMASK");
	MakeCode	(0X13CD6);
	MakeName	(0X13CD6,	"CPU_CntLeadZeros");
	MakeCode	(0X13CDC);
	MakeName	(0X13CDC,	"__RBIT");
	MakeCode	(0X13CE2);
	MakeName	(0X13CE2,	"__WFI");
	MakeCode	(0X13CE6);
	MakeName	(0X13CE6,	"__WFE");
	MakeByte	(0X13CEA);
	MakeArray	(0X13CEA,	0X2);
	MakeCode	(0X13CEC);
	MakeCode	(0X13D08);
	MakeCode	(0X13D18);
	MakeCode	(0X13D34);
	MakeCode	(0X13D44);
	MakeCode	(x=0X13D46);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13D4C,	"switch 16 cases ");
	MakeComm	(0X13D50,	"switch jump");
	MakeComm	(0X13D54,	"jump table for switch statement");
	MakeByte	(0X13D54);
	MakeName	(0X13D54,	"jpt_13D50");
	MakeByte	(0X13D55);
	MakeByte	(0X13D56);
	MakeByte	(0X13D57);
	MakeByte	(0X13D58);
	MakeByte	(0X13D59);
	MakeByte	(0X13D5A);
	MakeByte	(0X13D5B);
	MakeByte	(0X13D5C);
	MakeByte	(0X13D5D);
	MakeByte	(0X13D5E);
	MakeByte	(0X13D5F);
	MakeByte	(0X13D60);
	MakeByte	(0X13D61);
	MakeByte	(0X13D62);
	MakeByte	(0X13D63);
	MakeRptCmt	(0X13D64,	"jumptable 00013D50 case 4");
	MakeCode	(0X13D64);
	MakeCode	(x=0X13D70);
	OpHex		(x,	1);
	MakeRptCmt	(0X13D76,	"jumptable 00013D50 case 5");
	MakeCode	(0X13D76);
	MakeCode	(x=0X13D82);
	OpHex		(x,	1);
	MakeRptCmt	(0X13D90,	"jumptable 00013D50 case 6");
	MakeCode	(0X13D90);
	MakeCode	(x=0X13D9C);
	OpHex		(x,	1);
	MakeRptCmt	(0X13DA2,	"jumptable 00013D50 case 15");
	MakeCode	(0X13DA2);
	MakeCode	(x=0X13DAC);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeCode	(x=0X13DAE);
	OpHex		(x,	1);
	MakeCode	(x=0X13DB2);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeRptCmt	(0X13DBC,	"jumptable 00013D50 default case");
	MakeCode	(x=0X13DBC);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeName	(0X13DBC,	"def_13D50");
	MakeCode	(x=0X13DD8);
	OpHex		(x,	1);
	MakeComm	(0X13DFA,	"priMask");
	MakeRptCmt	(0X13E04,	"jumptable 00013D50 cases 0-3,7-14");
	MakeCode	(0X13E04);
	MakeCode	(0X13E06);
	MakeCode	(x=0X13E08);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13E0E,	"switch 16 cases ");
	MakeComm	(0X13E12,	"switch jump");
	MakeComm	(0X13E16,	"jump table for switch statement");
	MakeByte	(0X13E16);
	MakeName	(0X13E16,	"jpt_13E12");
	MakeByte	(0X13E17);
	MakeByte	(0X13E18);
	MakeByte	(0X13E19);
	MakeByte	(0X13E1A);
	MakeByte	(0X13E1B);
	MakeByte	(0X13E1C);
	MakeByte	(0X13E1D);
	MakeByte	(0X13E1E);
	MakeByte	(0X13E1F);
	MakeByte	(0X13E20);
	MakeByte	(0X13E21);
	MakeByte	(0X13E22);
	MakeByte	(0X13E23);
	MakeByte	(0X13E24);
	MakeByte	(0X13E25);
	MakeRptCmt	(0X13E26,	"jumptable 00013E12 case 4");
	MakeCode	(0X13E26);
	MakeCode	(x=0X13E32);
	OpHex		(x,	1);
	MakeRptCmt	(0X13E38,	"jumptable 00013E12 case 5");
	MakeCode	(0X13E38);
	MakeCode	(x=0X13E44);
	OpHex		(x,	1);
	MakeRptCmt	(0X13E52,	"jumptable 00013E12 case 6");
	MakeCode	(0X13E52);
	MakeCode	(x=0X13E5E);
	OpHex		(x,	1);
	MakeRptCmt	(0X13E64,	"jumptable 00013E12 case 15");
	MakeCode	(0X13E64);
	MakeCode	(x=0X13E6E);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeCode	(x=0X13E70);
	OpHex		(x,	1);
	MakeCode	(x=0X13E74);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeRptCmt	(0X13E7E,	"jumptable 00013E12 default case");
	MakeCode	(x=0X13E7E);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeName	(0X13E7E,	"def_13E12");
	MakeCode	(x=0X13E9A);
	OpHex		(x,	1);
	MakeComm	(0X13EBC,	"priMask");
	MakeRptCmt	(0X13EC6,	"jumptable 00013E12 cases 0-3,7-14");
	MakeCode	(0X13EC6);
	MakeCode	(0X13EC8);
	MakeCode	(x=0X13ED2);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeCode	(x=0X13EEE);
	OpHex		(x,	1);
	MakeComm	(0X13F10,	"priMask");
	MakeCode	(0X13F1A);
	MakeCode	(0X13F1C);
	MakeComm	(0X13F22,	"value");
	MakeCode	(x=0X13F28);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X13F2A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X13F32,	"switch 16 cases ");
	MakeComm	(0X13F36,	"switch jump");
	MakeComm	(0X13F3A,	"jump table for switch statement");
	MakeByte	(0X13F3A);
	MakeName	(0X13F3A,	"jpt_13F36");
	MakeByte	(0X13F3B);
	MakeByte	(0X13F3C);
	MakeByte	(0X13F3D);
	MakeByte	(0X13F3E);
	MakeByte	(0X13F3F);
	MakeByte	(0X13F40);
	MakeByte	(0X13F41);
	MakeByte	(0X13F42);
	MakeByte	(0X13F43);
	MakeByte	(0X13F44);
	MakeByte	(0X13F45);
	MakeByte	(0X13F46);
	MakeByte	(0X13F47);
	MakeByte	(0X13F48);
	MakeByte	(0X13F49);
	MakeRptCmt	(0X13F4A,	"jumptable 00013F36 case 4");
	MakeCode	(0X13F4A);
	MakeCode	(x=0X13F56);
	OpHex		(x,	1);
	MakeRptCmt	(0X13F5E,	"jumptable 00013F36 case 5");
	MakeCode	(0X13F5E);
	MakeCode	(x=0X13F6A);
	OpHex		(x,	1);
	MakeRptCmt	(0X13F7C,	"jumptable 00013F36 case 6");
	MakeCode	(0X13F7C);
	MakeCode	(x=0X13F88);
	OpHex		(x,	1);
	MakeRptCmt	(0X13F92,	"jumptable 00013F36 case 11");
	MakeCode	(0X13F92);
	MakeCode	(x=0X13F9C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X13FA2);
	OpHex		(x,	1);
	MakeRptCmt	(0X13FAE,	"jumptable 00013F36 case 12");
	MakeCode	(0X13FAE);
	MakeCode	(x=0X13FBA);
	OpHex		(x,	1);
	MakeRptCmt	(0X13FC2,	"jumptable 00013F36 case 14");
	MakeCode	(0X13FC2);
	MakeCode	(x=0X13FCE);
	OpHex		(x,	1);
	MakeRptCmt	(0X13FD8,	"jumptable 00013F36 case 15");
	MakeCode	(0X13FD8);
	MakeCode	(x=0X13FE4);
	OpHex		(x,	1);
	MakeRptCmt	(0X13FF0,	"jumptable 00013F36 default case");
	MakeCode	(0X13FF0);
	MakeName	(0X13FF0,	"def_13F36");
	MakeCode	(x=0X13FF4);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeCode	(x=0X14010);
	OpHex		(x,	1);
	MakeComm	(0X1403E,	"priMask");
	MakeRptCmt	(0X14048,	"jumptable 00013F36 cases 0-3,7-10,13");
	MakeCode	(0X14048);
	MakeCode	(0X1404C);
	MakeCode	(x=0X1404E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14050);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X14058,	"switch 16 cases ");
	MakeComm	(0X1405C,	"switch jump");
	MakeComm	(0X14060,	"jump table for switch statement");
	MakeByte	(0X14060);
	MakeName	(0X14060,	"jpt_1405C");
	MakeByte	(0X14061);
	MakeByte	(0X14062);
	MakeByte	(0X14063);
	MakeByte	(0X14064);
	MakeByte	(0X14065);
	MakeByte	(0X14066);
	MakeByte	(0X14067);
	MakeByte	(0X14068);
	MakeByte	(0X14069);
	MakeByte	(0X1406A);
	MakeByte	(0X1406B);
	MakeByte	(0X1406C);
	MakeByte	(0X1406D);
	MakeByte	(0X1406E);
	MakeByte	(0X1406F);
	MakeRptCmt	(0X14070,	"jumptable 0001405C case 1");
	MakeCode	(0X14070);
	MakeRptCmt	(0X14076,	"jumptable 0001405C case 2");
	MakeCode	(0X14076);
	MakeRptCmt	(0X1407C,	"jumptable 0001405C case 3");
	MakeCode	(0X1407C);
	MakeRptCmt	(0X14082,	"jumptable 0001405C case 4");
	MakeCode	(0X14082);
	MakeRptCmt	(0X14092,	"jumptable 0001405C case 5");
	MakeCode	(0X14092);
	MakeComm	(0X140A6,	"priMask");
	MakeRptCmt	(0X140AE,	"jumptable 0001405C case 6");
	MakeCode	(0X140AE);
	MakeRptCmt	(0X140BE,	"jumptable 0001405C case 11");
	MakeCode	(0X140BE);
	MakeCode	(x=0X140C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X140D0,	"jumptable 0001405C case 12");
	MakeCode	(0X140D0);
	MakeRptCmt	(0X140E0,	"jumptable 0001405C case 14");
	MakeCode	(0X140E0);
	MakeRptCmt	(0X140F2,	"jumptable 0001405C case 15");
	MakeCode	(0X140F2);
	MakeRptCmt	(0X14108,	"jumptable 0001405C default case");
	MakeCode	(0X14108);
	MakeName	(0X14108,	"def_1405C");
	MakeCode	(x=0X1410C);
	OpOff		(x,	1,	0XE000E000);
	OpOff		(x,	129,	0XE000E000);
	MakeCode	(x=0X14128);
	OpHex		(x,	1);
	MakeDword	(x=0X14140);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X14144);
	MakeCode	(0X14148);
	MakeComm	(0X14150,	"priMask");
	MakeComm	(0X14160,	"value");
	MakeRptCmt	(0X14168,	"jumptable 0001405C cases 0,7-10,13");
	MakeCode	(0X1416C);
	MakeName	(0X1416C,	"CPU_IntDisMeasStop");
	MakeCode	(x=0X1416E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14170);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X14178);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X14180);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X14182);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X14186);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X1418C);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X1418E);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X14194);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(0X14198);
	MakeName	(0X14198,	"CPU_IntDisMeasStart");
	MakeCode	(x=0X1419A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X141A2);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X141AA);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X141AC);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X141B0);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X141B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X141BA);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(0X141C8);
	MakeCode	(0X141CA);
	MakeCode	(0X141CE);
	MakeCode	(0X141D0);
	MakeCode	(x=0X141D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X141D6);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(0X141DE);
	MakeCode	(0X141E0);
	MakeCode	(x=0X141E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X141EA);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(0X141EE);
	MakeName	(0X141EE,	"CPU_IntDisMeasMaxCurGet");
	MakeCode	(x=0X141F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X141F6);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeComm	(0X141FC,	"time_tot_cnts");
	MakeCode	(0X14206);
	MakeName	(0X14206,	"CPU_IntDisMeasMaxCurReset");
	MakeCode	(x=0X14212);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14216);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(0X14220);
	MakeName	(0X14220,	"CPU_IntDisMeasMaxGet");
	MakeCode	(x=0X14226);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14228);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeComm	(0X1422E,	"time_tot_cnts");
	MakeCode	(0X14238);
	MakeName	(0X14238,	"CPU_IntDisMeasInit");
	MakeCode	(x=0X1423C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14244);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X14246);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X14248);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X1424A);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X1424C);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X1424E);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X14258);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X14262);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeComm	(0X14272,	"priMask");
	MakeCode	(x=0X14274);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(x=0X1427E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X1427E,	"CPU_IntDisMeasMaxCalc");
	MakeCode	(x=0X14280);
	OpOff		(x,	1,	0X100004E8);
	OpOff		(x,	129,	0X100004E8);
	MakeCode	(0X1428A);
	MakeByte	(0X1428E);
	MakeArray	(0X1428E,	0X2);
	MakeDword	(x=0X14290);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X14294);
	MakeCode	(0X14296);
	MakeName	(0X14296,	"SystemCoreClockGet");
	MakeCode	(x=0X14298);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1429E);
	OpHex		(x,	1);
	MakeCode	(0X142B0);
	MakeCode	(x=0X142B4);
	OpDecimal	(x,	1);
	MakeCode	(0X142B8);
	MakeCode	(0X142F2);
	MakeComm	(0X1430A,	"switch 7 cases ");
	MakeComm	(0X1430E,	"switch jump");
	MakeComm	(0X14312,	"jump table for switch statement");
	MakeByte	(0X14312);
	MakeName	(0X14312,	"jpt_1430E");
	MakeByte	(0X14313);
	MakeByte	(0X14314);
	MakeByte	(0X14315);
	MakeByte	(0X14316);
	MakeByte	(0X14317);
	MakeByte	(0X14318);
	MakeRptCmt	(0X1431A,	"jumptable 0001430E case 1");
	MakeCode	(0X1431A);
	MakeRptCmt	(0X1431E,	"jumptable 0001430E case 2");
	MakeCode	(0X1431E);
	MakeRptCmt	(0X14322,	"jumptable 0001430E case 4");
	MakeCode	(0X14322);
	MakeRptCmt	(0X14326,	"jumptable 0001430E case 6");
	MakeCode	(0X14326);
	MakeRptCmt	(0X14332,	"jumptable 0001430E default case");
	MakeName	(0X14332,	"def_1430E");
	MakeCode	(0X14336);
	MakeCode	(0X14366);
	MakeComm	(0X14384,	"priMask");
	MakeCode	(0X1438E);
	MakeCode	(0X143A6);
	MakeComm	(0X143CA,	"priMask");
	MakeCode	(0X143D4);
	MakeCode	(0X143EC);
	MakeComm	(0X14410,	"priMask");
	MakeCode	(0X1441A);
	MakeCode	(x=0X14440);
	OpHex		(x,	1);
	MakeCode	(0X14456);
	MakeCode	(0X1445A);
	MakeCode	(0X1446A);
	MakeCode	(0X14476);
	MakeName	(0X14476,	"nullsub_14");
	MakeCode	(0X14478);
	MakeName	(0X14478,	"nullsub_15");
	MakeCode	(0X1447A);
	MakeCode	(0X1447E);
	MakeByte	(0X14482);
	MakeArray	(0X14482,	0X2);
	MakeDword	(x=0X14484);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X14488);
	MakeRptCmt	(0X1448C,	"OSC_CLK");
	MakeDword	(x=0X1448C);
	OpDecimal	(x,	0);
	MakeCode	(0X14490);
	MakeCode	(x=0X14494);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X14498);
	MakeCode	(0X144B8);
	MakeCode	(0X144C0);
	MakeCode	(0X144C4);
	MakeCode	(x=0X144C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X144CC);
	MakeCode	(0X144F6);
	MakeCode	(0X144FE);
	MakeCode	(0X14502);
	MakeCode	(x=0X14506);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1450A);
	MakeCode	(0X1452A);
	MakeCode	(0X14532);
	MakeCode	(0X14536);
	MakeCode	(x=0X1453A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1453E);
	MakeCode	(0X14568);
	MakeCode	(0X14570);
	MakeCode	(x=0X14574);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14578);
	OpOff		(x,	1,	0X100059E8);
	OpOff		(x,	129,	0X100059E8);
	MakeCode	(x=0X14586);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1458A);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X1458C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14592);
	OpOff		(x,	1,	0X100059E8);
	OpOff		(x,	129,	0X100059E8);
	MakeCode	(x=0X14594);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14598);
	OpOff		(x,	1,	0X10005BF0);
	OpOff		(x,	129,	0X10005BF0);
	MakeCode	(0X1459C);
	MakeCode	(0X145A0);
	MakeCode	(0X145A4);
	MakeCode	(0X145A8);
	MakeCode	(0X145AC);
	MakeCode	(0X145B0);
	MakeCode	(x=0X145B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X145B6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X145C0);
	OpOff		(x,	1,	0X10005922);
	OpOff		(x,	129,	0X10005922);
	MakeCode	(x=0X145C4);
	OpOff		(x,	1,	0X10005922);
	OpOff		(x,	129,	0X10005922);
	MakeCode	(x=0X145C8);
	OpOff		(x,	1,	0X10005922);
	OpOff		(x,	129,	0X10005922);
	MakeCode	(x=0X145CA);
	OpOff		(x,	1,	0X10000518);
	OpOff		(x,	129,	0X10000518);
	MakeCode	(x=0X145CC);
	OpOff		(x,	1,	0X10005922);
	OpOff		(x,	129,	0X10005922);
	MakeCode	(x=0X145CE);
	OpOff		(x,	1,	0X10000518);
	OpOff		(x,	129,	0X10000518);
	MakeCode	(x=0X145D0);
	OpOff		(x,	1,	0X10005922);
	OpOff		(x,	129,	0X10005922);
	MakeCode	(x=0X145D2);
	OpOff		(x,	1,	0X10000518);
	OpOff		(x,	129,	0X10000518);
	MakeCode	(x=0X145D4);
	OpOff		(x,	1,	0X10005922);
	OpOff		(x,	129,	0X10005922);
	MakeCode	(0X145DA);
	MakeCode	(0X145DE);
	MakeCode	(0X145E2);
	MakeCode	(x=0X145E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X145E6);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X145EA);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X145EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X145F0);
	OpOff		(x,	1,	0X10005BF0);
	OpOff		(x,	129,	0X10005BF0);
	MakeCode	(x=0X145F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X14600);
	OpStkvar	(x,	1);
	MakeCode	(x=0X14604);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1460A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X14610);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1461A);
	MakeCode	(x=0X1461C);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X14620);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14624);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X14626);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X1462E);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X14632);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X14638);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(0X1463C);
	MakeCode	(x=0X1463E);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X14640);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X14642);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X14644);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14648);
	OpOff		(x,	1,	0X100059E8);
	OpOff		(x,	129,	0X100059E8);
	MakeCode	(x=0X14658);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X1465C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14666);
	OpStkvar	(x,	1);
	MakeCode	(x=0X14668);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14674);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14676);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(x=0X1467C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14686);
	OpOff		(x,	1,	0X10000504);
	OpOff		(x,	129,	0X10000504);
	MakeCode	(0X1468A);
	MakeCode	(x=0X1468C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14698);
	OpOff		(x,	1,	0X100058AC);
	OpOff		(x,	129,	0X100058AC);
	MakeCode	(x=0X1469C);
	OpOff		(x,	1,	0X100058AC);
	OpOff		(x,	129,	0X100058AC);
	MakeCode	(x=0X1469E);
	OpOff		(x,	1,	0X100058AC);
	OpOff		(x,	129,	0X100058AC);
	MakeCode	(x=0X146A0);
	OpOff		(x,	1,	0X100058AC);
	OpOff		(x,	129,	0X100058AC);
	MakeCode	(x=0X146A2);
	OpOff		(x,	1,	0X100058AC);
	OpOff		(x,	129,	0X100058AC);
	MakeCode	(x=0X146A4);
	OpOff		(x,	1,	0X100058AC);
	OpOff		(x,	129,	0X100058AC);
	MakeCode	(x=0X146A6);
	OpOff		(x,	1,	0X100058AC);
	OpOff		(x,	129,	0X100058AC);
	MakeCode	(x=0X146A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X146AE);
	OpOff		(x,	1,	0X100058AC);
	OpOff		(x,	129,	0X100058AC);
	MakeCode	(x=0X146B2);
	OpOff		(x,	1,	0X100058AC);
	OpOff		(x,	129,	0X100058AC);
	MakeDword	(x=0X146BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X146C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X146C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X146C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X146CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X146D0);
	MakeCode	(x=0X146DC);
	OpHex		(x,	1);
	MakeCode	(0X146E8);
	MakeCode	(x=0X146EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X146F6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14700);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14708);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X14712);
	MakeCode	(x=0X14714);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1471C);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(0X1472A);
	MakeCode	(0X14732);
	MakeCode	(x=0X14734);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(x=0X1474E);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(x=0X14752);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(x=0X1475C);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(0X14760);
	MakeCode	(0X14766);
	MakeCode	(x=0X14776);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1477E);
	MakeCode	(x=0X14780);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1478C);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(x=0X14798);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(0X1479C);
	MakeCode	(0X147B8);
	MakeCode	(0X147CE);
	MakeCode	(x=0X147D8);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(x=0X147DC);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(x=0X147E6);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(0X147EE);
	MakeCode	(0X147F0);
	MakeCode	(x=0X147F2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X147FE);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(x=0X1480A);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(x=0X1480C);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(0X14810);
	MakeCode	(x=0X14830);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(x=0X14834);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(x=0X14844);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(0X1484C);
	MakeCode	(0X14850);
	MakeCode	(0X14852);
	MakeCode	(x=0X14856);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1485A);
	OpOff		(x,	1,	0X100058F6);
	OpOff		(x,	129,	0X100058F6);
	MakeCode	(x=0X14860);
	OpHex		(x,	1);
	MakeCode	(x=0X14864);
	OpOff		(x,	1,	0X100058F6);
	OpOff		(x,	129,	0X100058F6);
	MakeCode	(x=0X1486E);
	OpOff		(x,	1,	0X100058F6);
	OpOff		(x,	129,	0X100058F6);
	MakeCode	(0X14880);
	MakeCode	(0X1488A);
	MakeCode	(0X14890);
	MakeCode	(x=0X14896);
	OpHex		(x,	1);
	MakeCode	(0X148B8);
	MakeCode	(x=0X148BE);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(0X148C8);
	MakeCode	(0X148CC);
	MakeCode	(x=0X148D6);
	OpOff		(x,	1,	0X100058F6);
	OpOff		(x,	129,	0X100058F6);
	MakeCode	(x=0X148DA);
	OpOff		(x,	1,	0X100058F6);
	OpOff		(x,	129,	0X100058F6);
	MakeCode	(x=0X148E6);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(0X148F0);
	MakeCode	(0X148F4);
	MakeCode	(x=0X148F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X148FC);
	OpOff		(x,	1,	0X100058F6);
	OpOff		(x,	129,	0X100058F6);
	MakeCode	(x=0X148FE);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(x=0X14904);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(0X1490A);
	MakeCode	(x=0X14910);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(x=0X1491C);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(x=0X1491E);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(x=0X14922);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(x=0X14926);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(0X1492A);
	MakeCode	(x=0X14930);
	OpOff		(x,	1,	0X100058F6);
	OpOff		(x,	129,	0X100058F6);
	MakeCode	(x=0X14934);
	OpOff		(x,	1,	0X100058F6);
	OpOff		(x,	129,	0X100058F6);
	MakeCode	(0X1493E);
	MakeCode	(x=0X14948);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(0X14950);
	MakeCode	(x=0X14966);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14968);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X1496A);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X1496C);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X1496E);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14970);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14972);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14974);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14976);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14978);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X1497A);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X1497C);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X1497E);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14980);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14982);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14984);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14986);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14988);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1498C);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(0X14994);
	MakeCode	(0X14996);
	MakeCode	(x=0X149AA);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149AC);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149B0);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149B4);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149B6);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149B8);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149BA);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149BE);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149C2);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149C6);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149C8);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149CA);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149CC);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149CE);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149D0);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149D2);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149D6);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149DA);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149DC);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149E0);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149E2);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149E6);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149E8);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149EA);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149EC);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149EE);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149F0);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149F2);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149F4);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149F6);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149F8);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X149FC);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A02);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A08);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A0C);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A10);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14A14);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(0X14A1C);
	MakeCode	(0X14A1E);
	MakeCode	(x=0X14A32);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A34);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A36);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A38);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14A3C);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(0X14A44);
	MakeCode	(0X14A46);
	MakeCode	(x=0X14A5A);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A5C);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A5E);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A60);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A62);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A64);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A66);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14A6C);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(0X14A74);
	MakeCode	(0X14A76);
	MakeCode	(x=0X14A80);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14A84);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(x=0X14A90);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A94);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A96);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A9A);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14A9C);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14AA0);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14AA2);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14AA6);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(0X14AAE);
	MakeCode	(0X14AB0);
	MakeCode	(x=0X14AC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14AC4);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14AC6);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14ACA);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14ACC);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(x=0X14AD0);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14AD4);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14AD8);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14ADA);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14ADE);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14AE0);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14AE2);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeCode	(x=0X14AE4);
	OpOff		(x,	1,	0X100058B6);
	OpOff		(x,	129,	0X100058B6);
	MakeDword	(x=0X14AE8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X14AEC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X14AF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X14AF4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X14AF8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X14AFC);
	MakeCode	(0X14B00);
	MakeCode	(x=0X14B02);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(0X14B0A);
	MakeCode	(0X14B0C);
	MakeCode	(x=0X14B10);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14B16);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(0X14B1E);
	MakeCode	(x=0X14B3E);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(x=0X14B42);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(x=0X14B50);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(0X14B56);
	MakeCode	(0X14B78);
	MakeCode	(0X14B82);
	MakeCode	(x=0X14BA2);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(0X14BA6);
	MakeCode	(0X14BC8);
	MakeCode	(0X14BCA);
	MakeCode	(0X14BD0);
	MakeCode	(0X14BD6);
	MakeCode	(0X14BDC);
	MakeCode	(0X14BE2);
	MakeCode	(0X14BE8);
	MakeCode	(0X14BFE);
	MakeCode	(0X14C0C);
	MakeCode	(0X14C0E);
	MakeCode	(0X14C26);
	MakeCode	(0X14C2A);
	MakeCode	(x=0X14C30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14C34);
	OpHex		(x,	1);
	MakeCode	(x=0X14C42);
	OpHex		(x,	1);
	MakeCode	(x=0X14C4E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X14C6A);
	MakeCode	(x=0X14C6C);
	OpOff		(x,	1,	0X100058F6);
	OpOff		(x,	129,	0X100058F6);
	MakeCode	(0X14C7C);
	MakeCode	(0X14C82);
	MakeCode	(0X14C8A);
	MakeCode	(x=0X14C96);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14C98);
	OpOff		(x,	1,	0X10000520);
	OpOff		(x,	129,	0X10000520);
	MakeCode	(x=0X14CB2);
	OpOff		(x,	1,	0X10005915);
	OpOff		(x,	129,	0X10005915);
	MakeCode	(0X14CBA);
	MakeCode	(0X14CC0);
	MakeCode	(x=0X14CC2);
	OpOff		(x,	1,	0X100058F6);
	OpOff		(x,	129,	0X100058F6);
	MakeCode	(0X14CD6);
	MakeCode	(0X14CDC);
	MakeCode	(0X14CDE);
	MakeCode	(0X14CE8);
	MakeCode	(0X14D0E);
	MakeCode	(0X14D12);
	MakeCode	(0X14D16);
	MakeCode	(0X14D1A);
	MakeCode	(x=0X14D26);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X14D36);
	MakeCode	(0X14D52);
	MakeCode	(0X14D68);
	MakeCode	(0X14D76);
	MakeCode	(0X14D8A);
	MakeByte	(0X14D92);
	MakeArray	(0X14D92,	0X2);
	MakeDword	(x=0X14D94);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X14D98);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X14D9C);
	MakeDword	(x=0X14DA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X14DA4);
	MakeCode	(x=0X14DA8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14DAA);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X14DAC);
	OpHex		(x,	1);
	MakeCode	(x=0X14DB0);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X14DB6);
	OpHex		(x,	1);
	MakeCode	(x=0X14DBE);
	OpHex		(x,	1);
	MakeCode	(x=0X14DC6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14DC8);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X14DCA);
	OpHex		(x,	1);
	MakeCode	(x=0X14DCE);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X14DD0);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X14DD2);
	OpHex		(x,	1);
	MakeCode	(x=0X14DD6);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(0X14DDA);
	MakeCode	(x=0X14DE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14DEE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14DFA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X14E12);
	MakeCode	(0X14E14);
	MakeDword	(x=0X14E18);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X14E1C);
	MakeDword	(x=0X14E20);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X14E24);
	MakeDword	(x=0X14E28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X14E2C);
	MakeDword	(0X14E30);
	MakeCode	(x=0X14E34);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14E3C);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X14E3E);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X14E40);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X14E46);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X14E4A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X14E54);
	MakeCode	(x=0X14E56);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14E5A);
	OpOff		(x,	1,	0X10000558);
	OpOff		(x,	129,	0X10000558);
	MakeCode	(x=0X14E70);
	OpOff		(x,	1,	0X10000558);
	OpOff		(x,	129,	0X10000558);
	MakeCode	(x=0X14E74);
	OpOff		(x,	1,	0X10000558);
	OpOff		(x,	129,	0X10000558);
	MakeCode	(0X14E78);
	MakeCode	(x=0X14E7A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14E8C);
	OpOff		(x,	1,	0X10000558);
	OpOff		(x,	129,	0X10000558);
	MakeCode	(x=0X14E90);
	OpOff		(x,	1,	0X10000558);
	OpOff		(x,	129,	0X10000558);
	MakeCode	(0X14E94);
	MakeCode	(x=0X14E9E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X14EA6);
	MakeCode	(x=0X14EAA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14EB4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X14EB8,	"switch 8 cases ");
	MakeComm	(0X14EBC,	"switch jump");
	MakeComm	(0X14EC0,	"jump table for switch statement");
	MakeByte	(0X14EC0);
	MakeName	(0X14EC0,	"jpt_14EBC");
	MakeByte	(0X14EC1);
	MakeByte	(0X14EC2);
	MakeByte	(0X14EC3);
	MakeByte	(0X14EC4);
	MakeByte	(0X14EC5);
	MakeByte	(0X14EC6);
	MakeByte	(0X14EC7);
	MakeRptCmt	(0X14EC8,	"jumptable 00014EBC case 1");
	MakeCode	(0X14EC8);
	MakeCode	(x=0X14ED4);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X14ED6);
	OpOff		(x,	1,	0X10000558);
	OpOff		(x,	129,	0X10000558);
	MakeCode	(x=0X14EE6);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeComm	(0X14EE8,	"switch 12 cases ");
	MakeComm	(0X14EEC,	"switch jump");
	MakeComm	(0X14EF0,	"jump table for switch statement");
	MakeByte	(0X14EF0);
	MakeName	(0X14EF0,	"jpt_14EEC");
	MakeByte	(0X14EF1);
	MakeByte	(0X14EF2);
	MakeByte	(0X14EF3);
	MakeByte	(0X14EF4);
	MakeByte	(0X14EF5);
	MakeByte	(0X14EF6);
	MakeByte	(0X14EF7);
	MakeByte	(0X14EF8);
	MakeByte	(0X14EF9);
	MakeByte	(0X14EFA);
	MakeByte	(0X14EFB);
	MakeRptCmt	(0X14EFC,	"jumptable 00014EEC case 0");
	MakeCode	(0X14EFC);
	MakeRptCmt	(0X14F02,	"jumptable 00014EEC case 1");
	MakeCode	(0X14F02);
	MakeRptCmt	(0X14F06,	"jumptable 00014EEC case 3");
	MakeCode	(0X14F06);
	MakeRptCmt	(0X14F0E,	"jumptable 00014EEC case 5");
	MakeCode	(x=0X14F0E);
	OpHex		(x,	1);
	MakeCode	(x=0X14F14);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X14F16);
	OpHex		(x,	1);
	MakeCode	(x=0X14F1A);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeRptCmt	(0X14F1E,	"jumptable 00014EEC case 6");
	MakeCode	(0X14F1E);
	MakeRptCmt	(0X14F28,	"jumptable 00014EEC case 7");
	MakeCode	(0X14F28);
	MakeRptCmt	(0X14F2C,	"jumptable 00014EEC case 8");
	MakeCode	(x=0X14F2C);
	OpHex		(x,	1);
	MakeCode	(x=0X14F32);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X14F38,	"jumptable 00014EEC case 9");
	MakeCode	(0X14F38);
	MakeRptCmt	(0X14F4C,	"jumptable 00014EEC case 10");
	MakeCode	(x=0X14F4C);
	OpHex		(x,	1);
	MakeCode	(x=0X14F54);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X14F58);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X14F5A);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X14F60);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X14F6A,	"jumptable 00014EEC case 11");
	MakeCode	(0X14F6A);
	MakeCode	(x=0X14F72);
	OpHex		(x,	1);
	MakeCode	(x=0X14F7C);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X14F80);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X14F86);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X14F90);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeRptCmt	(0X14F9E,	"jumptable 00014EBC default case");
	MakeCode	(0X14F9E);
	MakeName	(0X14F9E,	"def_14EBC");
	MakeCode	(x=0X14FA0);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X14FAE);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X14FB6);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeRptCmt	(0X14FCE,	"jumptable 00014EEC default case");
	MakeCode	(0X14FCE);
	MakeName	(0X14FCE,	"def_14EEC");
	MakeCode	(0X14FD0);
	MakeCode	(0X14FE2);
	MakeCode	(x=0X14FE8);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X14FF8);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(0X15000);
	MakeCode	(0X15002);
	MakeCode	(0X15006);
	MakeCode	(x=0X1500C);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X1501E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X15022,	"jumptable 00014EBC cases 0,4,5");
	MakeCode	(x=0X15026);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeRptCmt	(0X1502E,	"jumptable 00014EEC cases 2,4");
	MakeCode	(0X1502E);
	MakeRptCmt	(0X15038,	"jumptable 00014EBC case 2");
	MakeCode	(0X15038);
	MakeCode	(x=0X1503C);
	OpOff		(x,	1,	0X10000558);
	OpOff		(x,	129,	0X10000558);
	MakeCode	(x=0X15046);
	OpOff		(x,	1,	0X10000558);
	OpOff		(x,	129,	0X10000558);
	MakeCode	(x=0X1505A);
	OpHex		(x,	1);
	MakeCode	(x=0X15064);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X1506C);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(0X1507E);
	MakeCode	(x=0X15084);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(0X15094);
	MakeRptCmt	(0X1509A,	"jumptable 00014EBC case 7");
	MakeCode	(0X1509A);
	MakeCode	(0X1509C);
	MakeCode	(0X1509E);
	MakeRptCmt	(0X150A0,	"jumptable 00014EBC case 3");
	MakeCode	(0X150A0);
	MakeCode	(0X150AA);
	MakeCode	(x=0X150B0);
	OpHex		(x,	1);
	MakeRptCmt	(0X150BE,	"jumptable 00014EBC case 6");
	MakeCode	(0X150BE);
	MakeCode	(0X150C2);
	MakeDword	(x=0X150CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X150D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X150D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X150D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X150DC);
	MakeCode	(0X150EA);
	MakeCode	(0X15100);
	MakeCode	(0X15126);
	MakeCode	(0X1512C);
	MakeCode	(0X15162);
	MakeCode	(0X1517C);
	MakeCode	(0X15198);
	MakeCode	(0X151D0);
	MakeCode	(0X151E0);
	MakeCode	(0X151E2);
	MakeCode	(0X151E4);
	MakeCode	(0X1522C);
	MakeCode	(0X15232);
	MakeCode	(0X1523A);
	MakeCode	(0X1529C);
	MakeCode	(0X152AC);
	MakeCode	(x=0X152B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X152BC);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X152BE);
	OpHex		(x,	1);
	MakeCode	(x=0X152C2);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X152C4);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X152C6);
	OpHex		(x,	1);
	MakeCode	(x=0X152CA);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X152D2);
	OpHex		(x,	1);
	MakeCode	(x=0X152E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1530C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1531A);
	MakeCode	(0X1531C);
	MakeName	(0X1531C,	"nullsub_5");
	MakeCode	(0X1531E);
	MakeCode	(0X15348);
	MakeCode	(0X1537E);
	MakeName	(0X1537E,	"nullsub_6");
	MakeCode	(0X15380);
	MakeCode	(x=0X15388);
	OpStkvar	(x,	1);
	MakeCode	(0X15394);
	MakeCode	(x=0X1539C);
	OpStkvar	(x,	1);
	MakeCode	(0X153A8);
	MakeCode	(x=0X153B0);
	OpStkvar	(x,	1);
	MakeCode	(0X153BC);
	MakeCode	(x=0X153C4);
	OpStkvar	(x,	1);
	MakeCode	(0X153D0);
	MakeCode	(x=0X153D8);
	OpStkvar	(x,	1);
	MakeCode	(0X153E4);
	MakeCode	(0X153E8);
	MakeCode	(x=0X153EC);
	OpHex		(x,	1);
	MakeCode	(0X1540E);
	MakeCode	(0X1543A);
	MakeCode	(x=0X15442);
	OpHex		(x,	1);
	MakeCode	(0X1545A);
	MakeCode	(0X1547C);
	MakeByte	(0X1549A);
	MakeArray	(0X1549A,	0X2);
	MakeDword	(0X1549C);
	MakeDword	(0X154A0);
	MakeDword	(0X154A4);
	MakeDword	(0X154A8);
	MakeDword	(0X154AC);
	MakeDword	(0X154B0);
	MakeDword	(x=0X154B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X154B8);
	MakeDword	(x=0X154BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X154C0);
	MakeDword	(0X154C4);
	MakeDword	(x=0X154C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X154CC);
	MakeDword	(0X154D0);
	MakeDword	(0X154D4);
	MakeDword	(0X154D8);
	MakeDword	(0X154DC);
	MakeDword	(0X154E0);
	MakeDword	(0X154E4);
	MakeDword	(0X154E8);
	MakeCode	(0X154EC);
	MakeCode	(x=0X154F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X154F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X15500);
	MakeCode	(0X15504);
	MakeName	(0X15504,	"nullsub_7");
	MakeCode	(0X15506);
	MakeCode	(0X15508);
	MakeCode	(0X15514);
	MakeCode	(0X15518);
	MakeCode	(0X1551A);
	MakeCode	(0X1551C);
	MakeCode	(0X1551E);
	MakeCode	(0X1552A);
	MakeCode	(0X1552E);
	MakeCode	(0X15530);
	MakeCode	(0X15532);
	MakeCode	(0X15534);
	MakeCode	(0X15536);
	MakeCode	(0X15538);
	MakeCode	(0X1553A);
	MakeCode	(0X1553C);
	MakeCode	(0X1553E);
	MakeCode	(0X15540);
	MakeCode	(0X15542);
	MakeDword	(x=0X15544);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X15548);
	MakeCode	(0X1555C);
	MakeCode	(x=0X1555E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X15576);
	MakeCode	(x=0X15578);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1557A);
	OpOff		(x,	1,	0X10005BF0);
	OpOff		(x,	129,	0X10005BF0);
	MakeCode	(x=0X1559C);
	OpOff		(x,	1,	0X10005BF0);
	OpOff		(x,	129,	0X10005BF0);
	MakeCode	(x=0X155A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X155AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X155B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X155C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X155CA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X155CE);
	OpStkvar	(x,	1);
	MakeComm	(0X155D8,	"priMask");
	MakeCode	(0X155E0);
	MakeCode	(x=0X155EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X155F2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X155F6);
	OpOff		(x,	1,	0X10005BF0);
	OpOff		(x,	129,	0X10005BF0);
	MakeCode	(x=0X155FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X15606);
	OpStkvar	(x,	1);
	MakeCode	(x=0X15612);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1561E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15624);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15628);
	OpStkvar	(x,	1);
	MakeComm	(0X15632,	"priMask");
	MakeCode	(0X1563A);
	MakeCode	(0X1564C);
	MakeCode	(x=0X15658);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1565A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1565C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X15662);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1566A);
	OpStkvar	(x,	1);
	MakeCode	(0X1566E);
	MakeName	(0X1566E,	"nullsub_10");
	MakeCode	(x=0X15670);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15686);
	OpOff		(x,	1,	0X100059E8);
	OpOff		(x,	129,	0X100059E8);
	MakeCode	(x=0X1568A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1568C);
	OpOff		(x,	1,	0X100059E8);
	OpOff		(x,	129,	0X100059E8);
	MakeCode	(x=0X15698);
	OpOff		(x,	1,	0X100059E8);
	OpOff		(x,	129,	0X100059E8);
	MakeCode	(x=0X1569C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X156A0);
	OpOff		(x,	1,	0X100059E8);
	OpOff		(x,	129,	0X100059E8);
	MakeCode	(x=0X156AA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X156AE);
	OpOff		(x,	1,	0X100059E8);
	OpOff		(x,	129,	0X100059E8);
	MakeDword	(x=0X156B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X156B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X156BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X156C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X156C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X156C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X156CC);
	MakeName	(0X156CC,	"WDT_Feed");
	MakeCode	(x=0X156D2);
	OpOff		(x,	1,	0X40000000);
	OpOff		(x,	129,	0X40000000);
	MakeCode	(x=0X156D6);
	OpOff		(x,	1,	0X40000000);
	OpOff		(x,	129,	0X40000000);
	MakeCode	(0X156DC);
	MakeCode	(x=0X156E2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X156EC);
	OpOff		(x,	1,	0X10005EF8);
	OpOff		(x,	129,	0X10005EF8);
	MakeCode	(0X156FC);
	MakeCode	(x=0X15702);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1570E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15716);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X15722);
	MakeCode	(x=0X15726);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1573C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1574A);
	MakeCode	(x=0X15750);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15764);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X15770);
	MakeCode	(0X15774);
	MakeCode	(x=0X1577C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1578C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15798);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X157A6);
	MakeCode	(0X157A8);
	MakeCode	(0X157B6);
	MakeCode	(0X157CA);
	MakeCode	(0X157D8);
	MakeCode	(x=0X157DA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X157E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15802);
	OpOff		(x,	1,	0X100005CC);
	OpOff		(x,	129,	0X100005CC);
	MakeCode	(x=0X1580A);
	OpOff		(x,	1,	0X100005CC);
	OpOff		(x,	129,	0X100005CC);
	MakeCode	(0X1580E);
	MakeCode	(x=0X15830);
	OpOff		(x,	1,	0X100005CC);
	OpOff		(x,	129,	0X100005CC);
	MakeCode	(x=0X1583E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15844);
	OpOff		(x,	1,	0X100005CC);
	OpOff		(x,	129,	0X100005CC);
	MakeCode	(x=0X15848);
	OpOff		(x,	1,	0X100005CC);
	OpOff		(x,	129,	0X100005CC);
	MakeCode	(0X1584C);
	MakeCode	(x=0X15862);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15870);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15896);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X158B0);
	MakeCode	(x=0X158B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X158C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X158CA);
	OpOff		(x,	1,	0X10005F20);
	OpOff		(x,	129,	0X10005F20);
	MakeCode	(x=0X158EE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X158FA);
	MakeCode	(0X15904);
	MakeCode	(0X1590E);
	MakeCode	(0X15918);
	MakeCode	(0X15922);
	MakeCode	(0X1592C);
	MakeCode	(0X15936);
	MakeCode	(0X15942);
	MakeCode	(0X1594E);
	MakeCode	(0X15958);
	MakeCode	(0X15962);
	MakeCode	(0X1596C);
	MakeCode	(0X15976);
	MakeCode	(0X15980);
	MakeCode	(0X1598A);
	MakeCode	(0X15994);
	MakeCode	(0X1599E);
	MakeCode	(0X159A8);
	MakeCode	(0X159B2);
	MakeCode	(0X159C2);
	MakeCode	(x=0X159D0);
	OpStkvar	(x,	1);
	MakeCode	(0X159D6);
	MakeCode	(0X159E0);
	MakeCode	(0X159F0);
	MakeCode	(0X159FA);
	MakeCode	(0X15A04);
	MakeCode	(0X15A08);
	MakeCode	(x=0X15A0E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15A18);
	OpOff		(x,	1,	0X10005EF8);
	OpOff		(x,	129,	0X10005EF8);
	MakeCode	(0X15A28);
	MakeCode	(0X15A2A);
	MakeByte	(0X15A36);
	MakeArray	(0X15A36,	0X2);
	MakeDword	(x=0X15A38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X15A3C);
	MakeDword	(0X15A40);
	MakeDword	(x=0X15A44);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X15A48);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X15A4C);
	MakeDword	(x=0X15A50);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X15A54);
	MakeCode	(0X15A70);
	MakeCode	(0X15A76);
	MakeCode	(0X15A7A);
	MakeCode	(0X15AAA);
	MakeCode	(0X15AAE);
	MakeDword	(0X15AD0);
	MakeCode	(0X15AD4);
	MakeCode	(0X15ADA);
	MakeCode	(0X15AEA);
	MakeCode	(0X15B0C);
	MakeCode	(0X15B10);
	MakeDword	(0X15B2C);
	MakeCode	(0X15B30);
	MakeName	(0X15B30,	"ADC_Init");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_4(void) {
        auto x;
#define id x

	MakeCode	(x=0X15B34);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15B42);
	OpHex		(x,	1);
	MakeComm	(0X15B48,	"ClkType");
	MakeCode	(x=0X15B48);
	OpEnumEx		(x,	1,	GetEnum("CLKPWR_PCLKSEL"),0);
	MakeCode	(x=0X15B4E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15B50);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X15B52);
	OpHex		(x,	1);
	MakeCode	(x=0X15B56);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X15B58);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X15B5A);
	OpHex		(x,	1);
	MakeCode	(x=0X15B5E);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X15B60);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X15B62);
	OpHex		(x,	1);
	MakeCode	(x=0X15B66);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X15B68);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X15B6A);
	OpHex		(x,	1);
	MakeCode	(x=0X15B6E);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X15B70);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X15B72);
	OpHex		(x,	1);
	MakeCode	(x=0X15B76);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X15B78);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X15B7A);
	OpHex		(x,	1);
	MakeCode	(x=0X15B7E);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X15BB2);
	OpHex		(x,	1);
	MakeCode	(x=0X15BBC);
	OpHex		(x,	1);
	MakeCode	(x=0X15BD4);
	OpHex		(x,	1);
	MakeCode	(0X15BDA);
	MakeCode	(x=0X15BDE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X15BE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X15BE6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X15BEA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X15BEE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X15BF2);
	OpStkvar	(x,	1);
	MakeComm	(0X15BF6,	"rate");
	MakeComm	(0X15BF8,	"ADCx");
	MakeCode	(x=0X15BF8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15C00);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X15C00,	"ADC_GetData");
	MakeCode	(x=0X15C08);
	OpHex		(x,	1);
	MakeCode	(0X15C0E);
	MakeCode	(x=0X15C10);
	OpHex		(x,	1);
	MakeCode	(x=0X15C16);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15C22);
	OpHex		(x,	1);
	MakeCode	(0X15C2A);
	MakeName	(0X15C2A,	"ADC_StartCmd");
	MakeCode	(x=0X15C2C);
	OpHex		(x,	1);
	MakeCode	(0X15C3C);
	MakeName	(0X15C3C,	"ADC_BurstCmd");
	MakeCode	(x=0X15C3E);
	OpHex		(x,	1);
	MakeCode	(x=0X15C4A);
	OpHex		(x,	1);
	MakeCode	(0X15C52);
	MakeName	(0X15C52,	"ADC_PowerdownCmd");
	MakeCode	(x=0X15C54);
	OpHex		(x,	1);
	MakeCode	(x=0X15C60);
	OpHex		(x,	1);
	MakeCode	(0X15C68);
	MakeName	(0X15C68,	"ADC_EdgeStartConfig");
	MakeCode	(x=0X15C6A);
	OpHex		(x,	1);
	MakeCode	(x=0X15C76);
	OpHex		(x,	1);
	MakeCode	(0X15C7E);
	MakeName	(0X15C7E,	"ADC_IntConfig");
	MakeCode	(0X15C96);
	MakeName	(0X15C96,	"ADC_ChannelCmd");
	MakeCode	(0X15CA6);
	MakeCode	(0X15CAA);
	MakeName	(0X15CAA,	"ADC_ChannelGetData");
	MakeCode	(0X15CB6);
	MakeName	(0X15CB6,	"ADC_ChannelGetStatus");
	MakeCode	(x=0X15CBE);
	OpHex		(x,	1);
	MakeCode	(x=0X15CC4);
	OpHex		(x,	1);
	MakeCode	(x=0X15CD0);
	OpStroffEx	(x,	1,	GetStrucIdByName("LPC_ADC_TypeDef"),	0);
	MakeName	(0X15CD0,	"ADC_GlobalGetData");
	MakeCode	(0X15CD4);
	MakeName	(0X15CD4,	"ADC_GlobalGetStatus");
	MakeCode	(x=0X15CD8);
	OpHex		(x,	1);
	MakeCode	(x=0X15CDE);
	OpHex		(x,	1);
	MakeByte	(0X15CEA);
	MakeArray	(0X15CEA,	0X2);
	MakeDword	(x=0X15CEC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X15CEC,	"ADCx");
	MakeDword	(0X15CF0);
	MakeDword	(x=0X15CF4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X15CF8);
	MakeCode	(0X15CFC);
	MakeName	(0X15CFC,	"CLKPWR_SetPCLKDiv");
	MakeCode	(0X15D2E);
	MakeCode	(0X15D50);
	MakeName	(0X15D50,	"CLKPWR_GetPCLKSEL");
	MakeCode	(0X15D5C);
	MakeCode	(x=0X15D64);
	OpHex		(x,	1);
	MakeCode	(x=0X15D6A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X15D6A,	"CLKPWR_GetPCLK");
	MakeCode	(0X15D84);
	MakeCode	(0X15D88);
	MakeRptCmt	(0X15D90,	"Configure power supply for each peripheral according to NewState");
	MakeCode	(0X15D90);
	MakeName	(0X15D90,	"CLKPWR_ConfigPPWR");
	MakeCode	(0X15DA8);
	MakeCode	(0X15DB2);
	MakeName	(0X15DB2,	"CLKPWR_Sleep");
	MakeCode	(x=0X15DBE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X15DBE,	"CLKPWR_DeepSleep");
	MakeCode	(x=0X15DD0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X15DD0,	"CLKPWR_PowerDown");
	MakeCode	(x=0X15DE2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X15DE2,	"CLKPWR_DeepPowerDown");
	MakeDword	(0X15DF4);
	MakeDword	(x=0X15DF8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X15DFC);
	MakeDword	(x=0X15E00);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X15E04);
	MakeName	(0X15E04,	"check_failed");
	MakeCode	(x=0X15E08);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeStr		(0X15E10,	0X15E3D);
	MakeName	(0X15E10,	"aWrongParameter");
	MakeByte	(0X15E3D);
	MakeArray	(0X15E3D,	0X3);
	MakeCode	(0X15E40);
	MakeName	(0X15E40,	"RTC_Init");
	MakeCode	(x=0X15E44);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X15E4A,	"line");
	MakeCode	(x=0X15E4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X15E5A);
	MakeCode	(x=0X15E5E);
	OpStroffEx	(x,	1,	GetStrucIdByName("LPC_RTC_TypeDef"),	0);
	MakeCode	(x=0X15E60);
	OpStroffEx	(x,	1,	GetStrucIdByName("LPC_RTC_TypeDef"),	0);
	MakeCode	(x=0X15E64);
	OpStroffEx	(x,	1,	GetStrucIdByName("LPC_RTC_TypeDef"),	0);
	MakeCode	(0X15E6A);
	MakeName	(0X15E6A,	"RTC_DeInit");
	MakeCode	(x=0X15E6E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X15E74,	"line");
	MakeCode	(x=0X15E74);
	OpDecimal	(x,	1);
	MakeCode	(x=0X15E76);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15E7E);
	OpStroffEx	(x,	1,	GetStrucIdByName("LPC_RTC_TypeDef"),	0);
	MakeComm	(0X15E80,	"NewState");
	MakeComm	(0X15E86,	"PPType");
	MakeCode	(0X15E8E);
	MakeName	(0X15E8E,	"RTC_ResetClockTickCounter");
	MakeCode	(x=0X15E92);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X15E98,	"line");
	MakeCode	(x=0X15E98);
	OpDecimal	(x,	1);
	MakeCode	(x=0X15E9A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15EA2);
	OpHex		(x,	1);
	MakeCode	(x=0X15EAA);
	OpHex		(x,	1);
	MakeCode	(0X15EB2);
	MakeName	(0X15EB2,	"RTC_Cmd");
	MakeCode	(x=0X15EB6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X15EBE,	"line");
	MakeCode	(x=0X15EBE);
	OpDecimal	(x,	1);
	MakeCode	(x=0X15EC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X15ECC,	"line");
	MakeCode	(x=0X15ECC);
	OpDecimal	(x,	1);
	MakeCode	(x=0X15ECE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X15ED4);
	OpStroffEx	(x,	1,	GetStrucIdByName("LPC_RTC_TypeDef"),	0);
	MakeCode	(x=0X15ED6);
	OpHex		(x,	1);
	MakeCode	(x=0X15EDA);
	OpStroffEx	(x,	1,	GetStrucIdByName("LPC_RTC_TypeDef"),	0);
	MakeCode	(x=0X15EDE);
	OpStroffEx	(x,	1,	GetStrucIdByName("LPC_RTC_TypeDef"),	0);
	MakeCode	(x=0X15EE0);
	OpEnumEx		(x,	1,	GetEnum("RTC_CCR"),0);
	MakeCode	(0X15EE6);
	MakeName	(0X15EE6,	"RTC_CntIncrIntConfig");
	MakeCode	(x=0X15EEA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X15EF4,	"line");
	MakeCode	(x=0X15EF6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X15F02,	"line");
	MakeCode	(x=0X15F04);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X15F28,	"line");
	MakeCode	(x=0X15F2A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X15F34,	"switch 8 cases ");
	MakeComm	(0X15F38,	"switch jump");
	MakeComm	(0X15F3C,	"jump table for switch statement");
	MakeByte	(0X15F3C);
	MakeName	(0X15F3C,	"jpt_15F38");
	MakeByte	(0X15F3D);
	MakeByte	(0X15F3E);
	MakeByte	(0X15F3F);
	MakeByte	(0X15F40);
	MakeByte	(0X15F41);
	MakeByte	(0X15F42);
	MakeByte	(0X15F43);
	MakeComm	(0X15F44,	"switch 8 cases ");
	MakeCode	(0X15F44);
	MakeComm	(0X15F48,	"switch jump");
	MakeComm	(0X15F4C,	"jump table for switch statement");
	MakeByte	(0X15F4C);
	MakeName	(0X15F4C,	"jpt_15F48");
	MakeByte	(0X15F4D);
	MakeByte	(0X15F4E);
	MakeByte	(0X15F4F);
	MakeByte	(0X15F50);
	MakeByte	(0X15F51);
	MakeByte	(0X15F52);
	MakeByte	(0X15F53);
	MakeRptCmt	(0X15F54,	"jumptable 00015F48 case 0");
	MakeCode	(0X15F54);
	MakeCode	(x=0X15F56);
	OpHex		(x,	1);
	MakeRptCmt	(0X15F5C,	"jumptable 00015F48 case 1");
	MakeCode	(0X15F5C);
	MakeCode	(x=0X15F5E);
	OpHex		(x,	1);
	MakeRptCmt	(0X15F64,	"jumptable 00015F38 default case");
	MakeName	(0X15F64,	"def_15F48");
	MakeRptCmt	(0X15F66,	"jumptable 00015F48 case 2");
	MakeCode	(0X15F66);
	MakeCode	(x=0X15F68);
	OpHex		(x,	1);
	MakeRptCmt	(0X15F6E,	"jumptable 00015F48 case 3");
	MakeCode	(0X15F6E);
	MakeCode	(x=0X15F70);
	OpHex		(x,	1);
	MakeRptCmt	(0X15F76,	"jumptable 00015F48 case 4");
	MakeCode	(0X15F76);
	MakeCode	(x=0X15F78);
	OpHex		(x,	1);
	MakeRptCmt	(0X15F7E,	"jumptable 00015F48 case 5");
	MakeCode	(0X15F7E);
	MakeCode	(x=0X15F80);
	OpHex		(x,	1);
	MakeRptCmt	(0X15F86,	"jumptable 00015F48 case 6");
	MakeCode	(0X15F86);
	MakeCode	(x=0X15F88);
	OpHex		(x,	1);
	MakeRptCmt	(0X15F8E,	"jumptable 00015F48 case 7");
	MakeCode	(0X15F8E);
	MakeCode	(x=0X15F90);
	OpHex		(x,	1);
	MakeRptCmt	(0X15F96,	"jumptable 00015F38 case 0");
	MakeCode	(0X15F96);
	MakeCode	(x=0X15F98);
	OpHex		(x,	1);
	MakeRptCmt	(0X15F9E,	"jumptable 00015F38 case 1");
	MakeCode	(0X15F9E);
	MakeCode	(x=0X15FA0);
	OpHex		(x,	1);
	MakeRptCmt	(0X15FA6,	"jumptable 00015F38 case 2");
	MakeCode	(0X15FA6);
	MakeCode	(x=0X15FA8);
	OpHex		(x,	1);
	MakeRptCmt	(0X15FAE,	"jumptable 00015F38 case 3");
	MakeCode	(0X15FAE);
	MakeCode	(x=0X15FB0);
	OpHex		(x,	1);
	MakeRptCmt	(0X15FB6,	"jumptable 00015F38 case 4");
	MakeCode	(0X15FB6);
	MakeCode	(x=0X15FB8);
	OpHex		(x,	1);
	MakeRptCmt	(0X15FBE,	"jumptable 00015F38 case 5");
	MakeCode	(0X15FBE);
	MakeCode	(x=0X15FC0);
	OpHex		(x,	1);
	MakeRptCmt	(0X15FC6,	"jumptable 00015F38 case 6");
	MakeCode	(0X15FC6);
	MakeCode	(x=0X15FC8);
	OpHex		(x,	1);
	MakeRptCmt	(0X15FCE,	"jumptable 00015F38 case 7");
	MakeCode	(0X15FCE);
	MakeCode	(x=0X15FD0);
	OpHex		(x,	1);
	MakeCode	(0X15FD6);
	MakeName	(0X15FD6,	"RTC_AlarmIntConfig");
	MakeCode	(x=0X15FDA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X15FE4,	"line");
	MakeCode	(x=0X15FE6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X15FF2,	"line");
	MakeCode	(x=0X15FF4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X16018,	"line");
	MakeCode	(x=0X1601A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X16024,	"switch 8 cases ");
	MakeComm	(0X16028,	"switch jump");
	MakeComm	(0X1602C,	"jump table for switch statement");
	MakeByte	(0X1602C);
	MakeName	(0X1602C,	"jpt_16028");
	MakeByte	(0X1602D);
	MakeByte	(0X1602E);
	MakeByte	(0X1602F);
	MakeByte	(0X16030);
	MakeByte	(0X16031);
	MakeByte	(0X16032);
	MakeByte	(0X16033);
	MakeComm	(0X16034,	"switch 8 cases ");
	MakeCode	(0X16034);
	MakeComm	(0X16038,	"switch jump");
	MakeComm	(0X1603C,	"jump table for switch statement");
	MakeByte	(0X1603C);
	MakeName	(0X1603C,	"jpt_16038");
	MakeByte	(0X1603D);
	MakeByte	(0X1603E);
	MakeByte	(0X1603F);
	MakeByte	(0X16040);
	MakeByte	(0X16041);
	MakeByte	(0X16042);
	MakeByte	(0X16043);
	MakeRptCmt	(0X16044,	"jumptable 00016038 case 0");
	MakeCode	(0X16044);
	MakeCode	(x=0X16046);
	OpHex		(x,	1);
	MakeRptCmt	(0X1604C,	"jumptable 00016038 case 1");
	MakeCode	(0X1604C);
	MakeCode	(x=0X1604E);
	OpHex		(x,	1);
	MakeRptCmt	(0X16054,	"jumptable 00016028 default case");
	MakeName	(0X16054,	"def_16038");
	MakeRptCmt	(0X16056,	"jumptable 00016038 case 2");
	MakeCode	(0X16056);
	MakeCode	(x=0X16058);
	OpHex		(x,	1);
	MakeRptCmt	(0X1605E,	"jumptable 00016038 case 3");
	MakeCode	(0X1605E);
	MakeCode	(x=0X16060);
	OpHex		(x,	1);
	MakeRptCmt	(0X16066,	"jumptable 00016038 case 4");
	MakeCode	(0X16066);
	MakeCode	(x=0X16068);
	OpHex		(x,	1);
	MakeRptCmt	(0X1606E,	"jumptable 00016038 case 5");
	MakeCode	(0X1606E);
	MakeCode	(x=0X16070);
	OpHex		(x,	1);
	MakeRptCmt	(0X16076,	"jumptable 00016038 case 6");
	MakeCode	(0X16076);
	MakeCode	(x=0X16078);
	OpHex		(x,	1);
	MakeRptCmt	(0X1607E,	"jumptable 00016038 case 7");
	MakeCode	(0X1607E);
	MakeCode	(x=0X16080);
	OpHex		(x,	1);
	MakeRptCmt	(0X16086,	"jumptable 00016028 case 0");
	MakeCode	(0X16086);
	MakeCode	(x=0X16088);
	OpHex		(x,	1);
	MakeRptCmt	(0X1608E,	"jumptable 00016028 case 1");
	MakeCode	(0X1608E);
	MakeCode	(x=0X16090);
	OpHex		(x,	1);
	MakeRptCmt	(0X16096,	"jumptable 00016028 case 2");
	MakeCode	(0X16096);
	MakeCode	(x=0X16098);
	OpHex		(x,	1);
	MakeRptCmt	(0X1609E,	"jumptable 00016028 case 3");
	MakeCode	(0X1609E);
	MakeCode	(x=0X160A0);
	OpHex		(x,	1);
	MakeRptCmt	(0X160A6,	"jumptable 00016028 case 4");
	MakeCode	(0X160A6);
	MakeCode	(x=0X160A8);
	OpHex		(x,	1);
	MakeRptCmt	(0X160AE,	"jumptable 00016028 case 5");
	MakeCode	(0X160AE);
	MakeCode	(x=0X160B0);
	OpHex		(x,	1);
	MakeRptCmt	(0X160B6,	"jumptable 00016028 case 6");
	MakeCode	(0X160B6);
	MakeCode	(x=0X160B8);
	OpHex		(x,	1);
	MakeRptCmt	(0X160BE,	"jumptable 00016028 case 7");
	MakeCode	(0X160BE);
	MakeCode	(x=0X160C0);
	OpHex		(x,	1);
	MakeCode	(0X160C6);
	MakeName	(0X160C6,	"RTC_SetTime");
	MakeCode	(x=0X160CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X160D6,	"line");
	MakeCode	(x=0X160D6);
	OpDecimal	(x,	1);
	MakeCode	(x=0X160DA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X160FE,	"line");
	MakeCode	(x=0X160FE);
	OpDecimal	(x,	1);
	MakeCode	(x=0X16102);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1610C);
	OpHex		(x,	1);
	MakeCode	(x=0X16110);
	OpHex		(x,	1);
	MakeComm	(0X16114,	"switch 8 cases ");
	MakeComm	(0X16118,	"switch jump");
	MakeComm	(0X1611C,	"jump table for switch statement");
	MakeByte	(0X1611C);
	MakeName	(0X1611C,	"jpt_16118");
	MakeByte	(0X1611D);
	MakeByte	(0X1611E);
	MakeByte	(0X1611F);
	MakeByte	(0X16120);
	MakeByte	(0X16121);
	MakeByte	(0X16122);
	MakeByte	(0X16123);
	MakeRptCmt	(0X16124,	"jumptable 00016118 case 0");
	MakeCode	(0X16124);
	MakeComm	(0X16128,	"line");
	MakeCode	(x=0X1612C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X16136,	"jumptable 00016118 default case");
	MakeName	(0X16136,	"def_16118");
	MakeRptCmt	(0X1613A,	"jumptable 00016118 case 1");
	MakeCode	(0X1613A);
	MakeComm	(0X1613E,	"line");
	MakeCode	(x=0X16142);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X1614E,	"jumptable 00016118 case 2");
	MakeCode	(0X1614E);
	MakeComm	(0X16152,	"line");
	MakeCode	(x=0X16156);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X16162,	"jumptable 00016118 case 3");
	MakeCode	(0X16162);
	MakeComm	(0X16166,	"line");
	MakeCode	(x=0X1616A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16170);
	OpHex		(x,	1);
	MakeRptCmt	(0X1617A,	"jumptable 00016118 case 4");
	MakeCode	(0X1617A);
	MakeComm	(0X1617E,	"line");
	MakeCode	(x=0X16182);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X1618E,	"jumptable 00016118 case 5");
	MakeCode	(0X1618E);
	MakeComm	(0X16194,	"line");
	MakeCode	(x=0X16198);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X161A6,	"jumptable 00016118 case 6");
	MakeCode	(0X161A6);
	MakeComm	(0X161AA,	"line");
	MakeCode	(x=0X161AE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X161B4);
	OpHex		(x,	1);
	MakeRptCmt	(0X161BE,	"jumptable 00016118 case 7");
	MakeCode	(0X161BE);
	MakeComm	(0X161C6,	"line");
	MakeCode	(x=0X161CA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X161D8);
	MakeName	(0X161D8,	"RTC_GetTime");
	MakeCode	(x=0X161DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X161E4,	"line");
	MakeCode	(x=0X161E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1620C,	"line");
	MakeCode	(x=0X16210);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X16216,	"switch 8 cases ");
	MakeComm	(0X1621A,	"switch jump");
	MakeComm	(0X1621E,	"jump table for switch statement");
	MakeByte	(0X1621E);
	MakeName	(0X1621E,	"jpt_1621A");
	MakeByte	(0X1621F);
	MakeByte	(0X16220);
	MakeByte	(0X16221);
	MakeByte	(0X16222);
	MakeByte	(0X16223);
	MakeByte	(0X16224);
	MakeByte	(0X16225);
	MakeRptCmt	(0X16226,	"jumptable 0001621A case 0");
	MakeCode	(0X16226);
	MakeDword	(x=0X1622C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeStr		(0X16230,	0X1624A);
	MakeName	(0X16230,	"aLpc17xx_libLpc");
	MakeByte	(0X1624A);
	MakeArray	(0X1624A,	0X2);
	MakeRptCmt	(0X1624C,	"jumptable 0001621A case 1");
	MakeCode	(0X1624C);
	MakeCode	(x=0X16250);
	OpHex		(x,	1);
	MakeRptCmt	(0X16256,	"jumptable 0001621A case 2");
	MakeCode	(0X16256);
	MakeRptCmt	(0X1625C,	"jumptable 0001621A case 3");
	MakeCode	(0X1625C);
	MakeCode	(x=0X16260);
	OpHex		(x,	1);
	MakeRptCmt	(0X16266,	"jumptable 0001621A case 4");
	MakeCode	(0X16266);
	MakeCode	(x=0X1626A);
	OpHex		(x,	1);
	MakeRptCmt	(0X16270,	"jumptable 0001621A case 5");
	MakeCode	(0X16270);
	MakeRptCmt	(0X16278,	"jumptable 0001621A case 6");
	MakeCode	(0X16278);
	MakeCode	(x=0X1627C);
	OpHex		(x,	1);
	MakeRptCmt	(0X16282,	"jumptable 0001621A case 7");
	MakeCode	(0X16282);
	MakeRptCmt	(0X1628A,	"jumptable 0001621A default case");
	MakeCode	(0X1628A);
	MakeName	(0X1628A,	"def_1621A");
	MakeCode	(0X1628E);
	MakeName	(0X1628E,	"RTC_SetFullTime");
	MakeCode	(x=0X16292);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1629A,	"line");
	MakeCode	(x=0X1629E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X162A8);
	OpHex		(x,	1);
	MakeCode	(x=0X162B2);
	OpHex		(x,	1);
	MakeCode	(x=0X162C4);
	OpHex		(x,	1);
	MakeCode	(x=0X162CE);
	OpHex		(x,	1);
	MakeCode	(x=0X162D8);
	OpHex		(x,	1);
	MakeCode	(x=0X162E2);
	OpHex		(x,	1);
	MakeCode	(0X162F2);
	MakeName	(0X162F2,	"RTC_GetFullTime");
	MakeCode	(x=0X162F6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X162FE,	"line");
	MakeCode	(x=0X16302);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1630E);
	OpHex		(x,	1);
	MakeCode	(x=0X16318);
	OpHex		(x,	1);
	MakeCode	(x=0X1632A);
	OpHex		(x,	1);
	MakeCode	(x=0X16334);
	OpHex		(x,	1);
	MakeCode	(x=0X1633E);
	OpHex		(x,	1);
	MakeCode	(x=0X16346);
	OpHex		(x,	1);
	MakeCode	(0X16356);
	MakeName	(0X16356,	"RTC_SetAlarmTime");
	MakeCode	(x=0X1635C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X16366,	"line");
	MakeCode	(x=0X1636A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16376);
	OpHex		(x,	1);
	MakeCode	(x=0X1637A);
	OpHex		(x,	1);
	MakeComm	(0X1637E,	"switch 8 cases ");
	MakeComm	(0X16382,	"switch jump");
	MakeComm	(0X16386,	"jump table for switch statement");
	MakeByte	(0X16386);
	MakeName	(0X16386,	"jpt_16382");
	MakeByte	(0X16387);
	MakeByte	(0X16388);
	MakeByte	(0X16389);
	MakeByte	(0X1638A);
	MakeByte	(0X1638B);
	MakeByte	(0X1638C);
	MakeByte	(0X1638D);
	MakeRptCmt	(0X1638E,	"jumptable 00016382 case 0");
	MakeCode	(0X1638E);
	MakeComm	(0X16392,	"line");
	MakeCode	(x=0X16396);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X163A2,	"jumptable 00016382 default case");
	MakeName	(0X163A2,	"def_16382");
	MakeRptCmt	(0X163A4,	"jumptable 00016382 case 1");
	MakeCode	(0X163A4);
	MakeComm	(0X163A8,	"line");
	MakeCode	(x=0X163AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X163BA,	"jumptable 00016382 case 2");
	MakeCode	(0X163BA);
	MakeComm	(0X163BE,	"line");
	MakeCode	(x=0X163C2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X163D0,	"jumptable 00016382 case 3");
	MakeCode	(0X163D0);
	MakeComm	(0X163D4,	"line");
	MakeCode	(x=0X163D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X163E0);
	OpHex		(x,	1);
	MakeRptCmt	(0X163EA,	"jumptable 00016382 case 4");
	MakeCode	(0X163EA);
	MakeComm	(0X163EE,	"line");
	MakeCode	(x=0X163F2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X16400,	"jumptable 00016382 case 5");
	MakeCode	(0X16400);
	MakeComm	(0X16406,	"line");
	MakeCode	(x=0X1640A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0X1641C,	"jumptable 00016382 case 6");
	MakeCode	(0X1641C);
	MakeComm	(0X16420,	"line");
	MakeCode	(x=0X16424);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1642C);
	OpHex		(x,	1);
	MakeRptCmt	(0X16436,	"jumptable 00016382 case 7");
	MakeCode	(0X16436);
	MakeComm	(0X1643E,	"line");
	MakeCode	(x=0X16442);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X16454,	"switch 8 cases ");
	MakeCode	(0X16454);
	MakeName	(0X16454,	"RTC_GetAlarmTime");
	MakeComm	(0X16458,	"switch jump");
	MakeComm	(0X1645C,	"jump table for switch statement");
	MakeByte	(0X1645C);
	MakeName	(0X1645C,	"jpt_16458");
	MakeByte	(0X1645D);
	MakeByte	(0X1645E);
	MakeByte	(0X1645F);
	MakeByte	(0X16460);
	MakeByte	(0X16461);
	MakeByte	(0X16462);
	MakeByte	(0X16463);
	MakeRptCmt	(0X16464,	"jumptable 00016458 case 0");
	MakeCode	(0X16464);
	MakeRptCmt	(0X1646A,	"jumptable 00016458 case 1");
	MakeCode	(0X1646A);
	MakeCode	(x=0X1646E);
	OpHex		(x,	1);
	MakeRptCmt	(0X16474,	"jumptable 00016458 case 2");
	MakeCode	(0X16474);
	MakeRptCmt	(0X1647A,	"jumptable 00016458 case 3");
	MakeCode	(0X1647A);
	MakeCode	(x=0X1647E);
	OpHex		(x,	1);
	MakeRptCmt	(0X16484,	"jumptable 00016458 case 4");
	MakeCode	(0X16484);
	MakeCode	(x=0X16488);
	OpHex		(x,	1);
	MakeRptCmt	(0X1648E,	"jumptable 00016458 case 5");
	MakeCode	(0X1648E);
	MakeRptCmt	(0X16498,	"jumptable 00016458 case 6");
	MakeCode	(0X16498);
	MakeCode	(x=0X1649C);
	OpHex		(x,	1);
	MakeRptCmt	(0X164A2,	"jumptable 00016458 case 7");
	MakeCode	(0X164A2);
	MakeRptCmt	(0X164AC,	"jumptable 00016458 default case");
	MakeCode	(0X164AC);
	MakeName	(0X164AC,	"def_16458");
	MakeCode	(0X164B0);
	MakeName	(0X164B0,	"RTC_SetFullAlarmTime");
	MakeCode	(x=0X164B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X164BC,	"line");
	MakeCode	(x=0X164C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X164CA);
	OpHex		(x,	1);
	MakeCode	(x=0X164D4);
	OpHex		(x,	1);
	MakeCode	(x=0X164E8);
	OpHex		(x,	1);
	MakeCode	(x=0X164F2);
	OpHex		(x,	1);
	MakeCode	(x=0X164FC);
	OpHex		(x,	1);
	MakeCode	(x=0X16506);
	OpHex		(x,	1);
	MakeCode	(0X16516);
	MakeName	(0X16516,	"RTC_GetFullAlarmTime");
	MakeCode	(x=0X1651A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X16522,	"line");
	MakeCode	(x=0X16526);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16532);
	OpHex		(x,	1);
	MakeCode	(x=0X1653C);
	OpHex		(x,	1);
	MakeCode	(x=0X16550);
	OpHex		(x,	1);
	MakeCode	(x=0X1655A);
	OpHex		(x,	1);
	MakeCode	(x=0X16564);
	OpHex		(x,	1);
	MakeCode	(x=0X1656C);
	OpHex		(x,	1);
	MakeCode	(0X1657C);
	MakeName	(0X1657C,	"RTC_GetIntPending");
	MakeCode	(x=0X16580);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X16588,	"line");
	MakeCode	(x=0X1658C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1659C,	"line");
	MakeCode	(x=0X165A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X165B2);
	MakeName	(0X165B2,	"RTC_ClearIntPending");
	MakeCode	(x=0X165B6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X165BE,	"line");
	MakeCode	(x=0X165C2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X165D2,	"line");
	MakeCode	(x=0X165D6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X165E6);
	MakeName	(0X165E6,	"RTC_CalibCounterCmd");
	MakeCode	(x=0X165EA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X165F2,	"line");
	MakeCode	(x=0X165F6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X16604,	"line");
	MakeCode	(x=0X16608);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16612);
	OpHex		(x,	1);
	MakeCode	(0X1661A);
	MakeCode	(x=0X1661C);
	OpHex		(x,	1);
	MakeCode	(0X16622);
	MakeName	(0X16622,	"RTC_CalibConfig");
	MakeCode	(x=0X16628);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X16632,	"line");
	MakeCode	(x=0X16636);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X16644,	"line");
	MakeCode	(x=0X16648);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X16658,	"line");
	MakeCode	(x=0X1665C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeByte	(0X16676);
	MakeArray	(0X16676,	0X2);
	MakeDword	(x=0X16678);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1667C);
	MakeName	(0X1667C,	"RTC_WriteGPREG");
	MakeCode	(x=0X16680);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1668A,	"line");
	MakeCode	(x=0X1668E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1669A,	"line");
	MakeCode	(x=0X1669E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X166AE);
	MakeName	(0X166AE,	"RTC_ReadGPREG");
	MakeCode	(x=0X166B2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X166BA,	"line");
	MakeCode	(x=0X166BE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X166CA,	"line");
	MakeCode	(x=0X166CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeByte	(0X166DE);
	MakeArray	(0X166DE,	0X2);
	MakeDword	(x=0X166E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X166E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X166EA);
	OpOff		(x,	1,	0X10006740);
	OpOff		(x,	129,	0X10006740);
	MakeCode	(x=0X166F0);
	OpOff		(x,	1,	0X10006740);
	OpOff		(x,	129,	0X10006740);
	MakeCode	(x=0X166F6);
	OpOff		(x,	1,	0X10006740);
	OpOff		(x,	129,	0X10006740);
	MakeCode	(x=0X166FA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16700);
	OpOff		(x,	1,	0X10006120);
	OpOff		(x,	129,	0X10006120);
	MakeCode	(x=0X16712);
	OpOff		(x,	1,	0X10006130);
	OpOff		(x,	129,	0X10006130);
	MakeCode	(0X1671E);
	MakeCode	(x=0X16720);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16722);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X16724);
	OpHex		(x,	1);
	MakeCode	(x=0X1673E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16740);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16744);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X1676A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X16774);
	MakeCode	(x=0X16778);
	OpHex		(x,	1);
	MakeCode	(0X16798);
	MakeName	(0X16798,	"UART0_Init");
	MakeCode	(x=0X167A8);
	OpHex		(x,	1);
	MakeComm	(0X167B0,	"ClkType");
	MakeCode	(x=0X167B0);
	OpEnumEx		(x,	1,	GetEnum("CLKPWR_PCLKSEL"),0);
	MakeCode	(0X167DE);
	MakeCode	(0X167E8);
	MakeCode	(0X1680E);
	MakeCode	(x=0X16828);
	OpHex		(x,	1);
	MakeCode	(x=0X16846);
	OpHex		(x,	1);
	MakeCode	(x=0X16852);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16856);
	OpHex		(x,	1);
	MakeCode	(x=0X1685A);
	OpHex		(x,	1);
	MakeCode	(x=0X16860);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16864);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X1686A);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X16870);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X16876);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X1687A);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X1687E);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X16882);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X16884);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X16886);
	OpHex		(x,	1);
	MakeCode	(x=0X1688A);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X1688C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X168AE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X168B2);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X168BA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X168BC);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(0X168C6);
	MakeCode	(x=0X168C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X168D0);
	OpOff		(x,	1,	0X10006120);
	OpOff		(x,	129,	0X10006120);
	MakeCode	(x=0X168D4);
	OpOff		(x,	1,	0X10006120);
	OpOff		(x,	129,	0X10006120);
	MakeCode	(x=0X168F6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X168F8);
	OpOff		(x,	1,	0X4000C000);
	OpOff		(x,	129,	0X4000C000);
	MakeCode	(x=0X168FE);
	OpOff		(x,	1,	0X10006120);
	OpOff		(x,	129,	0X10006120);
	MakeCode	(x=0X16908);
	OpOff		(x,	1,	0X10006120);
	OpOff		(x,	129,	0X10006120);
	MakeComm	(0X16912,	"priMask");
	MakeCode	(0X1691C);
	MakeCode	(x=0X16920);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16922);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X16932);
	MakeCode	(0X16968);
	MakeComm	(0X1699E,	"priMask");
	MakeCode	(x=0X169AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X169B4);
	OpOff		(x,	1,	0X10006750);
	OpOff		(x,	129,	0X10006750);
	MakeCode	(x=0X169C4);
	OpOff		(x,	1,	0X10006760);
	OpOff		(x,	129,	0X10006760);
	MakeCode	(x=0X169D0);
	OpOff		(x,	1,	0X100067F0);
	OpOff		(x,	129,	0X100067F0);
	MakeCode	(0X169DC);
	MakeCode	(x=0X169DE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X169E0);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X169E2);
	OpHex		(x,	1);
	MakeCode	(x=0X169FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16A04);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X16A2A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X16A36);
	MakeCode	(x=0X16A3A);
	OpHex		(x,	1);
	MakeCode	(0X16A5A);
	MakeName	(0X16A5A,	"UART1_Init");
	MakeCode	(x=0X16A6A);
	OpHex		(x,	1);
	MakeComm	(0X16A72,	"ClkType");
	MakeCode	(x=0X16A72);
	OpEnumEx		(x,	1,	GetEnum("CLKPWR_PCLKSEL"),0);
	MakeCode	(0X16AA0);
	MakeCode	(0X16AAA);
	MakeDword	(x=0X16AD0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16AD4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16AD8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X16ADC);
	MakeDword	(x=0X16AE0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16AE4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X16AE8);
	MakeCode	(x=0X16B02);
	OpHex		(x,	1);
	MakeCode	(x=0X16B20);
	OpHex		(x,	1);
	MakeCode	(x=0X16B2C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16B2E);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X16B30);
	OpHex		(x,	1);
	MakeCode	(x=0X16B34);
	OpHex		(x,	1);
	MakeCode	(x=0X16B38);
	OpOff		(x,	1,	0X4002C000);
	OpOff		(x,	129,	0X4002C000);
	MakeCode	(x=0X16B3A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16B3E);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X16B44);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X16B4A);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X16B4E);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X16B52);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X16B56);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X16B5A);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X16B5C);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X16B5E);
	OpHex		(x,	1);
	MakeCode	(x=0X16B62);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X16B64);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16B82);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16B86);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X16B8E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16B90);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(0X16B9A);
	MakeCode	(x=0X16B9C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16BA0);
	OpOff		(x,	1,	0X10006750);
	OpOff		(x,	129,	0X10006750);
	MakeCode	(x=0X16BA4);
	OpOff		(x,	1,	0X10006750);
	OpOff		(x,	129,	0X10006750);
	MakeCode	(x=0X16BC6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16BC8);
	OpOff		(x,	1,	0X40010000);
	OpOff		(x,	129,	0X40010000);
	MakeCode	(x=0X16BCE);
	OpOff		(x,	1,	0X10006750);
	OpOff		(x,	129,	0X10006750);
	MakeCode	(x=0X16BD8);
	OpOff		(x,	1,	0X10006750);
	OpOff		(x,	129,	0X10006750);
	MakeComm	(0X16BE2,	"priMask");
	MakeCode	(0X16BEC);
	MakeCode	(x=0X16BF0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16BF2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X16C00);
	MakeCode	(0X16C32);
	MakeComm	(0X16C68,	"priMask");
	MakeCode	(x=0X16C74);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16C7C);
	OpOff		(x,	1,	0X10006840);
	OpOff		(x,	129,	0X10006840);
	MakeCode	(x=0X16C8C);
	OpOff		(x,	1,	0X10006850);
	OpOff		(x,	129,	0X10006850);
	MakeCode	(0X16C98);
	MakeCode	(x=0X16C9E);
	OpHex		(x,	1);
	MakeCode	(x=0X16CB8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16CD2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X16CDE);
	MakeCode	(x=0X16CE2);
	OpHex		(x,	1);
	MakeCode	(0X16D02);
	MakeName	(0X16D02,	"UART2_Init");
	MakeComm	(0X16D0C,	"ClkType");
	MakeCode	(x=0X16D0C);
	OpEnumEx		(x,	1,	GetEnum("CLKPWR_PCLKSEL"),0);
	MakeCode	(0X16D3A);
	MakeCode	(0X16D44);
	MakeCode	(0X16D6A);
	MakeCode	(x=0X16D84);
	OpHex		(x,	1);
	MakeCode	(x=0X16DA2);
	OpHex		(x,	1);
	MakeCode	(x=0X16DAE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16DB2);
	OpHex		(x,	1);
	MakeCode	(x=0X16DB6);
	OpHex		(x,	1);
	MakeCode	(x=0X16DE2);
	OpHex		(x,	1);
	MakeCode	(x=0X16DE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X16E06);
	MakeCode	(0X16E12);
	MakeCode	(0X16E1E);
	MakeCode	(x=0X16E20);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16E26);
	OpOff		(x,	1,	0X10006840);
	OpOff		(x,	129,	0X10006840);
	MakeCode	(x=0X16E2A);
	OpOff		(x,	1,	0X10006840);
	OpOff		(x,	129,	0X10006840);
	MakeCode	(x=0X16E54);
	OpOff		(x,	1,	0X10006840);
	OpOff		(x,	129,	0X10006840);
	MakeCode	(x=0X16E5E);
	OpOff		(x,	1,	0X10006840);
	OpOff		(x,	129,	0X10006840);
	MakeCode	(0X16E72);
	MakeCode	(x=0X16E76);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X16E8A);
	MakeCode	(0X16EBC);
	MakeComm	(0X16EF2,	"priMask");
	MakeByte	(0X16EFE);
	MakeArray	(0X16EFE,	0X2);
	MakeDword	(0X16F00);
	MakeDword	(x=0X16F04);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16F08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X16F0C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X16F10);
	MakeDword	(x=0X16F14);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X16F18);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16F1E);
	OpOff		(x,	1,	0X10006A60);
	OpOff		(x,	129,	0X10006A60);
	MakeCode	(x=0X16F30);
	OpOff		(x,	1,	0X10006A70);
	OpOff		(x,	129,	0X10006A70);
	MakeCode	(0X16F3C);
	MakeCode	(x=0X16F42);
	OpHex		(x,	1);
	MakeCode	(x=0X16F5C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X16F78);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X16F82);
	MakeCode	(x=0X16F86);
	OpHex		(x,	1);
	MakeCode	(0X16FA6);
	MakeName	(0X16FA6,	"UART3_Init");
	MakeCode	(x=0X16FB6);
	OpHex		(x,	1);
	MakeComm	(0X16FBE,	"ClkType");
	MakeCode	(x=0X16FBE);
	OpEnumEx		(x,	1,	GetEnum("CLKPWR_PCLKSEL"),0);
	MakeCode	(0X16FEC);
	MakeCode	(0X16FF6);
	MakeCode	(0X1701C);
	MakeCode	(x=0X17036);
	OpHex		(x,	1);
	MakeCode	(x=0X17054);
	OpHex		(x,	1);
	MakeCode	(x=0X17060);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X17064);
	OpHex		(x,	1);
	MakeCode	(x=0X17068);
	OpHex		(x,	1);
	MakeCode	(x=0X17094);
	OpHex		(x,	1);
	MakeCode	(x=0X1709A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X170B8);
	MakeCode	(0X170C4);
	MakeCode	(0X170D0);
	MakeCode	(x=0X170D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X170DA);
	OpOff		(x,	1,	0X10006A60);
	OpOff		(x,	129,	0X10006A60);
	MakeCode	(x=0X170DE);
	OpOff		(x,	1,	0X10006A60);
	OpOff		(x,	129,	0X10006A60);
	MakeCode	(x=0X17108);
	OpOff		(x,	1,	0X10006A60);
	OpOff		(x,	129,	0X10006A60);
	MakeCode	(x=0X17112);
	OpOff		(x,	1,	0X10006A60);
	OpOff		(x,	129,	0X10006A60);
	MakeComm	(0X1711C,	"priMask");
	MakeCode	(0X17126);
	MakeCode	(x=0X1712A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1713C);
	MakeCode	(0X17172);
	MakeComm	(0X171A8,	"priMask");
	MakeCode	(0X171B4);
	MakeCode	(x=0X171B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X171C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X171C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X171CA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X171D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X171D6);
	MakeCode	(x=0X171E6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X171EA);
	OpHex		(x,	1);
	MakeDword	(x=0X17200);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X17204);
	MakeDword	(0X17208);
	MakeDword	(x=0X1720C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X17210);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X17214);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X17218);
	MakeCode	(0X17232);
	MakeCode	(0X17236);
	MakeCode	(x=0X1723A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X17252);
	MakeComm	(0X17262,	"DivVal");
	MakeCode	(x=0X17262);
	OpEnumEx		(x,	1,	GetEnum("CLKPWR_PCLKSEL_CCLK"),0);
	MakeComm	(0X17264,	"ClkType");
	MakeCode	(x=0X17264);
	OpEnumEx		(x,	1,	GetEnum("CLKPWR_PCLKSEL"),0);
	MakeCode	(x=0X1726A);
	OpOff		(x,	1,	0X40000000);
	OpOff		(x,	129,	0X40000000);
	MakeCode	(0X17270);
	MakeCode	(0X17282);
	MakeCode	(0X17298);
	MakeName	(0X17298,	"WDT_Init");
	MakeComm	(0X1729E,	"DivVal");
	MakeComm	(0X172A0,	"ClkType");
	MakeCode	(x=0X172AA);
	OpOff		(x,	1,	0X40000000);
	OpOff		(x,	129,	0X40000000);
	MakeCode	(x=0X172AC);
	OpHex		(x,	1);
	MakeCode	(x=0X172B0);
	OpOff		(x,	1,	0X40000000);
	OpOff		(x,	129,	0X40000000);
	MakeCode	(x=0X172B2);
	OpOff		(x,	1,	0X40000000);
	OpOff		(x,	129,	0X40000000);
	MakeCode	(x=0X172B6);
	OpOff		(x,	1,	0X40000000);
	OpOff		(x,	129,	0X40000000);
	MakeCode	(x=0X172B8);
	OpEnumEx		(x,	1,	GetEnum("WDT_MODE_OPT"),0);
	MakeCode	(x=0X172BE);
	OpHex		(x,	1);
	MakeCode	(x=0X172C6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X172D4);
	OpOff		(x,	1,	0X40000000);
	OpOff		(x,	129,	0X40000000);
	MakeCode	(x=0X172D8);
	OpOff		(x,	1,	0X40000000);
	OpOff		(x,	129,	0X40000000);
	MakeCode	(0X172DE);
	MakeCode	(x=0X172E6);
	OpOff		(x,	1,	0X40000000);
	OpOff		(x,	129,	0X40000000);
	MakeCode	(x=0X172E8);
	OpHex		(x,	1);
	MakeCode	(x=0X172F2);
	OpHex		(x,	1);
	MakeCode	(0X172FE);
	MakeCode	(0X1730A);
	MakeCode	(x=0X17310);
	OpHex		(x,	1);
	MakeCode	(0X17318);
	MakeCode	(x=0X1731E);
	OpOff		(x,	1,	0X40000000);
	OpOff		(x,	129,	0X40000000);
	MakeCode	(x=0X17324);
	OpHex		(x,	1);
	MakeCode	(0X17336);
	MakeCode	(x=0X1733A);
	OpOff		(x,	1,	0X40000000);
	OpOff		(x,	129,	0X40000000);
	MakeCode	(0X1733E);
	MakeCode	(x=0X17344);
	OpHex		(x,	1);
	MakeCode	(x=0X1734A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X17352);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeByte	(0X1735A);
	MakeArray	(0X1735A,	0X2);
	MakeDword	(0X1735C);
	MakeDword	(0X17360);
	MakeDword	(x=0X17364);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X17368);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1736C);
	MakeCode	(x=0X17376);
	OpStkvar	(x,	1);
	MakeDword	(x=0X1738C);
	OpOff		(x,	0,	0X17376);
	OpOff		(x,	128,	0X17376);
	MakeCode	(0X17390);
	MakeCode	(x=0X17398);
	OpStkvar	(x,	1);
	MakeCode	(x=0X173A8);
	OpStkvar	(x,	1);
	MakeDword	(x=0X173C0);
	OpOff		(x,	0,	0X173A6);
	OpOff		(x,	128,	0X173A6);
	MakeCode	(0X173C4);
	MakeCode	(x=0X173CA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X173D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X173D2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X173E6);
	OpStkvar	(x,	1);
	MakeByte	(0X173EA);
	MakeArray	(0X173EA,	0X2);
	MakeDword	(x=0X173EC);
	OpOff		(x,	0,	0X173D0);
	OpOff		(x,	128,	0X173D0);
	MakeCode	(0X173F0);
	MakeCode	(0X17400);
	MakeCode	(x=0X1740E);
	OpHex		(x,	1);
	MakeCode	(0X17440);
	MakeCode	(0X17446);
	MakeCode	(0X17462);
	MakeCode	(x=0X17464);
	OpHex		(x,	1);
	MakeCode	(0X1746E);
	MakeCode	(x=0X17472);
	OpHex		(x,	1);
	MakeDword	(x=0X17480);
	OpOff		(x,	0,	0X17406);
	OpOff		(x,	128,	0X17406);
	MakeCode	(0X17484);
	MakeCode	(0X174B6);
	MakeCode	(0X174D6);
	MakeCode	(x=0X174DA);
	OpHex		(x,	1);
	MakeCode	(0X17500);
	MakeCode	(x=0X1751C);
	OpHex		(x,	1);
	MakeCode	(0X17522);
	MakeCode	(x=0X17558);
	OpHex		(x,	1);
	MakeCode	(x=0X17566);
	OpHex		(x,	1);
	MakeCode	(x=0X17570);
	OpHex		(x,	1);
	MakeCode	(0X1758E);
	MakeCode	(0X17590);
	MakeCode	(0X175B2);
	MakeCode	(x=0X175C8);
	OpHex		(x,	1);
	MakeCode	(x=0X175E2);
	OpHex		(x,	1);
	MakeCode	(0X175EC);
	MakeCode	(0X175F0);
	MakeCode	(0X175F4);
	MakeCode	(0X175F8);
	MakeCode	(0X175FE);
	MakeCode	(0X17602);
	MakeDword	(x=0X17608);
	OpOff		(x,	0,	0X17498);
	OpOff		(x,	128,	0X17498);
	MakeCode	(0X1760C);
	MakeCode	(x=0X17612);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17614);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17616);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17618);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1761E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17622);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17628);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17630);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17632);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17634);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1763C);
	OpStkvar	(x,	1);
	MakeDword	(x=0X17640);
	OpOff		(x,	0,	0X1762A);
	OpOff		(x,	128,	0X1762A);
	MakeDword	(x=0X17644);
	OpOff		(x,	0,	0X17630);
	OpOff		(x,	128,	0X17630);
	MakeCode	(0X17648);
	MakeCode	(x=0X17660);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17678);
	OpHex		(x,	1);
	MakeCode	(0X17690);
	MakeCode	(x=0X17698);
	OpHex		(x,	1);
	MakeCode	(x=0X1769E);
	OpStkvar	(x,	1);
	MakeCode	(0X176BA);
	MakeCode	(x=0X176BE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X176C2);
	OpHex		(x,	1);
	MakeCode	(0X176E2);
	MakeCode	(x=0X176F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X176F6);
	OpHex		(x,	1);
	MakeCode	(0X17702);
	MakeCode	(0X17706);
	MakeCode	(0X1770C);
	MakeCode	(x=0X17714);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17718);
	OpHex		(x,	1);
	MakeCode	(x=0X17732);
	OpStkvar	(x,	1);
	MakeCode	(0X17740);
	MakeCode	(0X17752);
	MakeCode	(0X17764);
	MakeCode	(0X1776C);
	MakeCode	(0X17770);
	MakeCode	(0X17782);
	MakeCode	(0X1778C);
	MakeCode	(0X17794);
	MakeCode	(0X177A8);
	MakeCode	(0X177CC);
	MakeCode	(0X177D2);
	MakeCode	(0X177DC);
	MakeCode	(0X177E0);
	MakeCode	(0X17800);
	MakeCode	(0X17806);
	MakeCode	(0X1782A);
	MakeCode	(0X1782E);
	MakeCode	(0X17836);
	MakeCode	(0X1783E);
	MakeCode	(x=0X17878);
	OpHex		(x,	1);
	MakeCode	(x=0X1787C);
	OpHex		(x,	1);
	MakeCode	(0X17890);
	MakeCode	(0X178A0);
	MakeCode	(0X178A6);
	MakeCode	(0X178AC);
	MakeCode	(0X178D4);
	MakeCode	(x=0X178DA);
	OpHex		(x,	1);
	MakeCode	(x=0X1790C);
	OpHex		(x,	1);
	MakeCode	(0X1792A);
	MakeCode	(0X1795E);
	MakeCode	(x=0X179C2);
	OpHex		(x,	1);
	MakeCode	(0X179D2);
	MakeCode	(x=0X179DC);
	OpHex		(x,	1);
	MakeCode	(0X17A00);
	MakeCode	(0X17A16);
	MakeCode	(x=0X17A42);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17A58);
	OpHex		(x,	1);
	MakeCode	(0X17A64);
	MakeCode	(0X17A6E);
	MakeCode	(0X17A7A);
	MakeCode	(0X17A8A);
	MakeCode	(0X17A92);
	MakeCode	(0X17AA6);
	MakeCode	(0X17AB4);
	MakeCode	(0X17AC8);
	MakeCode	(0X17AD2);
	MakeCode	(0X17ADA);
	MakeCode	(0X17AE4);
	MakeCode	(0X17AEC);
	MakeCode	(0X17B02);
	MakeCode	(0X17B06);
	MakeCode	(0X17B28);
	MakeCode	(0X17B3E);
	MakeCode	(x=0X17B56);
	OpHex		(x,	1);
	MakeCode	(0X17B5E);
	MakeCode	(0X17B68);
	MakeCode	(0X17B86);
	MakeCode	(0X17BAA);
	MakeCode	(0X17BC2);
	MakeCode	(0X17BEC);
	MakeCode	(0X17BF0);
	MakeCode	(x=0X17BFE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X17C0C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X17C10);
	MakeCode	(x=0X17C16);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X17C1A);
	MakeCode	(x=0X17C1E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X17C24);
	MakeCode	(0X17C32);
	MakeDword	(0X17C58);
	MakeByte	(0X17C5C);
	MakeByte	(0X17C5D);
	MakeArray	(0X17C5D,	0X3);
	MakeByte	(0X17C60);
	MakeByte	(0X17C61);
	MakeArray	(0X17C61,	0X3);
	MakeByte	(0X17C64);
	MakeByte	(0X17C65);
	MakeArray	(0X17C65,	0X3);
	MakeCode	(0X17C68);
	MakeCode	(0X17C76);
	MakeCode	(0X17C7E);
	MakeCode	(0X17C8A);
	MakeCode	(0X17C90);
	MakeCode	(0X17C9A);
	MakeCode	(x=0X17CA4);
	OpStkvar	(x,	1);
	MakeByte	(0X17CBA);
	MakeArray	(0X17CBA,	0X2);
	MakeDword	(x=0X17CBC);
	OpOff		(x,	0,	0X17CAC);
	OpOff		(x,	128,	0X17CAC);
	MakeCode	(0X17CC0);
	MakeCode	(0X17CCA);
	MakeByte	(0X17CDA);
	MakeArray	(0X17CDA,	0X2);
	MakeCode	(0X17CDC);
	MakeCode	(0X17CFA);
	MakeCode	(x=0X17D00);
	OpStkvar	(x,	1);
	MakeCode	(0X17D4C);
	MakeCode	(x=0X17D52);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17D62);
	OpStkvar	(x,	1);
	MakeCode	(0X17D68);
	MakeByte	(0X17D92);
	MakeArray	(0X17D92,	0X2);
	MakeDword	(x=0X17D94);
	OpOff		(x,	0,	0X17CEE);
	OpOff		(x,	128,	0X17CEE);
	MakeCode	(0X17D98);
	MakeCode	(x=0X17DA0);
	OpHex		(x,	1);
	MakeCode	(x=0X17DAC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X17DC2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X17DC6);
	MakeCode	(x=0X17DCE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X17DD2);
	MakeCode	(x=0X17DD6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X17DE4);
	MakeDword	(0X17E04);
	MakeByte	(0X17E08);
	MakeByte	(0X17E09);
	MakeArray	(0X17E09,	0X3);
	MakeByte	(0X17E0C);
	MakeByte	(0X17E0D);
	MakeArray	(0X17E0D,	0X3);
	MakeByte	(0X17E10);
	MakeByte	(0X17E11);
	MakeArray	(0X17E11,	0X3);
	MakeCode	(0X17E14);
	MakeCode	(x=0X17E1E);
	OpHex		(x,	1);
	MakeCode	(x=0X17E3A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X17E40);
	OpHex		(x,	1);
	MakeCode	(x=0X17E4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X17E58);
	MakeCode	(0X17E70);
	MakeCode	(x=0X17E72);
	OpHex		(x,	1);
	MakeDword	(0X17E7C);
	MakeByte	(0X17E80);
	MakeByte	(0X17E81);
	MakeArray	(0X17E81,	0X3);
	MakeCode	(0X17E84);
	MakeCode	(x=0X17E8A);
	OpHex		(x,	1);
	MakeCode	(0X17EA0);
	MakeCode	(0X17EBC);
	MakeCode	(0X17EC0);
	MakeCode	(0X17EC4);
	MakeCode	(0X17F1C);
	MakeCode	(0X17F20);
	MakeCode	(x=0X17F42);
	OpStkvar	(x,	1);
	MakeCode	(0X17F62);
	MakeCode	(0X17F70);
	MakeCode	(0X17F92);
	MakeCode	(0X17F9C);
	MakeCode	(x=0X17FA2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17FA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17FAE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17FBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17FCA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17FD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17FE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17FE2);
	OpHex		(x,	1);
	MakeCode	(x=0X17FEA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17FF6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X17FF8);
	OpHex		(x,	1);
	MakeCode	(x=0X18000);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1800C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1800E);
	OpHex		(x,	1);
	MakeCode	(x=0X18016);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18022);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18024);
	OpHex		(x,	1);
	MakeCode	(x=0X1802C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18034);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18040);
	OpStkvar	(x,	1);
	MakeCode	(0X1804A);
	MakeCode	(x=0X18058);
	OpHex		(x,	1);
	MakeCode	(x=0X18060);
	OpHex		(x,	1);
	MakeCode	(x=0X1808C);
	OpHex		(x,	1);
	MakeCode	(0X18096);
	MakeCode	(0X1809C);
	MakeCode	(x=0X180B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X180C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X180C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X180DC);
	OpHex		(x,	1);
	MakeCode	(0X180F0);
	MakeCode	(x=0X180F6);
	OpHex		(x,	1);
	MakeCode	(x=0X180FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18108);
	OpStkvar	(x,	1);
	MakeCode	(0X18110);
	MakeCode	(x=0X18118);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1811C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1813C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1813E);
	OpStkvar	(x,	1);
	MakeCode	(0X18156);
	MakeCode	(x=0X18158);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18160);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18164);
	OpHex		(x,	1);
	MakeCode	(x=0X1816A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18170);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18186);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18198);
	OpStkvar	(x,	1);
	MakeCode	(x=0X181A2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X181A8);
	OpHex		(x,	1);
	MakeCode	(x=0X181AE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X181B6);
	OpHex		(x,	1);
	MakeCode	(x=0X181C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X181CE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X181DA);
	OpHex		(x,	1);
	MakeCode	(0X181E0);
	MakeCode	(x=0X181EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X181F0);
	OpHex		(x,	1);
	MakeCode	(0X18208);
	MakeCode	(x=0X18216);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1821E);
	OpStkvar	(x,	1);
	MakeCode	(0X1822C);
	MakeCode	(x=0X18244);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18248);
	OpHex		(x,	1);
	MakeCode	(x=0X1825E);
	OpHex		(x,	1);
	MakeCode	(x=0X18264);
	OpStkvar	(x,	1);
	MakeCode	(0X18276);
	MakeCode	(x=0X1827C);
	OpStkvar	(x,	1);
	MakeCode	(0X18282);
	MakeCode	(x=0X18284);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1828A);
	OpHex		(x,	1);
	MakeCode	(x=0X18294);
	OpHex		(x,	1);
	MakeCode	(x=0X1829E);
	OpStkvar	(x,	1);
	MakeCode	(0X182AA);
	MakeCode	(0X182B2);
	MakeCode	(x=0X182BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X182C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X182D6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X182E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X182EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X182EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X182EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X182F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18300);
	OpHex		(x,	1);
	MakeCode	(x=0X1831C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1832A);
	OpStkvar	(x,	1);
	MakeDword	(x=0X18338);
	OpOff		(x,	0,	0X17F7C);
	OpOff		(x,	128,	0X17F7C);
	MakeDword	(x=0X1833C);
	OpOff		(x,	0,	0X18086);
	OpOff		(x,	128,	0X18086);
	MakeDword	(0X18340);
	MakeCode	(0X18344);
	MakeCode	(0X18350);
	MakeDword	(x=0X18368);
	OpOff		(x,	0,	0X18358);
	OpOff		(x,	128,	0X18358);
	MakeDword	(x=0X1836C);
	OpOff		(x,	0,	0X1835E);
	OpOff		(x,	128,	0X1835E);
	MakeCode	(0X18370);
	MakeCode	(0X18386);
	MakeCode	(0X1838E);
	MakeCode	(0X183AA);
	MakeCode	(x=0X183B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X183B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X183B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X183BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X183C0);
	MakeCode	(0X18442);
	MakeCode	(0X1844A);
	MakeCode	(x=0X18456);
	OpHex		(x,	1);
	MakeCode	(0X1845C);
	MakeCode	(0X1845E);
	MakeCode	(x=0X18470);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18474);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1848C);
	OpHex		(x,	1);
	MakeCode	(x=0X184AA);
	OpStkvar	(x,	1);
	MakeCode	(0X184D0);
	MakeCode	(0X184DE);
	MakeCode	(0X184E2);
	MakeCode	(x=0X184F2);
	OpStkvar	(x,	1);
	MakeCode	(0X18502);
	MakeCode	(0X18508);
	MakeCode	(x=0X1850E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18514);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1851A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18522);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18532);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18534);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18542);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18544);
	OpStkvar	(x,	1);
	MakeCode	(0X1854E);
	MakeCode	(x=0X18556);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18558);
	OpStkvar	(x,	1);
	MakeCode	(0X18572);
	MakeCode	(x=0X1857C);
	OpStkvar	(x,	1);
	MakeCode	(0X18582);
	MakeCode	(0X185A0);
	MakeCode	(x=0X185AC);
	OpStkvar	(x,	1);
	MakeCode	(0X185B2);
	MakeCode	(x=0X185CA);
	OpStkvar	(x,	1);
	MakeCode	(0X185D0);
	MakeCode	(0X185D6);
	MakeCode	(x=0X185EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X185F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X185F6);
	OpStkvar	(x,	1);
	MakeCode	(0X18602);
	MakeCode	(0X1860A);
	MakeCode	(x=0X18614);
	OpHex		(x,	1);
	MakeCode	(x=0X18628);
	OpStkvar	(x,	1);
	MakeCode	(0X18632);
	MakeCode	(0X1863C);
	MakeCode	(x=0X18644);
	OpStkvar	(x,	1);
	MakeCode	(0X18658);
	MakeCode	(0X18662);
	MakeCode	(0X1867A);
	MakeCode	(x=0X18680);
	OpStkvar	(x,	1);
	MakeCode	(0X18688);
	MakeCode	(x=0X1868C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1868E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18690);
	OpStkvar	(x,	1);
	MakeCode	(0X186A4);
	MakeCode	(x=0X186A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X186AE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X186B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X186B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X186BC);
	OpStkvar	(x,	1);
	MakeCode	(0X186DE);
	MakeCode	(x=0X186EE);
	OpStkvar	(x,	1);
	MakeCode	(0X186F8);
	MakeCode	(x=0X186FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X186FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X186FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1871A);
	OpStkvar	(x,	1);
	MakeCode	(0X1873A);
	MakeCode	(0X1873E);
	MakeCode	(0X18748);
	MakeCode	(x=0X1876E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18772);
	OpStkvar	(x,	1);
	MakeCode	(0X187A8);
	MakeCode	(0X187B8);
	MakeCode	(x=0X187C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X187C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X187EC);
	OpStkvar	(x,	1);
	MakeCode	(0X1880A);
	MakeCode	(x=0X18812);
	OpStkvar	(x,	1);
	MakeCode	(0X18818);
	MakeCode	(0X18852);
	MakeCode	(0X18876);
	MakeCode	(0X18882);
	MakeCode	(0X1888A);
	MakeCode	(0X1889A);
	MakeCode	(0X188A2);
	MakeCode	(0X188AE);
	MakeCode	(0X188B6);
	MakeCode	(0X188C6);
	MakeByte	(0X188CE);
	MakeArray	(0X188CE,	0X2);
	MakeCode	(0X188D0);
	MakeCode	(x=0X188E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X188E6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X188EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18900);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18912);
	OpStkvar	(x,	1);
	MakeCode	(0X18918);
	MakeCode	(x=0X1891C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1892A);
	OpStkvar	(x,	1);
	MakeCode	(0X18930);
	MakeCode	(x=0X18932);
	OpStkvar	(x,	1);
	MakeCode	(0X18940);
	MakeCode	(x=0X18942);
	OpStkvar	(x,	1);
	MakeCode	(0X18952);
	MakeCode	(x=0X18954);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18964);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18972);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18990);
	OpHex		(x,	1);
	MakeCode	(0X18996);
	MakeCode	(0X189B8);
	MakeCode	(x=0X189BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X189C4);
	OpHex		(x,	1);
	MakeCode	(x=0X189CA);
	OpHex		(x,	1);
	MakeCode	(x=0X189D0);
	OpHex		(x,	1);
	MakeCode	(0X189D6);
	MakeCode	(x=0X189D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X189E2);
	OpHex		(x,	1);
	MakeCode	(x=0X189E8);
	OpHex		(x,	1);
	MakeCode	(x=0X189EE);
	OpStkvar	(x,	1);
	MakeCode	(0X18A14);
	MakeCode	(0X18A1E);
	MakeCode	(0X18A30);
	MakeCode	(0X18A32);
	MakeCode	(0X18A4A);
	MakeCode	(0X18A5C);
	MakeCode	(x=0X18A5E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18A6C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18A78);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18A88);
	OpHex		(x,	1);
	MakeCode	(0X18A9A);
	MakeCode	(0X18AB0);
	MakeCode	(0X18AB8);
	MakeCode	(0X18AC4);
	MakeCode	(x=0X18AC8);
	OpHex		(x,	1);
	MakeCode	(0X18ADA);
	MakeCode	(x=0X18AE6);
	OpHex		(x,	1);
	MakeCode	(x=0X18AF8);
	OpHex		(x,	1);
	MakeCode	(x=0X18B06);
	OpStkvar	(x,	1);
	MakeCode	(0X18B12);
	MakeCode	(0X18B14);
	MakeCode	(x=0X18B18);
	OpStkvar	(x,	1);
	MakeCode	(0X18B24);
	MakeCode	(0X18B3A);
	MakeCode	(0X18B46);
	MakeCode	(x=0X18B4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18B62);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18B6E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18B86);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18B98);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18BAA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18BBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18BC4);
	OpStkvar	(x,	1);
	MakeCode	(0X18BD4);
	MakeCode	(x=0X18BD6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18BDE);
	OpHex		(x,	1);
	MakeCode	(0X18BF4);
	MakeCode	(x=0X18BF6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18C00);
	OpStkvar	(x,	1);
	MakeCode	(0X18C0A);
	MakeCode	(0X18C10);
	MakeCode	(x=0X18C1C);
	OpStkvar	(x,	1);
	MakeCode	(0X18C2A);
	MakeCode	(0X18C2E);
	MakeCode	(x=0X18C3A);
	OpStkvar	(x,	1);
	MakeByte	(0X18C3E);
	MakeArray	(0X18C3E,	0X2);
	MakeDword	(0X18C40);
	MakeCode	(0X18C44);
	MakeCode	(x=0X18C5E);
	OpStkvar	(x,	1);
	MakeCode	(0X18C88);
	MakeCode	(0X18C9A);
	MakeCode	(0X18CC2);
	MakeCode	(x=0X18CCA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18CDE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18CE2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18CE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18CEA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18D00);
	OpStkvar	(x,	1);
	MakeCode	(0X18D0A);
	MakeDword	(x=0X18D1C);
	OpOff		(x,	0,	0X18CC0);
	OpOff		(x,	128,	0X18CC0);
	MakeCode	(0X18D20);
	MakeCode	(0X18D44);
	MakeCode	(0X18D5A);
	MakeCode	(0X18D60);
	MakeByte	(0X18D6A);
	MakeArray	(0X18D6A,	0X2);
	MakeByte	(0X18D6C);
	MakeByte	(0X18D6D);
	MakeArray	(0X18D6D,	0X3);
	MakeCode	(0X18D70);
	MakeCode	(x=0X18D7E);
	OpHex		(x,	1);
	MakeCode	(x=0X18D86);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X18D8A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X18D8E);
	MakeCode	(x=0X18D90);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X18D94);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X18D96);
	OpHex		(x,	1);
	MakeCode	(0X18DC4);
	MakeCode	(0X18DC8);
	MakeStr		(0X18DE0,	0X18DE4);
	MakeName	(0X18DE0,	"aNan_0");
	MakeStr		(0X18DE4,	0X18DE8);
	MakeName	(0X18DE4,	"aNan");
	MakeStr		(0X18DE8,	0X18DEC);
	MakeName	(0X18DE8,	"aInf");
	MakeStr		(0X18DEC,	0X18DF0);
	MakeName	(0X18DEC,	"aInf_0");
	MakeCode	(0X18DF0);
	MakeCode	(x=0X18E08);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18E10);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18E14);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18E1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18E22);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18E2A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18E32);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18E46);
	OpStkvar	(x,	1);
	MakeCode	(0X18E64);
	MakeCode	(x=0X18E66);
	OpStkvar	(x,	1);
	MakeCode	(0X18E6A);
	MakeCode	(x=0X18E6C);
	OpHex		(x,	1);
	MakeCode	(x=0X18E72);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18E74);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18E7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18E8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18E90);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18E98);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18EA4);
	OpStkvar	(x,	1);
	MakeCode	(0X18EB0);
	MakeCode	(x=0X18EB2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18EBA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18EC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18ED4);
	OpStkvar	(x,	1);
	MakeCode	(0X18EE2);
	MakeCode	(x=0X18EEE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18EF2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18F12);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18F20);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18F24);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18F2E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18F44);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18F48);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18F4A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18F56);
	OpHex		(x,	1);
	MakeCode	(x=0X18F60);
	OpStkvar	(x,	1);
	MakeCode	(0X18F64);
	MakeCode	(x=0X18F6E);
	OpHex		(x,	1);
	MakeCode	(x=0X18F7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18F7E);
	OpHex		(x,	1);
	MakeCode	(0X18F8C);
	MakeCode	(0X18FC6);
	MakeCode	(x=0X18FCA);
	OpStkvar	(x,	1);
	MakeCode	(0X18FDC);
	MakeCode	(x=0X18FDE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18FF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X18FF2);
	OpHex		(x,	1);
	MakeCode	(0X19014);
	MakeCode	(x=0X1901A);
	OpStkvar	(x,	1);
	MakeCode	(0X1903A);
	MakeCode	(x=0X1905C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1905E);
	OpHex		(x,	1);
	MakeCode	(0X1906A);
	MakeCode	(0X19070);
	MakeCode	(0X1907A);
	MakeCode	(x=0X19092);
	OpStkvar	(x,	1);
	MakeCode	(x=0X19096);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1909A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1909E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X190BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X190BE);
	OpHex		(x,	1);
	MakeCode	(x=0X190C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X190DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X190E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X190EC);
	OpStkvar	(x,	1);
	MakeByte	(0X190FA);
	MakeArray	(0X190FA,	0X2);
	MakeDword	(0X190FC);
	MakeDword	(0X19100);
	MakeDword	(0X19104);
	MakeCode	(0X19108);
	MakeCode	(x=0X19126);
	OpHex		(x,	1);
	MakeCode	(x=0X19130);
	OpHex		(x,	1);
	MakeCode	(x=0X19136);
	OpStkvar	(x,	1);
	MakeCode	(x=0X19140);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1914C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1915E);
	OpHex		(x,	1);
	MakeCode	(x=0X19168);
	OpStkvar	(x,	1);
	MakeCode	(0X1917E);
	MakeCode	(0X19190);
	MakeCode	(x=0X19192);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1919C);
	OpHex		(x,	1);
	MakeCode	(x=0X191A6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X191B0);
	OpHex		(x,	1);
	MakeCode	(x=0X191BA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X191C2);
	OpHex		(x,	1);
	MakeCode	(x=0X191C6);
	OpHex		(x,	1);
	MakeCode	(x=0X191D6);
	OpStkvar	(x,	1);
	MakeCode	(0X191E2);
	MakeCode	(x=0X191E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X191F4);
	OpStkvar	(x,	1);
	MakeCode	(0X191FA);
	MakeCode	(x=0X19206);
	OpHex		(x,	1);
	MakeCode	(x=0X1920E);
	OpStkvar	(x,	1);
	MakeCode	(0X1921C);
	MakeDword	(0X1922C);
	MakeStr		(0X19230,	0X19239);
	MakeName	(0X19230,	"aInfinity");
	MakeByte	(0X19239);
	MakeArray	(0X19239,	0X3);
	MakeCode	(0X1923C);
	MakeByte	(0X1924E);
	MakeArray	(0X1924E,	0X2);
	MakeCode	(0X19250);
	MakeByte	(0X192A2);
	MakeArray	(0X192A2,	0X2);
	MakeCode	(0X192A4);
	MakeCode	(x=0X192AC);
	OpHex		(x,	1);
	MakeCode	(0X192D0);
	MakeCode	(0X192EC);
	MakeByte	(0X192F6);
	MakeArray	(0X192F6,	0X2);
	MakeCode	(x=0X192F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X19300);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X19304);
	MakeCode	(0X19306);
	MakeCode	(x=0X1930C);
	OpHex		(x,	1);
	MakeCode	(x=0X1932C);
	OpHex		(x,	1);
	MakeCode	(x=0X1933E);
	OpHex		(x,	1);
	MakeCode	(0X19344);
	MakeCode	(x=0X1938A);
	OpHex		(x,	1);
	MakeCode	(x=0X19392);
	OpHex		(x,	1);
	MakeCode	(x=0X193EA);
	OpHex		(x,	1);
	MakeCode	(x=0X193F2);
	OpHex		(x,	1);
	MakeCode	(x=0X193FE);
	OpHex		(x,	1);
	MakeCode	(x=0X1941C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X194F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X19672);
	OpHex		(x,	1);
	MakeCode	(0X1968C);
	MakeByte	(0X196A2);
	MakeArray	(0X196A2,	0X81);
	MakeByte	(0X19723);
	MakeCode	(0X19724);
	MakeCode	(x=0X1974A);
	OpHex		(x,	1);
	MakeCode	(x=0X19752);
	OpHex		(x,	1);
	MakeCode	(0X19768);
	MakeDword	(0X19774);
	MakeCode	(0X19778);
	MakeCode	(x=0X197BA);
	OpHex		(x,	1);
	MakeCode	(0X197C4);
	MakeCode	(0X197CA);
	MakeCode	(0X19818);
	MakeCode	(0X1983E);
	MakeCode	(0X19866);
	MakeCode	(0X1988E);
	MakeCode	(x=0X1989C);
	OpHex		(x,	1);
	MakeCode	(x=0X198A2);
	OpHex		(x,	1);
	MakeCode	(0X198B6);
	MakeCode	(x=0X198C4);
	OpHex		(x,	1);
	MakeCode	(x=0X198CA);
	OpHex		(x,	1);
	MakeCode	(x=0X198DE);
	OpHex		(x,	1);
	MakeCode	(x=0X198E6);
	OpHex		(x,	1);
	MakeCode	(x=0X198F2);
	OpHex		(x,	1);
	MakeCode	(x=0X198FA);
	OpHex		(x,	1);
	MakeCode	(x=0X19902);
	OpHex		(x,	1);
	MakeCode	(0X199E8);
	MakeCode	(0X199F8);
	MakeCode	(x=0X19A68);
	OpHex		(x,	1);
	MakeCode	(0X19ADE);
	MakeByte	(0X19B22);
	MakeArray	(0X19B22,	0X2);
	MakeCode	(0X19B24);
	MakeName	(0X19B24,	"OSStartHighRdy");
	MakeCode	(x=0X19B32);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19B3A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X19B46);
	MakeName	(0X19B46,	"OS_CPU_PendSVHandler");
	MakeCode	(x=0X19B54);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19B60);
	OpStkvar	(x,	1);
	MakeCode	(x=0X19B64);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19B66);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19B6C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19B6E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19B80);
	OpHex		(x,	1);
	MakeDword	(x=0X19B88);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X19B8C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X19B90);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X19B94);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X19B98);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X19B9C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X19BA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X19BA4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeByte	(0X19BA8);
	MakeByte	(0X19BA9);
	MakeArray	(0X19BA9,	0X3);
	MakeByte	(0X19BAC);
	MakeByte	(0X19BAD);
	MakeArray	(0X19BAD,	0X3);
	MakeDword	(x=0X19BB0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X19BB4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X19BB8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19BBE);
	OpHex		(x,	1);
	MakeCode	(x=0X19BC2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19BC4);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X19BC8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19BD0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19BD4);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X19BDE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X19BE6);
	MakeCode	(0X19BEC);
	MakeCode	(0X19C04);
	MakeCode	(0X19C0A);
	MakeCode	(0X19C2A);
	MakeByte	(0X19C2E);
	MakeArray	(0X19C2E,	0X2);
	MakeDword	(x=0X19C30);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X19C34);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X19C38);
	MakeDword	(0X19C3C);
	MakeCode	(0X19C40);
	MakeCode	(x=0X19C42);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19C44);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19C4C);
	OpHex		(x,	1);
	MakeCode	(x=0X19C52);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19C58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19C5A);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X19C5C);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X19C68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X19C70);
	MakeCode	(x=0X19C72);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X19C7C);
	OpHex		(x,	1);
	MakeCode	(x=0X19C84);
	OpHex		(x,	1);
	MakeCode	(0X19C90);
	MakeCode	(x=0X19C9A);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X19CA0);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(0X19CB0);
	MakeDword	(x=0X19CB4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X19CB8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X19CBC);
	MakeCode	(x=0X19CBE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19CC6);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X19CC8);
	OpHex		(x,	1);
	MakeCode	(0X19CDC);
	MakeCode	(x=0X19CE8);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X19CEA);
	OpHex		(x,	1);
	MakeCode	(0X19CF0);
	MakeCode	(x=0X19CF6);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X19CF8);
	OpHex		(x,	1);
	MakeCode	(x=0X19CFC);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X19D00);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X19D02);
	OpHex		(x,	1);
	MakeCode	(x=0X19D0A);
	OpHex		(x,	1);
	MakeCode	(0X19D16);
	MakeCode	(x=0X19D1A);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X19D22);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(0X19D2E);
	MakeCode	(x=0X19D36);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X19D3C);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X19D4C);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X19D66);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X19D6A);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeDword	(x=0X19D70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X19D74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X19D78);
	MakeCode	(0X19D7C);
	MakeCode	(x=0X19D80);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19D86);
	OpHex		(x,	1);
	MakeCode	(x=0X19D8C);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X19D8E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X19DA8);
	MakeCode	(x=0X19DB8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19DBC);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X19DCC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19DFA);
	OpHex		(x,	1);
	MakeCode	(x=0X19E22);
	OpHex		(x,	1);
	MakeCode	(x=0X19E28);
	OpHex		(x,	1);
	MakeCode	(0X19E30);
	MakeCode	(0X19E34);
	MakeCode	(0X19E38);
	MakeCode	(x=0X19E3C);
	OpHex		(x,	1);
	MakeCode	(x=0X19E44);
	OpHex		(x,	1);
	MakeCode	(0X19E4E);
	MakeCode	(0X19E7A);
	MakeCode	(0X19E7C);
	MakeCode	(0X19E7E);
	MakeCode	(x=0X19EA6);
	OpHex		(x,	1);
	MakeCode	(x=0X19EC6);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19ECC);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(0X19ED8);
	MakeDword	(x=0X19EDC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X19EE0);
	MakeCode	(0X19EE4);
	MakeCode	(x=0X19EE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19EF2);
	OpHex		(x,	1);
	MakeCode	(x=0X19F02);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19F0A);
	OpOff		(x,	1,	0X10000540);
	OpOff		(x,	129,	0X10000540);
	MakeCode	(x=0X19F16);
	OpStkvar	(x,	1);
	MakeCode	(0X19F1A);
	MakeCode	(0X19F2A);
	MakeCode	(x=0X19F38);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19F3E);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X19F48);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X19F50);
	OpStkvar	(x,	1);
	MakeCode	(x=0X19F52);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19F5E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X19F60);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(x=0X19F68);
	OpHex		(x,	1);
	MakeCode	(x=0X19F72);
	OpHex		(x,	1);
	MakeCode	(0X19F7E);
	MakeCode	(x=0X19F84);
	OpOff		(x,	1,	0X10000560);
	OpOff		(x,	129,	0X10000560);
	MakeCode	(0X19FB6);
	MakeCode	(x=0X19FE4);
	OpStkvar	(x,	1);
	MakeDword	(x=0X19FE8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X19FEC);
	MakeCode	(0X19FF0);
	MakeCode	(x=0X19FFE);
	OpHex		(x,	1);
	MakeCode	(x=0X1A00C);
	OpHex		(x,	1);
	MakeCode	(0X1A018);
	MakeCode	(x=0X1A026);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A028);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A02A);
	OpHex		(x,	1);
	MakeCode	(x=0X1A034);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A042);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1A04C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A056);
	OpStkvar	(x,	1);
	MakeCode	(0X1A072);
	MakeCode	(0X1A090);
	MakeCode	(0X1A0A6);
	MakeCode	(0X1A0C6);
	MakeCode	(x=0X1A0CA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A0CE);
	OpHex		(x,	1);
	MakeCode	(x=0X1A0EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A118);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A12A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A146);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A14A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A15C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A15E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A162);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A172);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A178);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A17A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A182);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A184);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A194);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A19E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A1A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A1AE);
	OpHex		(x,	1);
	MakeCode	(x=0X1A1B4);
	OpStkvar	(x,	1);
	MakeCode	(0X1A1BE);
	MakeCode	(0X1A1C0);
	MakeCode	(x=0X1A1C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A1D4);
	OpHex		(x,	1);
	MakeCode	(x=0X1A1DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A1E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A1E2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A1E4);
	OpHex		(x,	1);
	MakeCode	(x=0X1A202);
	OpStkvar	(x,	1);
	MakeCode	(0X1A20C);
	MakeCode	(0X1A24C);
	MakeCode	(0X1A254);
	MakeCode	(x=0X1A268);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A26A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A272);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A274);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A284);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A2BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A2CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A2DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A2F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A336);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A338);
	OpHex		(x,	1);
	MakeCode	(x=0X1A33E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A340);
	OpHex		(x,	1);
	MakeCode	(x=0X1A346);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A34C);
	OpStkvar	(x,	1);
	MakeDword	(0X1A354);
	MakeDword	(x=0X1A358);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1A35C);
	MakeDword	(0X1A360);
	MakeDword	(0X1A364);
	MakeDword	(0X1A368);
	MakeDword	(0X1A36C);
	MakeDword	(0X1A370);
	MakeDword	(0X1A374);
	MakeDword	(0X1A378);
	MakeDword	(0X1A37C);
	MakeDword	(0X1A380);
	MakeDword	(x=0X1A384);
	OpOff		(x,	0,	0X1A144);
	OpOff		(x,	128,	0X1A144);
	MakeDword	(x=0X1A388);
	OpOff		(x,	0,	0X1A1F8);
	OpOff		(x,	128,	0X1A1F8);
	MakeDword	(x=0X1A38C);
	OpOff		(x,	0,	0X1A216);
	OpOff		(x,	128,	0X1A216);
	MakeDword	(0X1A390);
	MakeDword	(0X1A394);
	MakeDword	(0X1A398);
	MakeDword	(0X1A39C);
	MakeCode	(0X1A3A0);
	MakeCode	(x=0X1A3A4);
	OpHex		(x,	1);
	MakeCode	(0X1A43E);
	MakeByte	(0X1A486);
	MakeArray	(0X1A486,	0X2);
	MakeDword	(0X1A488);
	MakeDword	(x=0X1A48C);
	OpOff		(x,	0,	0X1A3E0);
	OpOff		(x,	128,	0X1A3E0);
	MakeDword	(0X1A490);
	MakeDword	(0X1A494);
	MakeDword	(0X1A498);
	MakeCode	(0X1A49C);
	MakeCode	(x=0X1A4B0);
	OpHex		(x,	1);
	MakeCode	(x=0X1A4CC);
	OpHex		(x,	1);
	MakeByte	(0X1A546);
	MakeArray	(0X1A546,	0X2);
	MakeCode	(0X1A548);
	MakeCode	(x=0X1A54E);
	OpHex		(x,	1);
	MakeCode	(0X1A574);
	MakeCode	(x=0X1A59E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A5A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A5BA);
	OpStkvar	(x,	1);
	MakeCode	(0X1A5FE);
	MakeDword	(x=0X1A628);
	OpOff		(x,	0,	0X1A59A);
	OpOff		(x,	128,	0X1A59A);
	MakeDword	(0X1A62C);
	MakeDword	(0X1A630);
	MakeCode	(0X1A634);
	MakeDword	(0X1A640);
	MakeCode	(0X1A644);
	MakeCode	(0X1A64A);
	MakeCode	(0X1A64E);
	MakeCode	(0X1A65A);
	MakeCode	(0X1A668);
	MakeByte	(0X1A672);
	MakeArray	(0X1A672,	0X2);
	MakeDword	(0X1A674);
	MakeCode	(0X1A678);
	MakeCode	(0X1A682);
	MakeCode	(0X1A688);
	MakeCode	(0X1A690);
	MakeCode	(0X1A6A0);
	MakeCode	(x=0X1A6AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A6B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A6E6);
	OpHex		(x,	1);
	MakeCode	(x=0X1A6F6);
	OpStkvar	(x,	1);
	MakeCode	(0X1A718);
	MakeDword	(0X1A724);
	MakeCode	(0X1A728);
	MakeCode	(0X1A73E);
	MakeCode	(0X1A748);
	MakeCode	(0X1A74C);
	MakeCode	(x=0X1A750);
	OpHex		(x,	1);
	MakeCode	(0X1A778);
	MakeCode	(x=0X1A782);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A788);
	OpHex		(x,	1);
	MakeCode	(x=0X1A78E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A7A2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A7A6);
	OpStkvar	(x,	1);
	MakeCode	(0X1A7B4);
	MakeCode	(x=0X1A7BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A7C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A7CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A7DA);
	OpHex		(x,	1);
	MakeDword	(0X1A7E0);
	MakeDword	(0X1A7E4);
	MakeCode	(0X1A7E8);
	MakeCode	(x=0X1A7F2);
	OpHex		(x,	1);
	MakeCode	(x=0X1A818);
	OpHex		(x,	1);
	MakeCode	(x=0X1A82C);
	OpHex		(x,	1);
	MakeCode	(x=0X1A830);
	OpHex		(x,	1);
	MakeDword	(0X1A838);
	MakeDword	(0X1A83C);
	MakeCode	(0X1A840);
	MakeCode	(0X1A896);
	MakeCode	(0X1A8AC);
	MakeCode	(0X1A8B4);
	MakeCode	(x=0X1A8C2);
	OpHex		(x,	1);
	MakeCode	(0X1A8D8);
	MakeCode	(0X1A8F8);
	MakeCode	(x=0X1A904);
	OpHex		(x,	1);
	MakeCode	(0X1A90C);
	MakeCode	(x=0X1A926);
	OpHex		(x,	1);
	MakeCode	(x=0X1A92A);
	OpHex		(x,	1);
	MakeCode	(x=0X1A932);
	OpHex		(x,	1);
	MakeCode	(x=0X1A936);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1A964);
	OpStkvar	(x,	1);
	MakeCode	(0X1A9A2);
	MakeCode	(x=0X1A9D2);
	OpStkvar	(x,	1);
	MakeCode	(0X1AA16);
	MakeCode	(0X1AA28);
	MakeCode	(x=0X1AA44);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AA5A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AA5E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AA62);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AA64);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AA90);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AA94);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AAA2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AAA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AAAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AAAE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AAB6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AABE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AADC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AAEE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AAF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AAF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AB06);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AB08);
	OpStkvar	(x,	1);
	MakeCode	(0X1AB3C);
	MakeCode	(x=0X1AB40);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AB64);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1AB7E);
	OpStkvar	(x,	1);
	MakeCode	(0X1ABBA);
	MakeDword	(0X1ABDC);
	MakeDword	(0X1ABE0);
	MakeDword	(0X1ABE4);
	MakeDword	(x=0X1ABE8);
	OpOff		(x,	0,	0X1A956);
	OpOff		(x,	128,	0X1A956);
	MakeDword	(0X1ABEC);
	MakeDword	(0X1ABF0);
	MakeDword	(0X1ABF4);
	MakeDword	(0X1ABF8);
	MakeDword	(0X1ABFC);
	MakeDword	(0X1AC00);
	MakeDword	(0X1AC04);
	MakeDword	(x=0X1AC08);
	OpOff		(x,	0,	0X1AA86);
	OpOff		(x,	128,	0X1AA86);
	MakeDword	(x=0X1AC0C);
	OpOff		(x,	0,	0X1AAA0);
	OpOff		(x,	128,	0X1AAA0);
	MakeCode	(0X1AC10);
	MakeCode	(x=0X1AC1E);
	OpHex		(x,	1);
	MakeCode	(0X1AC34);
	MakeCode	(0X1AC52);
	MakeCode	(x=0X1AC5C);
	OpHex		(x,	1);
	MakeCode	(0X1AC64);
	MakeByte	(0X1ACD6);
	MakeArray	(0X1ACD6,	0X2);
	MakeDword	(0X1ACD8);
	MakeDword	(0X1ACDC);
	MakeDword	(0X1ACE0);
	MakeDword	(0X1ACE4);
	MakeDword	(0X1ACE8);
	MakeDword	(0X1ACEC);
	MakeDword	(0X1ACF0);
	MakeCode	(0X1ACF4);
	MakeCode	(0X1ADB8);
	MakeCode	(0X1AE00);
	MakeCode	(0X1AE02);
	MakeCode	(0X1AE20);
	MakeCode	(0X1AE32);
	MakeCode	(x=0X1AE50);
	OpHex		(x,	1);
	MakeCode	(0X1AE62);
	MakeCode	(x=0X1AE6C);
	OpHex		(x,	1);
	MakeDword	(0X1AE74);
	MakeDword	(0X1AE78);
	MakeDword	(0X1AE7C);
	MakeDword	(x=0X1AE80);
	OpOff		(x,	0,	0X1AD7C);
	OpOff		(x,	128,	0X1AD7C);
	MakeDword	(0X1AE84);
	MakeDword	(0X1AE88);
	MakeDword	(x=0X1AE8C);
	OpOff		(x,	0,	0X1ADA8);
	OpOff		(x,	128,	0X1ADA8);
	MakeDword	(0X1AE90);
	MakeDword	(0X1AE94);
	MakeDword	(0X1AE98);
	MakeDword	(0X1AE9C);
	MakeDword	(0X1AEA0);
	MakeDword	(0X1AEA4);
	MakeCode	(0X1AEA8);
	MakeCode	(x=0X1AEB4);
	OpHex		(x,	1);
	MakeCode	(x=0X1AEB8);
	OpHex		(x,	1);
	MakeCode	(0X1AF04);
	MakeCode	(0X1AF42);
	MakeCode	(0X1AF84);
	MakeCode	(x=0X1AF96);
	OpHex		(x,	1);
	MakeCode	(0X1AFC4);
	MakeCode	(x=0X1AFD0);
	OpHex		(x,	1);
	MakeCode	(0X1AFD8);
	MakeCode	(0X1B010);
	MakeCode	(x=0X1B014);
	OpHex		(x,	1);
	MakeCode	(0X1B020);
	MakeCode	(0X1B02E);
	MakeCode	(0X1B044);
	MakeCode	(0X1B058);
	MakeCode	(0X1B066);
	MakeCode	(0X1B07A);
	MakeCode	(0X1B082);
	MakeCode	(0X1B0A8);
	MakeCode	(0X1B0B8);
	MakeCode	(x=0X1B0BA);
	OpHex		(x,	1);
	MakeCode	(0X1B0FA);
	MakeCode	(0X1B10C);
	MakeCode	(0X1B122);
	MakeCode	(0X1B12E);
	MakeCode	(0X1B16E);
	MakeCode	(0X1B188);
	MakeCode	(0X1B198);
	MakeCode	(0X1B1A4);
	MakeCode	(0X1B1AE);
	MakeCode	(0X1B1DE);
	MakeCode	(0X1B1F6);
	MakeCode	(x=0X1B22C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B238);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B240);
	OpStkvar	(x,	1);
	MakeCode	(0X1B256);
	MakeCode	(0X1B258);
	MakeCode	(x=0X1B25E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B266);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B276);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B282);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B29C);
	OpStkvar	(x,	1);
	MakeCode	(0X1B2A8);
	MakeByte	(0X1B2C6);
	MakeArray	(0X1B2C6,	0X2);
	MakeDword	(0X1B2C8);
	MakeDword	(0X1B2CC);
	MakeDword	(0X1B2D0);
	MakeDword	(0X1B2D4);
	MakeDword	(0X1B2D8);
	MakeDword	(0X1B2DC);
	MakeDword	(x=0X1B2E0);
	OpOff		(x,	0,	0X1B026);
	OpOff		(x,	128,	0X1B026);
	MakeDword	(0X1B2E4);
	MakeDword	(0X1B2E8);
	MakeDword	(0X1B2EC);
	MakeDword	(0X1B2F0);
	MakeDword	(0X1B2F4);
	MakeDword	(0X1B2F8);
	MakeDword	(0X1B2FC);
	MakeDword	(0X1B300);
	MakeDword	(0X1B304);
	MakeDword	(0X1B308);
	MakeDword	(0X1B30C);
	MakeCode	(0X1B310);
	MakeCode	(x=0X1B314);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B31A);
	OpHex		(x,	1);
	MakeCode	(x=0X1B31E);
	OpHex		(x,	1);
	MakeCode	(x=0X1B322);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B338);
	OpStkvar	(x,	1);
	MakeCode	(0X1B33C);
	MakeCode	(x=0X1B33E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B340);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B344);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B346);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B34C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B34E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B354);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B356);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B360);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B364);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B366);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B376);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B388);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B38E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B398);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3BE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3CA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3E2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B3FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B400);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B402);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B404);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B418);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B426);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B43A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B444);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B44A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B44C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B454);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B46E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B470);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B48A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B48C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B49C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B49E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B4B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B4B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B4B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B4BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B4C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B4C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B4CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B4D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B4F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B4FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B50A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B50C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B514);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B51C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B52C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B536);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B544);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B546);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B548);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B54E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B556);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B558);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B562);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B56C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B56E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B576);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B584);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B58A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B58C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B592);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B594);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B59A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B59C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B5A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B5B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B5BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B5CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B5DC);
	OpStkvar	(x,	1);
	MakeCode	(0X1B63A);
	MakeCode	(x=0X1B63C);
	OpHex		(x,	1);
	MakeCode	(x=0X1B668);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B66A);
	OpHex		(x,	1);
	MakeCode	(x=0X1B69E);
	OpHex		(x,	1);
	MakeCode	(x=0X1B6AA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B6B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B6D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B6E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B6EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B6F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B6F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B70E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B710);
	OpStkvar	(x,	1);
	MakeDword	(0X1B720);
	MakeDword	(0X1B724);
	MakeDword	(x=0X1B728);
	OpOff		(x,	0,	0X1B356);
	OpOff		(x,	128,	0X1B356);
	MakeDword	(0X1B72C);
	MakeDword	(x=0X1B730);
	OpOff		(x,	0,	0X1B3A6);
	OpOff		(x,	128,	0X1B3A6);
	MakeDword	(x=0X1B734);
	OpOff		(x,	0,	0X1B420);
	OpOff		(x,	128,	0X1B420);
	MakeDword	(0X1B738);
	MakeDword	(0X1B73C);
	MakeDword	(0X1B740);
	MakeDword	(0X1B744);
	MakeDword	(0X1B748);
	MakeDword	(x=0X1B74C);
	OpOff		(x,	0,	0X1B538);
	OpOff		(x,	128,	0X1B538);
	MakeDword	(x=0X1B750);
	OpOff		(x,	0,	0X1B564);
	OpOff		(x,	128,	0X1B564);
	MakeDword	(0X1B754);
	MakeDword	(0X1B758);
	MakeDword	(0X1B75C);
	MakeDword	(0X1B760);
	MakeDword	(0X1B764);
	MakeDword	(0X1B768);
	MakeDword	(0X1B76C);
	MakeDword	(x=0X1B770);
	OpOff		(x,	0,	0X1B690);
	OpOff		(x,	128,	0X1B690);
	MakeDword	(0X1B774);
	MakeDword	(0X1B778);
	MakeDword	(0X1B77C);
	MakeDword	(0X1B780);
	MakeDword	(0X1B784);
	MakeDword	(0X1B788);
	MakeCode	(0X1B78C);
	MakeCode	(x=0X1B7AE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B7E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B7EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B7F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B7F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B806);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B816);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B81C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B81E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B836);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B848);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B85E);
	OpStkvar	(x,	1);
	MakeDword	(x=0X1B878);
	OpOff		(x,	0,	0X1B7C8);
	OpOff		(x,	128,	0X1B7C8);
	MakeDword	(0X1B87C);
	MakeCode	(0X1B880);
	MakeCode	(x=0X1B884);
	OpHex		(x,	1);
	MakeCode	(x=0X1B892);
	OpStkvar	(x,	1);
	MakeCode	(0X1B896);
	MakeCode	(0X1B8AE);
	MakeCode	(x=0X1B8B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B8BE);
	OpHex		(x,	1);
	MakeCode	(x=0X1B8D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B8DE);
	OpHex		(x,	1);
	MakeCode	(x=0X1B8E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B8E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B8F6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B906);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1B90A);
	OpStkvar	(x,	1);
	MakeByte	(0X1B916);
	MakeArray	(0X1B916,	0X2);
	MakeDword	(0X1B918);
	MakeDword	(0X1B91C);
	MakeCode	(0X1B920);
	MakeCode	(x=0X1B936);
	OpHex		(x,	1);
	MakeCode	(x=0X1B94E);
	OpHex		(x,	1);
	MakeCode	(0X1B96C);
	MakeCode	(0X1B988);
	MakeByte	(0X1B98E);
	MakeArray	(0X1B98E,	0X2);
	MakeDword	(x=0X1B990);
	OpOff		(x,	0,	0X1B97E);
	OpOff		(x,	128,	0X1B97E);
	MakeDword	(x=0X1B994);
	OpOff		(x,	0,	0X1B98E);
	OpOff		(x,	128,	0X1B98E);
	MakeCode	(0X1B998);
	MakeCode	(0X1B9B4);
	MakeByte	(0X1B9BA);
	MakeArray	(0X1B9BA,	0X2);
	MakeDword	(x=0X1B9BC);
	OpOff		(x,	0,	0X1B9AA);
	OpOff		(x,	128,	0X1B9AA);
	MakeDword	(x=0X1B9C0);
	OpOff		(x,	0,	0X1B9BA);
	OpOff		(x,	128,	0X1B9BA);
	MakeCode	(x=0X1B9C4);
	OpHex		(x,	1);
	MakeCode	(x=0X1B9D0);
	OpHex		(x,	1);
	MakeCode	(x=0X1B9EE);
	OpHex		(x,	1);
	MakeCode	(0X1B9F4);
	MakeCode	(0X1BA0E);
	MakeCode	(0X1BA1C);
	MakeByte	(0X1BA26);
	MakeArray	(0X1BA26,	0X2);
	MakeCode	(0X1BA28);
	MakeCode	(x=0X1BA30);
	OpHex		(x,	1);
	MakeCode	(x=0X1BA70);
	OpHex		(x,	1);
	MakeCode	(x=0X1BAC0);
	OpHex		(x,	1);
	MakeCode	(0X1BADC);
	MakeCode	(0X1BB28);
	MakeCode	(0X1BB34);
	MakeCode	(0X1BB4C);
	MakeCode	(x=0X1BB5C);
	OpHex		(x,	1);
	MakeCode	(0X1BB64);
	MakeDword	(0X1BB70);
	MakeDword	(0X1BB74);
	MakeCode	(0X1BB78);
	MakeByte	(0X1BB82);
	MakeArray	(0X1BB82,	0X2);
	MakeDword	(0X1BB84);
	MakeCode	(0X1BB88);
	MakeCode	(0X1BBA0);
	MakeCode	(x=0X1BC04);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1BCA8);
	OpHex		(x,	1);
	MakeCode	(0X1BCC0);
	MakeCode	(0X1BCD4);
	MakeCode	(0X1BCE6);
	MakeCode	(0X1BD38);
	MakeCode	(0X1BD4A);
	MakeCode	(x=0X1BD54);
	OpHex		(x,	1);
	MakeCode	(0X1BD5C);
	MakeCode	(0X1BD68);
	MakeCode	(x=0X1BD7A);
	OpHex		(x,	1);
	MakeCode	(0X1BD82);
	MakeCode	(0X1BD90);
	MakeCode	(0X1BDA4);
	MakeCode	(x=0X1BDAC);
	OpHex		(x,	1);
	MakeCode	(0X1BDB2);
	MakeCode	(0X1BDBA);
	MakeDword	(0X1BDC8);
	MakeArray	(0X1BDC8,	0X20);
	MakeDword	(0X1BE48);
	MakeDword	(0X1BE4C);
	MakeCode	(0X1BE50);
	MakeCode	(0X1BE70);
	MakeCode	(0X1BE82);
	MakeCode	(0X1BE86);
	MakeCode	(0X1BE9E);
	MakeCode	(0X1BEB2);
	MakeCode	(0X1BEC8);
	MakeCode	(0X1BEFA);
	MakeCode	(0X1BF16);
	MakeCode	(x=0X1BF1C);
	OpStkvar	(x,	1);
	MakeCode	(0X1BF24);
	MakeByte	(0X1BF26);
	MakeArray	(0X1BF26,	0X2);
	MakeCode	(0X1BF28);
	MakeCode	(0X1BF4E);
	MakeCode	(0X1BF6A);
	MakeCode	(0X1BF70);
	MakeCode	(x=0X1BF78);
	OpStkvar	(x,	1);
	MakeCode	(0X1BF80);
	MakeCode	(x=0X1BF82);
	OpHex		(x,	1);
	MakeCode	(0X1BFAA);
	MakeCode	(0X1BFB0);
	MakeCode	(0X1BFD0);
	MakeByte	(0X1BFD6);
	MakeArray	(0X1BFD6,	0X2);
	MakeCode	(0X1BFD8);
	MakeCode	(0X1BFF8);
	MakeCode	(0X1C00A);
	MakeCode	(0X1C00E);
	MakeCode	(0X1C026);
	MakeCode	(0X1C03A);
	MakeCode	(0X1C050);
	MakeCode	(x=0X1C07C);
	OpHex		(x,	1);
	MakeCode	(x=0X1C080);
	OpHex		(x,	1);
	MakeCode	(x=0X1C0B2);
	OpHex		(x,	1);
	MakeCode	(x=0X1C0B6);
	OpHex		(x,	1);
	MakeCode	(0X1C0D4);
	MakeCode	(x=0X1C0FE);
	OpHex		(x,	1);
	MakeCode	(0X1C118);
	MakeCode	(x=0X1C144);
	OpHex		(x,	1);
	MakeCode	(0X1C14A);
	MakeCode	(x=0X1C162);
	OpHex		(x,	1);
	MakeCode	(0X1C168);
	MakeCode	(0X1C174);
	MakeCode	(0X1C178);
	MakeCode	(0X1C18A);
	MakeDword	(0X1C19C);
	MakeDword	(0X1C1A0);
	MakeCode	(0X1C1A4);
	MakeCode	(x=0X1C1A8);
	OpHex		(x,	1);
	MakeCode	(0X1C1E6);
	MakeCode	(0X1C1EC);
	MakeCode	(x=0X1C1F8);
	OpHex		(x,	1);
	MakeCode	(x=0X1C20A);
	OpHex		(x,	1);
	MakeComm	(0X1C210,	"switch 4 cases ");
	MakeCode	(0X1C210);
	MakeComm	(0X1C214,	"jump table for switch statement");
	MakeByte	(0X1C214);
	MakeName	(0X1C214,	"jpt_1C210");
	MakeByte	(0X1C215);
	MakeByte	(0X1C216);
	MakeByte	(0X1C217);
	MakeRptCmt	(0X1C218,	"jumptable 0001C210 cases 6,7");
	MakeCode	(0X1C218);
	MakeRptCmt	(0X1C226,	"jumptable 0001C210 case 4");
	MakeCode	(0X1C226);
	MakeRptCmt	(0X1C22A,	"jumptable 0001C210 case 5");
	MakeCode	(x=0X1C23A);
	OpHex		(x,	1);
	MakeCode	(0X1C240);
	MakeCode	(0X1C24C);
	MakeCode	(0X1C26C);
	MakeCode	(0X1C27E);
	MakeCode	(0X1C282);
	MakeCode	(0X1C29A);
	MakeCode	(0X1C2AE);
	MakeCode	(0X1C2B8);
	MakeCode	(x=0X1C2BE);
	OpHex		(x,	1);
	MakeCode	(x=0X1C2C6);
	OpHex		(x,	1);
	MakeByte	(0X1C2CE);
	MakeArray	(0X1C2CE,	0X2);
	MakeCode	(0X1C2D0);
	MakeCode	(x=0X1C2EC);
	OpHex		(x,	1);
	MakeCode	(x=0X1C2FE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1C3EC);
	OpHex		(x,	1);
	MakeByte	(0X1C402);
	MakeArray	(0X1C402,	0X2);
	MakeDword	(0X1C404);
	MakeArray	(0X1C404,	0XC);
	MakeCode	(0X1C434);
	MakeCode	(0X1C456);
	MakeCode	(0X1C466);
	MakeCode	(x=0X1C476);
	OpHex		(x,	1);
	MakeCode	(0X1C47E);
	MakeDword	(0X1C498);
	MakeCode	(0X1C49C);
	MakeCode	(x=0X1C4A4);
	OpHex		(x,	1);
	MakeCode	(x=0X1C4B6);
	OpHex		(x,	1);
	MakeCode	(x=0X1C53C);
	OpHex		(x,	1);
	MakeCode	(0X1C542);
	MakeCode	(x=0X1C5A4);
	OpHex		(x,	1);
	MakeCode	(0X1C5AA);
	MakeCode	(x=0X1C5B4);
	OpHex		(x,	1);
	MakeCode	(x=0X1C5EC);
	OpHex		(x,	1);
	MakeCode	(0X1C5F2);
	MakeCode	(0X1C5FE);
	MakeCode	(0X1C608);
	MakeCode	(0X1C60E);
	MakeCode	(0X1C61E);
	MakeCode	(0X1C624);
	MakeCode	(x=0X1C634);
	OpHex		(x,	1);
	MakeCode	(0X1C63E);
	MakeCode	(0X1C654);
	MakeCode	(x=0X1C664);
	OpHex		(x,	1);
	MakeDword	(0X1C66C);
	MakeCode	(0X1C670);
	MakeCode	(x=0X1C684);
	OpHex		(x,	1);
	MakeCode	(x=0X1C68A);
	OpHex		(x,	1);
	MakeCode	(x=0X1C692);
	OpHex		(x,	1);
	MakeCode	(x=0X1C698);
	OpHex		(x,	1);
	MakeCode	(x=0X1C6AE);
	OpStkvar	(x,	1);
	MakeCode	(0X1C6B8);
	MakeByte	(0X1C6C6);
	MakeArray	(0X1C6C6,	0X2);
	MakeCode	(0X1C6C8);
	MakeCode	(x=0X1C6CE);
	OpHex		(x,	1);
	MakeCode	(x=0X1C71E);
	OpHex		(x,	1);
	MakeCode	(x=0X1C738);
	OpHex		(x,	1);
	MakeCode	(0X1C74C);
	MakeCode	(x=0X1C758);
	OpHex		(x,	1);
	MakeCode	(0X1C76E);
	MakeCode	(x=0X1C77A);
	OpHex		(x,	1);
	MakeCode	(0X1C780);
	MakeDword	(0X1C788);
	MakeCode	(0X1C78C);
	MakeByte	(0X1C792);
	MakeArray	(0X1C792,	0X2);
	MakeDword	(0X1C794);
	MakeCode	(0X1C798);
	MakeCode	(0X1C7B0);
	MakeCode	(x=0X1C7D0);
	OpHex		(x,	1);
	MakeCode	(x=0X1C7D4);
	OpHex		(x,	1);
	MakeCode	(x=0X1C7D8);
	OpHex		(x,	1);
	MakeCode	(x=0X1C7DC);
	OpHex		(x,	1);
	MakeCode	(x=0X1C7E0);
	OpHex		(x,	1);
	MakeCode	(x=0X1C7EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1C852);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C868);
	OpHex		(x,	1);
	MakeCode	(x=0X1C872);
	OpHex		(x,	1);
	MakeCode	(0X1C878);
	MakeCode	(x=0X1C886);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C888);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C88A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C88C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C88E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C890);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C892);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1C894);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1C896);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1C898);
	OpStkvar	(x,	1);
	MakeWord	(0X1C89E);
	MakeCode	(0X1C8A0);
	MakeWord	(0X1C8B2);
	MakeDword	(0X1C8B4);
	MakeArray	(0X1C8B4,	0X2);
	MakeCode	(0X1C8BC);
	MakeCode	(0X1C8D4);
	MakeCode	(x=0X1C8DE);
	OpHex		(x,	1);
	MakeCode	(x=0X1C8EA);
	OpHex		(x,	1);
	MakeCode	(x=0X1C8F4);
	OpHex		(x,	1);
	MakeCode	(0X1C8FA);
	MakeCode	(0X1C908);
	MakeCode	(x=0X1C90C);
	OpHex		(x,	1);
	MakeCode	(0X1C912);
	MakeCode	(x=0X1C916);
	OpHex		(x,	1);
	MakeCode	(x=0X1C91E);
	OpHex		(x,	1);
	MakeDword	(0X1C930);
	MakeCode	(0X1C934);
	MakeCode	(x=0X1C93E);
	OpHex		(x,	1);
	MakeCode	(0X1C950);
	MakeCode	(x=0X1C958);
	OpStkvar	(x,	1);
	MakeCode	(0X1C960);
	MakeByte	(0X1C96A);
	MakeArray	(0X1C96A,	0X2);
	MakeCode	(0X1C96C);
	MakeCode	(x=0X1C978);
	OpHex		(x,	1);
	MakeCode	(0X1C982);
	MakeCode	(0X1C996);
	MakeCode	(x=0X1C99C);
	OpStkvar	(x,	1);
	MakeCode	(0X1C9A4);
	MakeByte	(0X1C9AA);
	MakeArray	(0X1C9AA,	0X2);
	MakeCode	(x=0X1C9AC);
	OpHex		(x,	1);
	MakeCode	(x=0X1C9D6);
	OpHex		(x,	1);
	MakeCode	(0X1C9DC);
	MakeCode	(x=0X1C9FC);
	OpHex		(x,	1);
	MakeByte	(0X1CA02);
	MakeArray	(0X1CA02,	0X2);
	MakeCode	(0X1CA04);
	MakeCode	(0X1CA1C);
	MakeCode	(0X1CA2E);
	MakeCode	(0X1CA32);
	MakeCode	(0X1CA42);
	MakeCode	(0X1CA56);
	MakeCode	(0X1CA6C);
	MakeCode	(x=0X1CA8C);
	OpHex		(x,	1);
	MakeCode	(x=0X1CAAC);
	OpHex		(x,	1);
	MakeCode	(x=0X1CADA);
	OpHex		(x,	1);
	MakeCode	(x=0X1CAE8);
	OpHex		(x,	1);
	MakeCode	(x=0X1CAFA);
	OpHex		(x,	1);
	MakeCode	(0X1CB00);
	MakeCode	(0X1CB14);
	MakeCode	(x=0X1CB1E);
	OpHex		(x,	1);
	MakeCode	(x=0X1CB2E);
	OpHex		(x,	1);
	MakeCode	(0X1CB34);
	MakeCode	(0X1CB44);
	MakeCode	(0X1CB48);
	MakeCode	(0X1CB5A);
	MakeCode	(0X1CB6E);
	MakeCode	(x=0X1CB72);
	OpHex		(x,	1);
	MakeCode	(0X1CBAC);
	MakeCode	(0X1CBB2);
	MakeCode	(x=0X1CBBE);
	OpHex		(x,	1);
	MakeCode	(x=0X1CBD0);
	OpHex		(x,	1);
	MakeComm	(0X1CBD6,	"switch 4 cases ");
	MakeCode	(0X1CBD6);
	MakeComm	(0X1CBDA,	"jump table for switch statement");
	MakeByte	(0X1CBDA);
	MakeName	(0X1CBDA,	"jpt_1CBD6");
	MakeByte	(0X1CBDB);
	MakeByte	(0X1CBDC);
	MakeByte	(0X1CBDD);
	MakeRptCmt	(0X1CBDE,	"jumptable 0001CBD6 cases 6,7");
	MakeCode	(0X1CBDE);
	MakeRptCmt	(0X1CBE8,	"jumptable 0001CBD6 case 4");
	MakeCode	(0X1CBE8);
	MakeRptCmt	(0X1CBEA,	"jumptable 0001CBD6 case 5");
	MakeCode	(x=0X1CBF4);
	OpHex		(x,	1);
	MakeCode	(0X1CBFA);
	MakeCode	(x=0X1CC04);
	OpHex		(x,	1);
	MakeCode	(x=0X1CC10);
	OpHex		(x,	1);
	MakeCode	(0X1CC18);
	MakeCode	(x=0X1CC1E);
	OpHex		(x,	1);
	MakeCode	(x=0X1CC2A);
	OpHex		(x,	1);
	MakeCode	(x=0X1CC62);
	OpHex		(x,	1);
	MakeCode	(x=0X1CC78);
	OpHex		(x,	1);
	MakeCode	(0X1CC82);
	MakeCode	(x=0X1CC92);
	OpHex		(x,	1);
	MakeCode	(x=0X1CCA4);
	OpHex		(x,	1);
	MakeCode	(0X1CCAA);
	MakeCode	(0X1CCD6);
	MakeCode	(0X1CCE2);
	MakeCode	(0X1CCF2);
	MakeCode	(x=0X1CCFC);
	OpHex		(x,	1);
	MakeCode	(0X1CD02);
	MakeCode	(x=0X1CD06);
	OpHex		(x,	1);
	MakeCode	(x=0X1CD20);
	OpHex		(x,	1);
	MakeCode	(x=0X1CD30);
	OpHex		(x,	1);
	MakeCode	(x=0X1CD3C);
	OpHex		(x,	1);
	MakeCode	(x=0X1CD42);
	OpHex		(x,	1);
	MakeCode	(x=0X1CD46);
	OpHex		(x,	1);
	MakeCode	(x=0X1CD54);
	OpHex		(x,	1);
	MakeCode	(x=0X1CD58);
	OpHex		(x,	1);
	MakeCode	(x=0X1CD60);
	OpHex		(x,	1);
	MakeCode	(0X1CD6A);
	MakeCode	(x=0X1CD94);
	OpHex		(x,	1);
	MakeCode	(x=0X1CD9A);
	OpHex		(x,	1);
	MakeCode	(x=0X1CD9E);
	OpHex		(x,	1);
	MakeCode	(x=0X1CDA8);
	OpHex		(x,	1);
	MakeCode	(0X1CDB2);
	MakeCode	(x=0X1CDBC);
	OpHex		(x,	1);
	MakeCode	(0X1CDC6);
	MakeCode	(x=0X1CDD0);
	OpHex		(x,	1);
	MakeCode	(x=0X1CDEA);
	OpHex		(x,	1);
	MakeCode	(x=0X1CDF0);
	OpHex		(x,	1);
	MakeCode	(x=0X1CDF4);
	OpHex		(x,	1);
	MakeCode	(x=0X1CDFA);
	OpHex		(x,	1);
	MakeCode	(0X1CE00);
	MakeCode	(x=0X1CE08);
	OpHex		(x,	1);
	MakeCode	(0X1CE12);
	MakeCode	(0X1CE16);
	MakeCode	(0X1CE1A);
	MakeCode	(x=0X1CE1E);
	OpHex		(x,	1);
	MakeCode	(x=0X1CE24);
	OpHex		(x,	1);
	MakeCode	(0X1CE32);
	MakeCode	(x=0X1CE3A);
	OpHex		(x,	1);
	MakeCode	(0X1CE48);
	MakeByte	(0X1CE4E);
	MakeArray	(0X1CE4E,	0X2);
	MakeByte	(0X1CE51);
	MakeArray	(0X1CE51,	0X3);
	MakeDword	(0X1CE54);
	MakeArray	(0X1CE54,	0X31);
	MakeByte	(0X1CF19);
	MakeArray	(0X1CF19,	0X3);
	MakeDword	(0X1CF1C);
	MakeArray	(0X1CF1C,	0X200);
	MakeDword	(0X1D71C);
	MakeArray	(0X1D71C,	0X200);
	MakeDword	(0X1DF1C);
	MakeArray	(0X1DF1C,	0X200);
	MakeDword	(0X1E71C);
	MakeArray	(0X1E71C,	0X200);
	MakeDword	(0X1EF1C);
	MakeArray	(0X1EF1C,	0X200);
	MakeDword	(0X1F71C);
	MakeArray	(0X1F71C,	0X200);
	MakeDword	(0X1FF1C);
	MakeArray	(0X1FF1C,	0X200);
	MakeDword	(0X2071C);
	MakeArray	(0X2071C,	0X200);
	MakeDword	(0X20F1C);
	MakeArray	(0X20F1C,	0X200);
	MakeDword	(0X2171C);
	MakeArray	(0X2171C,	0X200);
	MakeDword	(0X21F1C);
	MakeArray	(0X21F1C,	0X200);
	MakeDword	(0X2271C);
	MakeArray	(0X2271C,	0X200);
	MakeDword	(0X22F1C);
	MakeArray	(0X22F1C,	0X200);
	MakeDword	(0X2371C);
	MakeArray	(0X2371C,	0X1D6);
	MakeByte	(0X23E75);
	MakeArray	(0X23E75,	0X3);
	MakeDword	(0X23E78);
	MakeArray	(0X23E78,	0X2C);
	MakeByte	(0X23F29);
	MakeArray	(0X23F29,	0X3);
	MakeDword	(0X23F2C);
	MakeArray	(0X23F2C,	0XB9);
	MakeByte	(0X24211);
	MakeArray	(0X24211,	0X3);
	MakeDword	(0X24214);
	MakeArray	(0X24214,	0X1D);
	MakeDword	(0X24288);
	MakeArray	(0X24288,	0X15);
	MakeDword	(0X242DC);
	MakeArray	(0X242DC,	0X15);
	MakeDword	(0X24330);
	MakeArray	(0X24330,	0X15);
	MakeDword	(0X24384);
	MakeArray	(0X24384,	0X15);
	MakeDword	(0X243D8);
	MakeArray	(0X243D8,	0X10F);
	MakeByte	(0X24815);
	MakeArray	(0X24815,	0X3);
	MakeDword	(0X24818);
	MakeArray	(0X24818,	0X147);
	MakeByte	(0X24D35);
	MakeArray	(0X24D35,	0X3);
	MakeByte	(0X24D39);
	MakeArray	(0X24D39,	0X3);
	MakeByte	(0X24D3D);
	MakeArray	(0X24D3D,	0X3);
	MakeByte	(0X24D41);
	MakeArray	(0X24D41,	0X3);
	MakeByte	(0X24D45);
	MakeArray	(0X24D45,	0X3);
	MakeByte	(0X24D49);
	MakeArray	(0X24D49,	0X3);
	MakeByte	(0X24D4D);
	MakeArray	(0X24D4D,	0X3);
	MakeByte	(0X24D51);
	MakeArray	(0X24D51,	0X3);
	MakeByte	(0X24D55);
	MakeArray	(0X24D55,	0X3);
	MakeByte	(0X24D59);
	MakeArray	(0X24D59,	0X3);
	MakeByte	(0X24D5D);
	MakeArray	(0X24D5D,	0X3);
	MakeByte	(0X24D61);
	MakeArray	(0X24D61,	0X3);
	MakeByte	(0X24D65);
	MakeArray	(0X24D65,	0X3);
	MakeByte	(0X24D69);
	MakeArray	(0X24D69,	0X3);
	MakeByte	(0X24D6D);
	MakeArray	(0X24D6D,	0X3);
	MakeByte	(0X24D71);
	MakeArray	(0X24D71,	0X3);
	MakeByte	(0X24D75);
	MakeArray	(0X24D75,	0X3);
	MakeByte	(0X24D79);
	MakeArray	(0X24D79,	0X3);
	MakeByte	(0X24D7D);
	MakeArray	(0X24D7D,	0X3);
	MakeByte	(0X24D81);
	MakeArray	(0X24D81,	0X3);
	MakeByte	(0X24D85);
	MakeArray	(0X24D85,	0X3);
	MakeByte	(0X24D89);
	MakeArray	(0X24D89,	0X3);
	MakeByte	(0X24D8D);
	MakeArray	(0X24D8D,	0X3);
	MakeByte	(0X24D91);
	MakeArray	(0X24D91,	0X3);
	MakeByte	(0X24D95);
	MakeArray	(0X24D95,	0X3);
	MakeByte	(0X24D99);
	MakeArray	(0X24D99,	0X3);
	MakeByte	(0X24D9D);
	MakeArray	(0X24D9D,	0X3);
	MakeByte	(0X24DA1);
	MakeArray	(0X24DA1,	0X3);
	MakeByte	(0X24DA5);
	MakeArray	(0X24DA5,	0X3);
	MakeByte	(0X24DA9);
	MakeArray	(0X24DA9,	0X3);
	MakeByte	(0X24DAD);
	MakeArray	(0X24DAD,	0X3);
	MakeByte	(0X24DB1);
	MakeArray	(0X24DB1,	0X3);
	MakeByte	(0X24DB5);
	MakeArray	(0X24DB5,	0X3);
	MakeByte	(0X24DB9);
	MakeArray	(0X24DB9,	0X3);
	MakeByte	(0X24DBD);
	MakeArray	(0X24DBD,	0X3);
	MakeByte	(0X24DC1);
	MakeArray	(0X24DC1,	0X3);
	MakeByte	(0X24DC5);
	MakeArray	(0X24DC5,	0X3);
	MakeByte	(0X24DC9);
	MakeArray	(0X24DC9,	0X3);
	MakeByte	(0X24DCD);
	MakeArray	(0X24DCD,	0X3);
	MakeByte	(0X24DD1);
	MakeArray	(0X24DD1,	0X3);
	MakeByte	(0X24DD5);
	MakeArray	(0X24DD5,	0X3);
	MakeByte	(0X24DD9);
	MakeArray	(0X24DD9,	0X3);
	MakeByte	(0X24DDD);
	MakeArray	(0X24DDD,	0X3);
	MakeByte	(0X24DE1);
	MakeArray	(0X24DE1,	0X3);
	MakeByte	(0X24DE5);
	MakeArray	(0X24DE5,	0X3);
	MakeByte	(0X24DE9);
	MakeArray	(0X24DE9,	0X3);
	MakeByte	(0X24DED);
	MakeArray	(0X24DED,	0X3);
	MakeByte	(0X24DF1);
	MakeArray	(0X24DF1,	0X3);
	MakeByte	(0X24DF5);
	MakeArray	(0X24DF5,	0X3);
	MakeByte	(0X24DF9);
	MakeArray	(0X24DF9,	0X3);
	MakeByte	(0X24DFD);
	MakeArray	(0X24DFD,	0X3);
	MakeByte	(0X24E01);
	MakeArray	(0X24E01,	0X3);
	MakeByte	(0X24E04);
	MakeByte	(0X24E05);
	MakeArray	(0X24E05,	0X3);
	MakeByte	(0X24E09);
	MakeArray	(0X24E09,	0X3);
	MakeByte	(0X24E0D);
	MakeArray	(0X24E0D,	0X3);
	MakeByte	(0X24E11);
	MakeArray	(0X24E11,	0X3);
	MakeByte	(0X24E15);
	MakeArray	(0X24E15,	0X3);
	MakeByte	(0X24E19);
	MakeArray	(0X24E19,	0X3);
	MakeByte	(0X24E1D);
	MakeArray	(0X24E1D,	0X3);
	MakeByte	(0X24E21);
	MakeArray	(0X24E21,	0X3);
	MakeByte	(0X24E25);
	MakeArray	(0X24E25,	0X3);
	MakeByte	(0X24E29);
	MakeArray	(0X24E29,	0X3);
	MakeByte	(0X24E2D);
	MakeArray	(0X24E2D,	0X3);
	MakeByte	(0X24E31);
	MakeArray	(0X24E31,	0X3);
	MakeByte	(0X24E35);
	MakeArray	(0X24E35,	0X3);
	MakeByte	(0X24E39);
	MakeArray	(0X24E39,	0X3);
	MakeByte	(0X24E3D);
	MakeArray	(0X24E3D,	0X3);
	MakeByte	(0X24E41);
	MakeArray	(0X24E41,	0X3);
	MakeByte	(0X24E45);
	MakeArray	(0X24E45,	0X3);
	MakeByte	(0X24E49);
	MakeArray	(0X24E49,	0X3);
	MakeByte	(0X24E4D);
	MakeArray	(0X24E4D,	0X3);
	MakeByte	(0X24E51);
	MakeArray	(0X24E51,	0X3);
	MakeByte	(0X24E55);
	MakeArray	(0X24E55,	0X3);
	MakeByte	(0X24E59);
	MakeArray	(0X24E59,	0X3);
	MakeByte	(0X24E5D);
	MakeArray	(0X24E5D,	0X3);
	MakeByte	(0X24E61);
	MakeArray	(0X24E61,	0X3);
	MakeByte	(0X24E65);
	MakeArray	(0X24E65,	0X3);
	MakeByte	(0X24E69);
	MakeArray	(0X24E69,	0X3);
	MakeByte	(0X24E6D);
	MakeArray	(0X24E6D,	0X3);
	MakeByte	(0X24E71);
	MakeArray	(0X24E71,	0X3);
	MakeByte	(0X24E75);
	MakeArray	(0X24E75,	0X3);
	MakeByte	(0X24E79);
	MakeArray	(0X24E79,	0X3);
	MakeByte	(0X24E7D);
	MakeArray	(0X24E7D,	0X3);
	MakeByte	(0X24E81);
	MakeArray	(0X24E81,	0X3);
	MakeByte	(0X24E85);
	MakeArray	(0X24E85,	0X3);
	MakeByte	(0X24E89);
	MakeArray	(0X24E89,	0X3);
	MakeByte	(0X24E8D);
	MakeArray	(0X24E8D,	0X3);
	MakeByte	(0X24E91);
	MakeArray	(0X24E91,	0X3);
	MakeByte	(0X24E95);
	MakeArray	(0X24E95,	0X3);
	MakeByte	(0X24E99);
	MakeArray	(0X24E99,	0X3);
	MakeByte	(0X24E9D);
	MakeArray	(0X24E9D,	0X3);
	MakeByte	(0X24EA1);
	MakeArray	(0X24EA1,	0X3);
	MakeByte	(0X24EA5);
	MakeArray	(0X24EA5,	0X3);
	MakeByte	(0X24EA9);
	MakeArray	(0X24EA9,	0X3);
	MakeByte	(0X24EAD);
	MakeArray	(0X24EAD,	0X3);
	MakeByte	(0X24EB1);
	MakeArray	(0X24EB1,	0X3);
	MakeByte	(0X24EB5);
	MakeArray	(0X24EB5,	0X3);
	MakeStr		(0X24F03,	0X24F0C);
	MakeName	(0X24F03,	"aMsdos5_0");
	MakeStr		(0X24F1E,	0X24F3E);
	MakeName	(0X24F1E,	"aDjiIosdlog");
	MakeStr		(0X24F3E,	0X24F4A);
	MakeName	(0X24F3E,	"aReadmeTxt");
	MakeStr		(0X24F5E,	0X24F7D);
	MakeName	(0X24F5E,	"aWarning1NoSdCa");
	MakeByte	(0X24F7D);
	MakeArray	(0X24F7D,	0X3E1);
	MakeStr		(0X25397,	0X253B1);
	MakeName	(0X25397,	"aDjiConfif");
	MakeWord	(0X253B1);
	MakeStr		(0X253B3,	0X253D5);
	MakeName	(0X253B3,	"aDjiController");
	MakeWord	(0X253D5);
	MakeStr		(0X253D7,	0X253EF);
	MakeName	(0X253D7,	"a0001a0000000");
	MakeWord	(0X253EF);
	MakeStr		(0X253F1,	0X253F9);
	MakeName	(0X253F1,	"aVcom");
	MakeWord	(0X253F9);
	MakeStr		(0X253FB,	0X25403);
	MakeName	(0X253FB,	"aMscm");
	MakeWord	(0X25403);
	MakeStr		(0X25405,	0X2541F);
	MakeName	(0X25405,	"a0001aa000000");
	MakeDword	(0X25420);
	MakeArray	(0X25420,	0X5);
	MakeByte	(0X25435);
	MakeArray	(0X25435,	0X3);
	MakeDword	(0X25438);
	MakeArray	(0X25438,	0XB);
	MakeDword	(0X25464);
	MakeArray	(0X25464,	0X9);
	MakeByte	(0X25489);
	MakeArray	(0X25489,	0X3);
	MakeByte	(0X2548D);
	MakeArray	(0X2548D,	0X3);
	MakeDword	(0X25490);
	MakeArray	(0X25490,	0XCA);
	MakeStr		(0X257B8,	0X257CC);
	MakeName	(0X257B8,	"a0123456789abcd");
	MakeStr		(0X257CD,	0X257E0);
	MakeName	(0X257CD,	"a123456789abcde");
	MakeDword	(0X257E0);
	MakeArray	(0X257E0,	0X2);
	MakeDword	(0X257E8);
	MakeArray	(0X257E8,	0X3);
	MakeDword	(0X257F4);
	MakeByte	(0X257F9);
	MakeArray	(0X257F9,	0X3);
	MakeByte	(0X257FD);
	MakeArray	(0X257FD,	0X3);
	MakeByte	(0X25801);
	MakeArray	(0X25801,	0X3);
	MakeByte	(0X25805);
	MakeArray	(0X25805,	0X3);
	MakeByte	(0X25809);
	MakeArray	(0X25809,	0X3);
	MakeDword	(0X2580C);
	MakeArray	(0X2580C,	0X2);
	MakeDword	(0X25814);
	MakeByte	(0X25819);
	MakeArray	(0X25819,	0X3);
	MakeDword	(0X2581C);
	MakeArray	(0X2581C,	0X7);
	MakeDword	(0X25838);
	MakeDword	(0X2583C);
	MakeArray	(0X2583C,	0X2);
	MakeDword	(0X25844);
	MakeDword	(0X25848);
	MakeArray	(0X25848,	0X2);
	MakeDword	(0X25850);
	MakeArray	(0X25850,	0X2);
	MakeDword	(0X25858);
	MakeArray	(0X25858,	0X2);
	MakeByte	(0X25861);
	MakeArray	(0X25861,	0X3);
	MakeDword	(0X25864);
	MakeByte	(0X25869);
	MakeArray	(0X25869,	0X3);
	MakeByte	(0X2586D);
	MakeArray	(0X2586D,	0X3);
	MakeByte	(0X25871);
	MakeArray	(0X25871,	0X3);
	MakeByte	(0X25875);
	MakeArray	(0X25875,	0X3);
	MakeByte	(0X25879);
	MakeArray	(0X25879,	0X3);
	MakeByte	(0X2587D);
	MakeArray	(0X2587D,	0X3);
	MakeByte	(0X25881);
	MakeArray	(0X25881,	0X3);
	MakeByte	(0X25885);
	MakeArray	(0X25885,	0X3);
	MakeByte	(0X25889);
	MakeArray	(0X25889,	0X3);
	MakeCode	(0X2588C);
	MakeByte	(0X258A3);
	MakeDword	(0X258A4);
	MakeArray	(0X258A4,	0X7);
	MakeDword	(0X258C0);
	MakeArray	(0X258C0,	0X2);
	MakeByte	(0X258C9);
	MakeArray	(0X258C9,	0X3);
	MakeByte	(0X258CD);
	MakeArray	(0X258CD,	0X3);
	MakeByte	(0X258D1);
	MakeArray	(0X258D1,	0X3);
	MakeByte	(0X258D5);
	MakeArray	(0X258D5,	0X3);
	MakeByte	(0X258D9);
	MakeArray	(0X258D9,	0X3);
	MakeByte	(0X258DD);
	MakeArray	(0X258DD,	0X3);
	MakeByte	(0X258E1);
	MakeArray	(0X258E1,	0X3);
	MakeByte	(0X258E5);
	MakeArray	(0X258E5,	0X3);
	MakeByte	(0X258E9);
	MakeArray	(0X258E9,	0X3);
	MakeDword	(0X258EC);
	MakeArray	(0X258EC,	0X3);
	MakeDword	(0X258F8);
	MakeArray	(0X258F8,	0X6);
	MakeByte	(0X25911);
	MakeArray	(0X25911,	0X3);
	MakeDword	(0X25914);
	MakeArray	(0X25914,	0X7);
	MakeDword	(0X25930);
	MakeByte	(0X25934);
	MakeArray	(0X25934,	0X4);
	MakeDword	(0X25938);
	MakeArray	(0X25938,	0XC);
	MakeDword	(0X25968);
	MakeArray	(0X25968,	0X2);
	MakeByte	(0X25971);
	MakeArray	(0X25971,	0X3);
	MakeDword	(0X25974);
	MakeArray	(0X25974,	0XD);
	MakeDword	(0X259A8);
	MakeByte	(0X259AD);
	MakeArray	(0X259AD,	0X3);
	MakeDword	(0X259B0);
	MakeByte	(0X259B5);
	MakeArray	(0X259B5,	0X3);
	MakeByte	(0X259B9);
	MakeArray	(0X259B9,	0X3);
	MakeByte	(0X259C9);
	MakeArray	(0X259C9,	0X3);
	MakeDword	(0X259CC);
	MakeArray	(0X259CC,	0XD);
	MakeByte	(0X25A01);
	MakeArray	(0X25A01,	0X3);
	MakeDword	(0X25A04);
	MakeArray	(0X25A04,	0XC);
	MakeByte	(0X25A35);
	MakeArray	(0X25A35,	0X3);
	MakeDword	(0X25A38);
	MakeArray	(0X25A38,	0X2);
	MakeDword	(x=0X25A40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X25A44);
	MakeArray	(0X25A44,	0X2);
	MakeByte	(0X25A4D);
	MakeArray	(0X25A4D,	0X3);
	MakeByte	(0X25A51);
	MakeArray	(0X25A51,	0X3);
	MakeByte	(0X25A54);
	MakeArray	(0X25A54,	0X4);
	MakeDword	(x=0X25A58);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeByte	(0X25A5D);
	MakeArray	(0X25A5D,	0X3);
	MakeDword	(0X25A60);
	MakeArray	(0X25A60,	0XA);
	MakeDword	(0X25A88);
	MakeByte	(0X25A8D);
	MakeArray	(0X25A8D,	0X3);
	MakeDword	(0X25A90);
	MakeArray	(0X25A90,	0X5);
	MakeByte	(0X25AA5);
	MakeArray	(0X25AA5,	0X3);
	MakeDword	(0X25AA8);
	MakeArray	(0X25AAC,	0X4);
	MakeByte	(0X25AB1);
	MakeArray	(0X25AB1,	0X3);
	MakeDword	(0X25AB4);
	MakeArray	(0X25AB4,	0X2);
	MakeStr		(0X25ABC,	0X25AFF);
	MakeName	(0X25ABC,	"aChDMcsDModeDBw");
	MakeByte	(0X25AFF);
	MakeDword	(0X25B00);
	MakeArray	(0X25B00,	0X4);
	MakeDword	(0X25B10);
	MakeArray	(0X25B10,	0X8);
	MakeDword	(0X25B30);
	MakeDword	(0X25B34);
	MakeArray	(0X25B34,	0X2);
	MakeByte	(0X25B3D);
	MakeArray	(0X25B3D,	0X3);
	MakeDword	(0X25B40);
	MakeByte	(0X25B45);
	MakeArray	(0X25B45,	0X3);
	MakeByte	(0X25B49);
	MakeArray	(0X25B49,	0X3);
	MakeByte	(0X25B4D);
	MakeArray	(0X25B4D,	0X3);
	MakeByte	(0X25B51);
	MakeArray	(0X25B51,	0X3);
	MakeDword	(x=0X25B54);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeByte	(0X25B59);
	MakeArray	(0X25B59,	0X3);
	MakeDword	(0X25B5C);
	MakeByte	(0X25B61);
	MakeArray	(0X25B61,	0X3);
	MakeDword	(0X25B64);
	MakeArray	(0X25B64,	0X3B);
	MakeDword	(0X25C50);
	MakeDword	(0X25C54);
	MakeArray	(0X25C54,	0X4);
	MakeDword	(0X25C64);
	MakeArray	(0X25C64,	0X13);
	MakeByte	(0X25CB0);
	MakeArray	(0X25CB0,	0X3);
	MakeStr		(0X25CB3,	0X25CBC);
	MakeName	(0X25CB3,	"aTestdjiw");
	MakeDword	(0X25CBC);
	MakeArray	(0X25CBC,	0X7B);
	MakeByte	(0X10000000);
	MakeByte	(0X10000001);
	MakeByte	(0X10000002);
	MakeByte	(0X10000003);
	MakeByte	(0X10000004);
	MakeByte	(0X10000005);
	MakeByte	(0X10000006);
	MakeByte	(0X10000007);
	MakeByte	(0X10000008);
	MakeByte	(0X10000009);
	MakeByte	(0X1000000A);
	MakeWord	(0X1000000C);
	MakeByte	(0X1000000E);
	MakeByte	(0X1000000F);
	MakeDword	(0X10000010);
	MakeDword	(0X10000014);
	MakeDword	(0X10000018);
	MakeByte	(0X1000001C);
	MakeByte	(0X1000001D);
	MakeByte	(0X1000001F);
	MakeByte	(0X10000020);
	MakeDword	(0X10000021);
	MakeDword	(0X10000025);
	MakeByte	(0X10000029);
	MakeByte	(0X1000002A);
	MakeWord	(0X1000002C);
	MakeArray	(0X1000002E,	0X2);
	MakeDword	(0X10000030);
	MakeByte	(0X10000034);
	MakeArray	(0X10000035,	0X3);
	MakeDword	(0X10000038);
	MakeByte	(0X1000003C);
	MakeByte	(0X1000003D);
	MakeByte	(0X1000003E);
	MakeByte	(0X1000003F);
	MakeByte	(0X10000040);
	MakeArray	(0X10000041,	0X7);
	MakeByte	(0X10000055);
	MakeByte	(0X10000056);
	MakeByte	(0X10000057);
	MakeByte	(0X10000058);
	MakeByte	(0X10000059);
	MakeByte	(0X1000005A);
	MakeByte	(0X1000005B);
	MakeByte	(0X1000005C);
	MakeByte	(0X1000005D);
	MakeByte	(0X1000005E);
	MakeByte	(0X1000005F);
	MakeByte	(0X10000060);
	MakeByte	(0X10000061);
	MakeByte	(0X10000062);
	MakeByte	(0X10000063);
	MakeByte	(0X10000064);
	MakeByte	(0X10000065);
	MakeByte	(0X10000066);
	MakeByte	(0X10000067);
	MakeByte	(0X10000068);
	MakeByte	(0X10000069);
	MakeByte	(0X1000006A);
	MakeByte	(0X1000006B);
	MakeByte	(0X1000006C);
	MakeByte	(0X1000006D);
	MakeByte	(0X1000006E);
	MakeByte	(0X1000006F);
	MakeByte	(0X10000070);
	MakeByte	(0X10000071);
	MakeByte	(0X10000072);
	MakeByte	(0X10000073);
	MakeByte	(0X10000074);
	MakeByte	(0X10000075);
	MakeByte	(0X10000076);
	MakeByte	(0X10000077);
	MakeByte	(0X10000078);
	MakeByte	(0X10000079);
	MakeByte	(0X1000007A);
	MakeWord	(0X1000007C);
	MakeByte	(0X1000007F);
	MakeByte	(0X10000080);
	MakeArray	(0X10000081,	0X3);
	MakeDword	(0X10000084);
	MakeDword	(0X1000008C);
	MakeDword	(0X10000090);
	MakeDword	(0X10000094);
	MakeDword	(0X10000098);
	MakeDword	(0X1000009C);
	MakeDword	(0X100000A0);
	MakeDword	(0X100000A4);
	MakeDword	(0X100000A8);
	MakeDword	(0X100000AC);
	MakeDword	(0X100000B0);
	MakeDword	(0X100000B4);
	MakeDword	(0X100000B8);
	MakeByte	(0X100000BC);
	MakeByte	(0X100000BD);
	MakeByte	(0X100000BE);
	MakeByte	(0X100000BF);
	MakeByte	(0X100000C0);
	MakeByte	(0X100000C1);
	MakeByte	(0X100000C2);
	MakeArray	(0X100000C3,	0X5);
	MakeByte	(0X100000C8);
	MakeByte	(0X100000C9);
	MakeByte	(0X100000CA);
	MakeByte	(0X100000CB);
	MakeByte	(0X100000CC);
	MakeByte	(0X100000CD);
	MakeByte	(0X100000CE);
	MakeByte	(0X100000CF);
	MakeByte	(0X100000D0);
	MakeByte	(0X100000D1);
	MakeByte	(0X100000D2);
	MakeByte	(0X100000D3);
	MakeByte	(0X100000D4);
	MakeByte	(0X100000D5);
	MakeByte	(0X100000D6);
	MakeByte	(0X100000D7);
	MakeByte	(0X100000D8);
	MakeByte	(0X100000D9);
	MakeByte	(0X100000DA);
	MakeByte	(0X100000DB);
	MakeByte	(0X100000DC);
	MakeByte	(0X100000DD);
	MakeByte	(0X100000DE);
	MakeByte	(0X100000DF);
	MakeByte	(0X100000E0);
	MakeByte	(0X100000E1);
	MakeByte	(0X100000E2);
	MakeByte	(0X100000E3);
	MakeByte	(0X100000E4);
	MakeByte	(0X100000E5);
	MakeByte	(0X100000E6);
	MakeByte	(0X100000E7);
	MakeByte	(0X100000E8);
	MakeByte	(0X100000E9);
	MakeByte	(0X100000EE);
	MakeByte	(0X100000EF);
	MakeByte	(0X100000F0);
	MakeByte	(0X100000F1);
	MakeByte	(0X100000F2);
	MakeWord	(0X100000F4);
	MakeWord	(0X100000F6);
	MakeWord	(0X100000F8);
	MakeWord	(0X100000FA);
	MakeWord	(0X100000FC);
	MakeWord	(0X100000FE);
	MakeWord	(0X10000100);
	MakeWord	(0X10000102);
	MakeWord	(0X10000104);
	MakeWord	(0X10000106);
	MakeWord	(0X10000108);
	MakeWord	(0X1000010A);
	MakeWord	(0X1000010C);
	MakeWord	(0X1000010E);
	MakeDword	(0X10000110);
	MakeDword	(0X10000114);
	MakeDword	(0X10000118);
	MakeDword	(0X1000011C);
	MakeDword	(0X10000120);
	MakeDword	(0X10000124);
	MakeDword	(0X10000128);
	MakeDword	(0X10000160);
	MakeByte	(0X10000164);
	MakeWord	(0X10000166);
	MakeByte	(0X10000168);
	MakeByte	(0X10000169);
	MakeByte	(0X1000016A);
	MakeWord	(0X1000016B);
	MakeWord	(0X1000016D);
	MakeByte	(0X1000016F);
	MakeByte	(0X10000170);
	MakeByte	(0X10000171);
	MakeByte	(0X10000172);
	MakeByte	(0X10000173);
	MakeByte	(0X10000174);
	MakeByte	(0X10000175);
	MakeByte	(0X10000176);
	MakeByte	(0X10000177);
	MakeByte	(0X10000178);
	MakeByte	(0X10000179);
	MakeByte	(0X1000017A);
	MakeByte	(0X1000017B);
	MakeByte	(0X1000017C);
	MakeByte	(0X1000017D);
	MakeByte	(0X1000017E);
	MakeWord	(0X10000180);
	MakeWord	(0X10000182);
	MakeWord	(0X10000184);
	MakeWord	(0X10000186);
	MakeWord	(0X10000188);
	MakeWord	(0X1000018A);
	MakeWord	(0X1000018C);
	MakeWord	(0X1000018E);
	MakeWord	(0X10000190);
	MakeWord	(0X10000192);
	MakeWord	(0X10000194);
	MakeWord	(0X10000196);
	MakeDword	(0X10000198);
	MakeDword	(0X1000019C);
	MakeByte	(0X100001AA);
	MakeDword	(0X100001AE);
	MakeWord	(0X100001B2);
	MakeDword	(0X100001B4);
	MakeWord	(0X100001B8);
	MakeDword	(0X100001BA);
	MakeWord	(0X100001BE);
	MakeDword	(0X100001C0);
	MakeWord	(0X100001C4);
	MakeDword	(0X100001C6);
	MakeWord	(0X100001CA);
	MakeWord	(0X100001D2);
	MakeWord	(0X100001D4);
	MakeWord	(0X100001D6);
	MakeWord	(0X100001D8);
	MakeWord	(0X100001DA);
	MakeWord	(0X100001DC);
	MakeWord	(0X100001DE);
	MakeWord	(0X100001E0);
	MakeWord	(0X100001E2);
	MakeWord	(0X100001E4);
	MakeWord	(0X100001E6);
	MakeWord	(0X100001E8);
	MakeWord	(0X100001EA);
	MakeWord	(0X100001EC);
	MakeWord	(0X100001EE);
	MakeByte	(0X10000214);
	MakeByte	(0X10000215);
	MakeByte	(0X10000216);
	MakeByte	(0X10000217);
	MakeByte	(0X10000218);
	MakeByte	(0X1000021A);
	MakeByte	(0X1000021B);
	MakeByte	(0X1000021C);
	MakeByte	(0X1000021D);
	MakeByte	(0X1000021E);
	MakeByte	(0X1000021F);
	MakeByte	(0X10000220);
	MakeByte	(0X10000221);
	MakeByte	(0X10000223);
	MakeByte	(0X10000224);
	MakeByte	(0X10000226);
	MakeByte	(0X10000227);
	MakeByte	(0X1000022A);
	MakeByte	(0X1000022B);
	MakeByte	(0X1000022C);
	MakeByte	(0X1000022D);
	MakeByte	(0X1000022E);
	MakeDword	(0X1000022F);
	MakeByte	(0X10000237);
	MakeDword	(0X10000238);
	MakeByte	(0X1000023C);
	MakeByte	(0X10000244);
	MakeByte	(0X10000246);
	MakeByte	(0X10000247);
	MakeWord	(0X10000248);
	MakeByte	(0X1000024A);
	MakeByte	(0X10000264);
	MakeByte	(0X10000265);
	MakeByte	(0X10000266);
	MakeByte	(0X10000267);
	MakeByte	(0X10000268);
	MakeByte	(0X10000269);
	MakeByte	(0X1000026A);
	MakeByte	(0X1000026B);
	MakeByte	(0X1000026C);
	MakeByte	(0X1000026D);
	MakeByte	(0X1000026E);
	MakeByte	(0X10000270);
	MakeByte	(0X10000271);
	MakeByte	(0X10000272);
	MakeByte	(0X10000273);
	MakeByte	(0X10000274);
	MakeByte	(0X10000275);
	MakeByte	(0X10000276);
	MakeByte	(0X10000277);
	MakeByte	(0X10000278);
	MakeByte	(0X10000279);
	MakeByte	(0X1000027A);
	MakeWord	(0X1000027C);
	MakeWord	(0X1000027E);
	MakeWord	(0X10000280);
	MakeWord	(0X10000282);
	MakeWord	(0X10000284);
	MakeWord	(0X10000286);
	MakeWord	(0X10000288);
	MakeWord	(0X1000028A);
	MakeWord	(0X1000028C);
	MakeWord	(0X1000028E);
	MakeArray	(0X10000290,	0X10);
	MakeByte	(0X10000311);
	MakeByte	(0X10000312);
	MakeByte	(0X10000313);
	MakeByte	(0X10000314);
	MakeByte	(0X10000315);
	MakeByte	(0X10000316);
	MakeByte	(0X10000317);
	MakeByte	(0X10000318);
	MakeByte	(0X10000319);
	MakeByte	(0X1000031A);
	MakeByte	(0X1000031B);
	MakeByte	(0X1000031C);
	MakeByte	(0X1000031D);
	MakeByte	(0X1000031E);
	MakeByte	(0X1000031F);
	MakeByte	(0X10000320);
	MakeByte	(0X10000321);
	MakeByte	(0X10000322);
	MakeByte	(0X10000323);
	MakeByte	(0X10000324);
	MakeByte	(0X10000325);
	MakeByte	(0X10000326);
	MakeByte	(0X10000327);
	MakeWord	(0X1000032A);
	MakeWord	(0X1000032C);
	MakeWord	(0X1000032E);
	MakeWord	(0X10000330);
	MakeArray	(0X10000332,	0X2);
	MakeDword	(0X10000334);
	MakeDword	(0X10000338);
	MakeDword	(0X1000033C);
	MakeDword	(0X10000340);
	MakeDword	(0X10000344);
	MakeDword	(0X10000348);
	MakeDword	(0X1000034C);
	MakeByte	(0X10000350);
	MakeByte	(0X10000351);
	MakeByte	(0X10000352);
	MakeDword	(0X10000354);
	MakeDword	(0X10000358);
	MakeWord	(0X1000047C);
	MakeWord	(0X1000047E);
	MakeWord	(0X10000480);
	MakeWord	(0X10000482);
	MakeWord	(0X10000484);
	MakeByte	(0X10000488);
	MakeDword	(0X10000489);
	MakeDword	(0X1000048D);
	MakeArray	(0X10000491,	0X3);
	MakeDword	(0X10000494);
	MakeDword	(0X10000498);
	MakeName	(0X10000498,	"OS_CPU_ExceptStkBase");
	MakeByte	(0X1000049C);
	MakeArray	(0X1000049C,	0X4);
	MakeName	(0X1000049C,	"OSPrioTbl");
	MakeDword	(0X100004A0);
	MakeName	(0X100004A0,	"OSStatTaskCtr");
	MakeByte	(0X100004A4);
	MakeName	(0X100004A4,	"OSIntNestingCtr");
	MakeByte	(0X100004A5);
	MakeName	(0X100004A5,	"OSRunning");
	MakeArray	(0X100004A6,	0X2);
	MakeStruct	(0X100004A8,	"OS_MSG_POOL");
	MakeName	(0X100004A8,	"OSMsgPool");
	MakeByte	(0X100004B1);
	MakeName	(0X100004B1,	"OSPrioHighRdy");
	MakeDword	(0X100004B4);
	MakeName	(0X100004B4,	"OSSchedLockTimeBegin");
	MakeDword	(0X100004B8);
	MakeName	(0X100004B8,	"OSSchedLockTimeMax");
	MakeDword	(0X100004BC);
	MakeName	(0X100004BC,	"OSSchedLockTimeMaxCur");
	MakeByte	(0X100004C0);
	MakeName	(0X100004C0,	"OSSchedLockNestingCtr");
	MakeArray	(0X100004C1,	0X3);
	MakeDword	(0X100004C4);
	MakeName	(0X100004C4,	"OSSemDbgListPtr");
	MakeWord	(0X100004C8);
	MakeName	(0X100004C8,	"OSSemQty");
	MakeArray	(0X100004CA,	0X2);
	MakeDword	(0X100004CC);
	MakeName	(0X100004CC,	"OSTaskCtxSwCtr");
	MakeDword	(0X100004D0);
	MakeName	(0X100004D0,	"OSTaskDbgListPtr");
	MakeWord	(0X100004D4);
	MakeName	(0X100004D4,	"OSTaskQty");
	MakeArray	(0X100004D6,	0X2);
	MakeDword	(0X100004D8);
	MakeName	(0X100004D8,	"OSTickCtr");
	MakeDword	(0X100004DC);
	MakeName	(0X100004DC,	"OSTickTaskTimeMax");
	MakeDword	(0X100004E0);
	MakeName	(0X100004E0,	"OSTCBCurPtr");
	MakeDword	(0X100004E4);
	MakeName	(0X100004E4,	"OSTCBHighRdyPtr");
	MakeWord	(0X100004E8);
	MakeName	(0X100004E8,	"CPU_IntDisMeasCtr");
	MakeWord	(0X100004EA);
	MakeName	(0X100004EA,	"CPU_IntDisNestCtr");
	MakeDword	(0X100004EC);
	MakeDword	(0X100004F0);
	MakeName	(0X100004F0,	"CPU_IntDisMeasStart_cnts");
	MakeDword	(0X100004F4);
	MakeName	(0X100004F4,	"CPU_IntDisMeasStop_cnts");
	MakeDword	(0X100004F8);
	MakeName	(0X100004F8,	"CPU_IntDisMeasOvrhd_cnts");
	MakeDword	(0X100004FC);
	MakeName	(0X100004FC,	"CPU_IntDisMeasMaxCur_cnts");
	MakeDword	(0X10000500);
	MakeName	(0X10000500,	"CPU_IntDisMeasMax_cnts");
	MakeWord	(0X10000504);
	MakeWord	(0X10000506);
	MakeWord	(0X10000508);
	MakeArray	(0X1000050A,	0X2);
	MakeDword	(0X1000050C);
	MakeDword	(0X10000510);
	MakeDword	(0X10000514);
	MakeDword	(0X10000518);
	MakeByte	(0X1000051C);
	MakeByte	(0X1000051D);
	MakeByte	(0X1000051E);
	MakeByte	(0X10000520);
	MakeByte	(0X10000521);
	MakeArray	(0X10000522,	0X6);
	MakeDword	(0X10000528);
	MakeArray	(0X1000052C,	0X4);
	MakeDword	(0X10000530);
	MakeDword	(0X10000534);
	MakeByte	(0X1000053D);
	MakeArray	(0X1000053E,	0X2);
	MakeByte	(0X10000540);
	MakeByte	(0X10000541);
	MakeByte	(0X10000542);
	MakeByte	(0X10000543);
	MakeWord	(0X10000544);
	MakeDword	(0X1000054C);
	MakeDword	(0X10000550);
	MakeDword	(0X10000554);
	MakeDword	(0X10000558);
	MakeWord	(0X1000055C);
	MakeArray	(0X1000055E,	0X2);
	MakeByte	(0X10000560);
	MakeByte	(0X10000561);
	MakeWord	(0X10000562);
	MakeByte	(0X10000564);
	MakeWord	(0X10000566);
	MakeDword	(0X100005C8);
	MakeDword	(0X100005CC);
	MakeDword	(0X100005D0);
	MakeByte	(0X100005D4);
	MakeByte	(0X100005D5);
	MakeArray	(0X100005D6,	0X2);
	MakeDword	(0X100005D8);
	MakeArray	(0X100005D8,	0X4);
	MakeName	(0X100005D8,	"status_uid");
	MakeByte	(0X100005E8);
	MakeName	(0X100005E8,	"status_DEFVER");
	MakeByte	(0X100005E9);
	MakeArray	(0X100005E9,	0X5);
	MakeName	(0X100005E9,	"status_RC");
	MakeByte	(0X100005EE);
	MakeName	(0X100005EE,	"zone_is_fcc");
	MakeByte	(0X100005EF);
	MakeArray	(0X100005EF,	0X6);
	MakeName	(0X100005EF,	"status_MYNAME");
	MakeWord	(0X100005F5);
	MakeName	(0X100005F5,	"status_MYPASSWORD");
	MakeByte	(0X100005F7);
	MakeName	(0X100005F7,	"status_function");
	MakeDword	(0X100005F8);
	MakeName	(0X100005F8,	"status_GROUP_ID");
	MakeByte	(0X100005FC);
	MakeArray	(0X100005FC,	0X6);
	MakeName	(0X100005FC,	"status_GROUP_NAME");
	MakeWord	(0X10000602);
	MakeName	(0X10000602,	"status_GROUP_PASSWORD");
	MakeByte	(0X10000604);
	MakeName	(0X10000604,	"status_MYIP");
	MakeByte	(0X10000605);
	MakeName	(0X10000605,	"status_STATUE");
	MakeByte	(0X10000606);
	MakeName	(0X10000606,	"status_GIMBAL_CTLIP");
	MakeByte	(0X10000607);
	MakeName	(0X10000607,	"zone_is_on");
	MakeByte	(0X1000064A);
	MakeByte	(0X1000064B);
	MakeByte	(0X1000064C);
	MakeDword	(0X1000064D);
	MakeByte	(0X10000651);
	MakeByte	(0X10000652);
	MakeByte	(0X10000653);
	MakeByte	(0X10000654);
	MakeByte	(0X10000655);
	MakeByte	(0X10000657);
	MakeByte	(0X10000658);
	MakeByte	(0X10000659);
	MakeDword	(0X1000065A);
	MakeArray	(0X1000065E,	0X2);
	MakeByte	(0X10000660);
	MakeByte	(0X10000661);
	MakeDword	(0X10000662);
	MakeByte	(0X1000066E);
	MakeByte	(0X100006F1);
	MakeByte	(0X100006F3);
	MakeDword	(0X100006F4);
	MakeByte	(0X100006F8);
	MakeByte	(0X100006F9);
	MakeArray	(0X100006FA,	0X2);
	MakeStruct	(0X100006FC,	"OS_TCB");
	MakeStruct	(0X10000BAC,	"OS_TCB");
	MakeName	(0X10000BAC,	"strct_10000BAC");
	MakeStruct	(0X1000190C,	"OS_TCB");
	MakeName	(0X1000190C,	"strct_1000190C");
	MakeStruct	(0X10001DBC,	"OS_TCB");
	MakeName	(0X10001DBC,	"strct_10001DBC");
	MakeStruct	(0X1000226C,	"OS_TCB");
	MakeName	(0X1000226C,	"strct_1000226C");
	MakeDword	(0X1000271C);
	MakeDword	(0X10002720);
	MakeDword	(0X10002724);
	MakeByte	(0X10002728);
	MakeByte	(0X10002734);
	MakeByte	(0X10002735);
	MakeByte	(0X10002736);
	MakeDword	(0X10002739);
	MakeDword	(0X1000273D);
	MakeWord	(0X10002741);
	MakeByte	(0X10002743);
	MakeByte	(0X1000275F);
	MakeByte	(0X10002760);
	MakeByte	(0X10002761);
	MakeByte	(0X10002762);
	MakeByte	(0X10002763);
	MakeDword	(0X10002764);
	MakeDword	(0X10002768);
	MakeWord	(0X1000276C);
	MakeDword	(0X1000279E);
	MakeByte	(0X100027A7);
	MakeByte	(0X100027A8);
	MakeByte	(0X100027A9);
	MakeByte	(0X100027AA);
	MakeByte	(0X100027AB);
	MakeByte	(0X100027AC);
	MakeByte	(0X100027AD);
	MakeByte	(0X100027AE);
	MakeByte	(0X100027AF);
	MakeByte	(0X100027B0);
	MakeByte	(0X100027B1);
	MakeByte	(0X100027B2);
	MakeByte	(0X100027B3);
	MakeByte	(0X100027B4);
	MakeByte	(0X1000280E);
	MakeArray	(0X1000280F,	0X11);
	MakeDword	(0X10002A50);
	MakeDword	(0X10002A54);
	MakeArray	(0X10002A58,	0X8);
	MakeDword	(0X10002A60);
	MakeDword	(0X10002A64);
	MakeDword	(0X10002B74);
	MakeDword	(0X10002B78);
	MakeDword	(0X10002B84);
	MakeDword	(0X10002B88);
	MakeDword	(0X10002D98);
	MakeDword	(0X10002D9C);
	MakeDword	(0X10002DA8);
	MakeDword	(0X10002DAC);
	MakeDword	(0X10002EBC);
	MakeDword	(0X10002EC0);
	MakeDword	(0X10002ECC);
	MakeDword	(0X10002ED0);
	MakeDword	(0X10002F20);
	MakeDword	(0X10002F24);
	MakeArray	(0X10002F28,	0X8);
	MakeDword	(0X10002F30);
	MakeDword	(0X10002F34);
	MakeDword	(0X10003258);
	MakeDword	(0X1000325C);
	MakeDword	(0X10003268);
	MakeDword	(0X1000326C);
	MakeDword	(0X1000337C);
	MakeDword	(0X10003380);
	MakeDword	(0X1000338C);
	MakeDword	(0X10003398);
	MakeArray	(0X1000339C,	0X4);
	MakeByte	(0X100033A0);
	MakeDword	(0X100033A1);
	MakeDword	(0X100033A5);
	MakeWord	(0X100033A9);
	MakeByte	(0X100033AB);
	MakeDword	(0X100033AC);
	MakeByte	(0X100033D0);
	MakeByte	(0X100033D1);
	MakeByte	(0X10003708);
	MakeByte	(0X1000377A);
	MakeByte	(0X10003808);
	MakeByte	(0X10003908);
	MakeByte	(0X1000397B);
	MakeDword	(0X10003A08);
	MakeDword	(0X10003A0C);
	MakeWord	(0X10003A10);
	MakeDword	(0X10003A12);
	MakeWord	(0X10003A16);
	MakeWord	(0X10003A18);
	MakeByte	(0X10003A1A);
	MakeByte	(0X10003A1B);
	MakeWord	(0X10003AD0);
	MakeWord	(0X10003AD2);
	MakeWord	(0X10003AD4);
	MakeWord	(0X10003AD6);
	MakeWord	(0X10003AD8);
	MakeWord	(0X10003ADA);
	MakeWord	(0X10003ADC);
	MakeWord	(0X10003ADE);
	MakeWord	(0X10003AE0);
	MakeByte	(0X10003AE2);
	MakeByte	(0X10003AE3);
	MakeWord	(0X10003AE4);
	MakeWord	(0X10003AE6);
	MakeWord	(0X10003AE8);
	MakeWord	(0X10003AEA);
	MakeWord	(0X10003AEC);
	MakeArray	(0X10003AEE,	0X2);
	MakeByte	(0X10003B5B);
	MakeByte	(0X10003B94);
	MakeByte	(0X10003B95);
	MakeByte	(0X10003B96);
	MakeByte	(0X10003BAD);
	MakeByte	(0X10003BAE);
	MakeByte	(0X10003BAF);
	MakeDword	(0X10003D02);
	MakeWord	(0X10003D06);
	MakeWord	(0X10003D08);
	MakeByte	(0X10003D0A);
	MakeByte	(0X10003D0B);
	MakeByte	(0X10003D0C);
	MakeByte	(0X10003D0D);
	MakeByte	(0X10003D0E);
	MakeByte	(0X10003D0F);
	MakeDword	(0X10003D10);
	MakeDword	(0X10003D14);
	MakeWord	(0X10003D18);
	MakeWord	(0X10003D1A);
	MakeWord	(0X10003D1C);
	MakeWord	(0X10003D1E);
	MakeByte	(0X10003D20);
	MakeWord	(0X10003D21);
	MakeDword	(0X10003D95);
	MakeWord	(0X10003D99);
	MakeWord	(0X10003D9B);
	MakeWord	(0X10003D9D);
	MakeWord	(0X10003D9F);
	MakeWord	(0X10003DA1);
	MakeByte	(0X10003DA3);
	MakeByte	(0X10003DA4);
	MakeWord	(0X10003DA5);
	MakeByte	(0X10003E21);
	MakeByte	(0X10003E22);
	MakeByte	(0X10003F23);
	MakeByte	(0X10003F24);
	MakeWord	(0X100040C8);
	MakeByte	(0X100040DA);
	MakeByte	(0X100041D8);
	MakeByte	(0X100041D9);
	MakeByte	(0X100041DB);
	MakeByte	(0X100041DC);
	MakeByte	(0X100041DD);
	MakeByte	(0X100041DF);
	MakeByte	(0X100041E0);
	MakeArray	(0X100041E1,	0X3);
	MakeDword	(0X100041E4);
	MakeDword	(0X100041E8);
	MakeDword	(0X1000423C);
	MakeDword	(0X10004240);
	MakeByte	(0X10004244);
	MakeArray	(0X10004245,	0X3);
	MakeDword	(0X10004248);
	MakeByte	(0X1000424C);
	MakeArray	(0X1000424D,	0X3);
	MakeDword	(0X10004250);
	MakeByte	(0X10004254);
	MakeByte	(0X10004255);
	MakeArray	(0X10004256,	0X2);
	MakeDword	(0X10004258);
	MakeByte	(0X1000425C);
	MakeByte	(0X1000425D);
	MakeByte	(0X1000425E);
	MakeByte	(0X1000425F);
	MakeDword	(0X10004260);
	MakeByte	(0X10004264);
	MakeByte	(0X10004265);
	MakeByte	(0X10004266);
	MakeByte	(0X10004267);
	MakeDword	(0X10004268);
	MakeByte	(0X1000426C);
	MakeByte	(0X1000426D);
	MakeByte	(0X1000426E);
	MakeByte	(0X1000426F);
	MakeDword	(0X10004270);
	MakeDword	(0X10004274);
	MakeByte	(0X10004278);
	MakeWord	(0X1000427A);
	MakeWord	(0X1000427C);
	MakeArray	(0X1000427E,	0X2);
	MakeDword	(0X10004280);
	MakeDword	(0X10004284);
	MakeByte	(0X10004288);
	MakeByte	(0X10004289);
	MakeByte	(0X1000428A);
	MakeByte	(0X1000428B);
	MakeByte	(0X1000428C);
	MakeByte	(0X1000428D);
	MakeByte	(0X1000428E);
	MakeByte	(0X1000428F);
	MakeByte	(0X10004290);
	MakeByte	(0X10004291);
	MakeByte	(0X10004292);
	MakeByte	(0X10004293);
	MakeByte	(0X10004294);
	MakeByte	(0X10004295);
	MakeByte	(0X10004296);
	MakeByte	(0X10004297);
	MakeByte	(0X10004298);
	MakeByte	(0X10004299);
	MakeByte	(0X1000429A);
	MakeByte	(0X1000429B);
	MakeByte	(0X1000429C);
	MakeByte	(0X1000429D);
	MakeByte	(0X1000429E);
	MakeByte	(0X1000429F);
	MakeByte	(0X100042A0);
	MakeByte	(0X10004321);
	MakeDword	(0X1000432D);
	MakeByte	(0X10004341);
	MakeByte	(0X10004401);
	MakeByte	(0X1000440D);
	MakeByte	(0X10004421);
	MakeByte	(0X10004441);
	MakeByte	(0X10004462);
	MakeByte	(0X10004463);
	MakeDword	(0X10004464);
	MakeByte	(0X10004468);
	MakeByte	(0X1000446F);
	MakeByte	(0X10004471);
	MakeByte	(0X10004475);
	MakeByte	(0X1000447D);
	MakeArray	(0X1000447E,	0X2);
	MakeByte	(0X10004480);
	MakeByte	(0X10004481);
	MakeByte	(0X10004482);
	MakeByte	(0X10004483);
	MakeByte	(0X10004484);
	MakeByte	(0X10004566);
	MakeByte	(0X1000457C);
	MakeByte	(0X1000457D);
	MakeByte	(0X1000457E);
	MakeWord	(0X10004580);
	MakeByte	(0X10004582);
	MakeByte	(0X10004583);
	MakeDword	(0X10004584);
	MakeDword	(0X10004588);
	MakeDword	(0X1000458C);
	MakeDword	(0X10004590);
	MakeByte	(0X10004594);
	MakeArray	(0X10004595,	0X3);
	MakeDword	(0X10004598);
	MakeDword	(0X1000459C);
	MakeDword	(0X100045A0);
	MakeByte	(0X100045A4);
	MakeArray	(0X100045A5,	0X3);
	MakeDword	(0X100045A8);
	MakeByte	(0X100045AC);
	MakeArray	(0X100045AD,	0X3);
	MakeDword	(0X100045B0);
	MakeByte	(0X100045B4);
	MakeArray	(0X100045B5,	0X3);
	MakeDword	(0X100045B8);
	MakeByte	(0X100045BC);
	MakeArray	(0X100045BD,	0X3);
	MakeDword	(0X100045C0);
	MakeByte	(0X100045C4);
	MakeArray	(0X100045C5,	0X3);
	MakeByte	(0X100045C8);
	MakeByte	(0X100045C9);
	MakeWord	(0X100045CA);
	MakeByte	(0X100045CC);
	MakeByte	(0X100045CD);
	MakeWord	(0X100045CE);
	MakeByte	(0X100045D0);
	MakeByte	(0X100045D1);
	MakeWord	(0X100045D2);
	MakeDword	(0X10004608);
	MakeDword	(0X1000460C);
	MakeDword	(0X10004610);
	MakeDword	(0X10004614);
	MakeStruct	(0X100054DC,	"OS_TICK_SPOKE");
	MakeArray	(0X100054DC,	0X11);
	MakeName	(0X100054DC,	"OSCfg_TickWheel");
	MakeStruct	(0X10005614,	"OS_RDY_LIST");
	MakeArray	(0X10005614,	0X1E);
	MakeName	(0X10005614,	"OSRdyList");
	MakeStruct	(0X1000577C,	"OS_TCB");
	MakeName	(0X1000577C,	"OSTickTaskTCB");
	MakeByte	(0X100058AC);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_5(void) {
        auto x;
#define id x

	MakeByte	(0X100058AD);
	MakeByte	(0X100058AE);
	MakeByte	(0X100058AF);
	MakeByte	(0X100058B0);
	MakeByte	(0X100058B1);
	MakeByte	(0X100058B2);
	MakeByte	(0X100058B3);
	MakeByte	(0X100058B4);
	MakeByte	(0X100058B5);
	MakeByte	(0X100058B6);
	MakeByte	(0X100058B7);
	MakeByte	(0X100058B8);
	MakeByte	(0X100058B9);
	MakeByte	(0X100058BA);
	MakeByte	(0X100058BB);
	MakeByte	(0X100058BC);
	MakeByte	(0X100058BD);
	MakeByte	(0X100058BE);
	MakeByte	(0X100058BF);
	MakeByte	(0X100058C0);
	MakeByte	(0X100058C1);
	MakeByte	(0X100058C2);
	MakeByte	(0X100058C3);
	MakeByte	(0X100058C4);
	MakeByte	(0X100058C5);
	MakeByte	(0X100058C6);
	MakeByte	(0X100058C7);
	MakeByte	(0X100058C8);
	MakeByte	(0X100058C9);
	MakeByte	(0X100058CA);
	MakeByte	(0X100058CB);
	MakeByte	(0X100058CC);
	MakeByte	(0X100058CD);
	MakeByte	(0X100058CE);
	MakeByte	(0X100058CF);
	MakeByte	(0X100058D0);
	MakeByte	(0X100058D1);
	MakeByte	(0X100058D2);
	MakeByte	(0X100058D3);
	MakeByte	(0X100058D4);
	MakeByte	(0X100058D5);
	MakeByte	(0X100058D6);
	MakeByte	(0X100058D7);
	MakeByte	(0X100058D8);
	MakeByte	(0X100058D9);
	MakeDword	(0X100058FE);
	MakeByte	(0X10005902);
	MakeByte	(0X10005905);
	MakeDword	(0X10005907);
	MakeDword	(0X10005915);
	MakeDword	(0X10005919);
	MakeDword	(0X1000591D);
	MakeByte	(0X10005921);
	MakeWord	(0X10005922);
	MakeByte	(0X10005924);
	MakeByte	(0X10005925);
	MakeByte	(0X10005926);
	MakeByte	(0X10005927);
	MakeByte	(0X10005928);
	MakeDword	(0X100059E8);
	MakeDword	(0X100059EC);
	MakeDword	(0X10005BF0);
	MakeDword	(0X10005BF4);
	MakeDword	(0X10005EF8);
	MakeDword	(0X10005F04);
	MakeDword	(0X10005F0C);
	MakeDword	(0X10005F20);
	MakeArray	(0X10005F24,	0XC);
	MakeDword	(0X10005F30);
	MakeDword	(0X10006120);
	MakeDword	(0X10006124);
	MakeDword	(0X10006128);
	MakeArray	(0X1000612C,	0X4);
	MakeDword	(0X10006130);
	MakeDword	(0X10006134);
	MakeDword	(0X10006138);
	MakeDword	(0X10006740);
	MakeDword	(0X10006744);
	MakeDword	(0X10006748);
	MakeDword	(0X1000674C);
	MakeDword	(0X10006750);
	MakeDword	(0X10006754);
	MakeDword	(0X10006758);
	MakeArray	(0X1000675C,	0X4);
	MakeDword	(0X10006760);
	MakeDword	(0X10006764);
	MakeDword	(0X10006768);
	MakeDword	(0X100067F0);
	MakeDword	(0X100067F4);
	MakeDword	(0X100067F8);
	MakeDword	(0X100067FC);
	MakeDword	(0X10006840);
	MakeDword	(0X10006844);
	MakeDword	(0X10006848);
	MakeArray	(0X1000684C,	0X4);
	MakeDword	(0X10006850);
	MakeDword	(0X10006854);
	MakeDword	(0X10006858);
	MakeDword	(0X1000685C);
	MakeDword	(0X10006A60);
	MakeDword	(0X10006A64);
	MakeDword	(0X10006A68);
	MakeArray	(0X10006A6C,	0X4);
	MakeDword	(0X10006A70);
	MakeDword	(0X10006A74);
	MakeDword	(0X10006A78);
	MakeDword	(0X10006A7C);
	MakeDword	(0X10007F70);
	MakeDword	(0X10007F74);
	MakeArray	(0X10007F78,	0X88);
	MakeByte	(0X40000000);
	MakeArray	(0X40000001,	0X3);
	MakeDword	(0X40000004);
	MakeByte	(0X40000008);
	MakeArray	(0X40000009,	0X3);
	MakeDword	(0X4000000C);
	MakeDword	(0X40000010);
	MakeDword	(0X40004000);
	MakeDword	(0X40004004);
	MakeDword	(0X40004008);
	MakeDword	(0X4000400C);
	MakeDword	(0X40004014);
	MakeDword	(0X40004018);
	MakeDword	(0X4000401C);
	MakeDword	(0X40004020);
	MakeDword	(0X40004070);
	MakeDword	(0X40008000);
	MakeDword	(0X40008004);
	MakeDword	(0X40008008);
	MakeDword	(0X4000800C);
	MakeDword	(0X40008014);
	MakeDword	(0X40008018);
	MakeDword	(0X4000801C);
	MakeDword	(0X40008020);
	MakeDword	(0X40008024);
	MakeDword	(0X40008070);
	MakeByte	(0X4000C000);
	MakeArray	(0X4000C001,	0X3);
	MakeDword	(0X4000C004);
	MakeDword	(0X4000C008);
	MakeByte	(0X4000C00C);
	MakeByte	(0X4000C014);
	MakeByte	(0X4000C028);
	MakeByte	(0X40010000);
	MakeArray	(0X40010001,	0X3);
	MakeDword	(0X40010004);
	MakeDword	(0X40010008);
	MakeByte	(0X4001000C);
	MakeByte	(0X40010014);
	MakeDword	(0X40010028);
	MakeDword	(0X40020000);
	MakeDword	(0X40020004);
	MakeDword	(0X40020008);
	MakeDword	(0X4002000C);
	MakeStruct	(0X40024000,	"LPC_RTC_TypeDef");
	MakeDword	(0X400280AC);
	MakeDword	(0X400280B4);
	MakeDword	(0X4002C000);
	MakeDword	(0X4002C004);
	MakeDword	(0X4002C00C);
	MakeDword	(0X4002C010);
	MakeArray	(0X4002C014,	0X2C);
	MakeDword	(0X4002C040);
	MakeDword	(0X4003C000);
	MakeDword	(0X4003C004);
	MakeDword	(0X4003C008);
	MakeDword	(0X4003C00C);
	MakeDword	(0X4003C010);
	MakeDword	(0X4003C014);
	MakeDword	(0X40044000);
	MakeDword	(0X40044004);
	MakeDword	(0X40044008);
	MakeDword	(0X4004400C);
	MakeDword	(0X40044010);
	MakeDword	(0XE0001000);
	MakeDword	(0XE0001004);
	MakeDword	(0XE000E004);
	MakeArray	(0XE000E008,	0X8);
	MakeDword	(0XE000E010);
	MakeName	(0XE000E010,	"NVIC_SYSTICK_CTRL");
	MakeDword	(0XE000E014);
	MakeName	(0XE000E014,	"NVIC_SYSTICK_LOAD");
	MakeRptCmt	(0XE000ED04,	"Interrupt control state register.");
	MakeDword	(0XE000ED04);
	MakeName	(0XE000ED04,	"NVIC_INT_CTRL");
	MakeArray	(0XE000ED08,	0X8);
	MakeDword	(0XE000ED10);
	MakeArray	(0XE000ED14,	0X4);
	MakeDword	(0XE000ED18);
	MakeDword	(0XE000ED1C);
	MakeRptCmt	(0XE000ED20,	"System priority register (priority 14).");
	MakeDword	(0XE000ED20);
	MakeName	(0XE000ED20,	"NVIC_SYSPRI2");
	MakeDword	(0XE000ED24);
	MakeDword	(0XE000EDFC);
	MakeArray	(0XE000EE00,	0X1200);
}

static Functions_0(void) {

	MakeFunction    (0X180,0X210);
	SetFunctionFlags(0X180,0x400);
	MakeFunction    (0X210,0X230);
	SetFunctionFlags(0X210,0x400);
	MakeFrame(0X210, 0X18, 0, 0);
	MakeFunction    (0X230,0X234);
	SetFunctionFlags(0X230,0x400);
	MakeFrame(0X230, 0X8, 0, 0);
	MakeFunction    (0X234,0X244);
	SetFunctionFlags(0X234,0x401);
	MakeFunction    (0X248,0X254);
	SetFunctionFlags(0X248,0x401);
	MakeFrame(0X248, 0X8, 0, 0);
	MakeFunction    (0X254,0X28A);
	SetFunctionFlags(0X254,0x400);
	MakeFrame(0X254, 0X90, 0, 0);
	MakeFunction    (0X28A,0X396);
	SetFunctionFlags(0X28A,0x400);
	MakeFrame(0X28A, 0X18, 0, 0);
	MakeFunction    (0X396,0X5AE);
	SetFunctionFlags(0X396,0x400);
	MakeFrame(0X396, 0X38, 0, 0);
	MakeFunction    (0X5B0,0X634);
	SetFunctionFlags(0X5B0,0x400);
	MakeFrame(0X5B0, 0X10, 0, 0);
	MakeFunction    (0X634,0X63C);
	SetFunctionFlags(0X634,0x400);
	MakeFunction    (0X674,0X750);
	SetFunctionFlags(0X674,0x400);
	MakeFrame(0X674, 0X8, 0, 0);
	MakeFunction    (0X750,0X798);
	SetFunctionFlags(0X750,0x400);
	MakeFrame(0X750, 0X8, 0, 0);
	MakeFunction    (0X798,0XCFA);
	SetFunctionFlags(0X798,0x401);
	MakeFrame(0X798, 0X40, 0, 0);
	MakeLocal(0X798, 0XCFA, "[bp-0X38]", "stk_limit");
	MakeLocal(0X798, 0XCFA, "[bp-0X30]", "q_size");
	MakeLocal(0X798, 0XCFA, "[bp-0X2C]", "time_quanta");
	MakeLocal(0X798, 0XCFA, "[bp-0X28]", "p_ext");
	MakeLocal(0X798, 0XCFA, "[bp-0X10]", "p_err");
	MakeFunction    (0XCFA,0XE18);
	SetFunctionFlags(0XCFA,0x400);
	MakeFrame(0XCFA, 0X40, 0, 0);
	MakeLocal(0XCFA, 0XE18, "[bp-0X30]", "q_size");
	MakeLocal(0XCFA, 0XE18, "[bp-0X2C]", "time_quanta");
	MakeLocal(0XCFA, 0XE18, "[bp-0X28]", "p_ext");
	MakeLocal(0XCFA, 0XE18, "[bp-0X1C]", "p_err");
	MakeFunction    (0XE50,0XE84);
	SetFunctionFlags(0XE50,0x400);
	MakeFunction    (0XE84,0XEB8);
	SetFunctionFlags(0XE84,0x400);
	MakeFunction    (0XEB8,0XEEC);
	SetFunctionFlags(0XEB8,0x400);
	MakeFunction    (0XEEC,0XF00);
	SetFunctionFlags(0XEEC,0x400);
	MakeFunction    (0XF00,0XF14);
	SetFunctionFlags(0XF00,0x400);
	MakeFunction    (0XF14,0XF28);
	SetFunctionFlags(0XF14,0x400);
	MakeFunction    (0XF28,0XF68);
	SetFunctionFlags(0XF28,0x400);
	MakeFunction    (0XF68,0XFDE);
	SetFunctionFlags(0XF68,0x400);
	MakeFrame(0XF68, 0XC, 0, 0);
	MakeFunction    (0XFDE,0X10F0);
	SetFunctionFlags(0XFDE,0x400);
	MakeFrame(0XFDE, 0X10, 0, 0);
	MakeFunction    (0X10F0,0X1162);
	SetFunctionFlags(0X10F0,0x400);
	MakeFrame(0X10F0, 0X8, 0, 0);
	MakeFunction    (0X1162,0X119C);
	SetFunctionFlags(0X1162,0x400);
	MakeFrame(0X1162, 0X4, 0, 0);
	MakeFunction    (0X119C,0X120A);
	SetFunctionFlags(0X119C,0x400);
	MakeFrame(0X119C, 0X10, 0, 0);
	MakeFunction    (0X120A,0X1226);
	SetFunctionFlags(0X120A,0x400);
	MakeFunction    (0X1226,0X1352);
	SetFunctionFlags(0X1226,0x400);
	MakeFrame(0X1226, 0X20, 0, 0);
	MakeFunction    (0X1352,0X13E6);
	SetFunctionFlags(0X1352,0x400);
	MakeFrame(0X1352, 0X14, 0, 0);
	MakeFunction    (0X13E6,0X1414);
	SetFunctionFlags(0X13E6,0x400);
	MakeFunction    (0X1414,0X149C);
	SetFunctionFlags(0X1414,0x400);
	MakeFrame(0X1414, 0X10, 0, 0);
	MakeFunction    (0X149C,0X17DA);
	SetFunctionFlags(0X149C,0x400);
	MakeFrame(0X149C, 0X28, 0, 0);
	MakeFunction    (0X17DA,0X17E6);
	SetFunctionFlags(0X17DA,0x400);
	MakeFunction    (0X17E6,0X1BA6);
	SetFunctionFlags(0X17E6,0x400);
	MakeFrame(0X17E6, 0X20, 0, 0);
	MakeFunction    (0X1BA6,0X1C44);
	SetFunctionFlags(0X1BA6,0x400);
	MakeFrame(0X1BA6, 0X10, 0, 0);
	MakeFunction    (0X1C44,0X1D7E);
	SetFunctionFlags(0X1C44,0x400);
	MakeFrame(0X1C44, 0X1C, 0, 0);
	MakeFunction    (0X1D7E,0X1DD8);
	SetFunctionFlags(0X1D7E,0x400);
	MakeFrame(0X1D7E, 0X4, 0, 0);
	MakeFunction    (0X1DD8,0X1F6C);
	SetFunctionFlags(0X1DD8,0x400);
	MakeFrame(0X1DD8, 0X18, 0, 0);
	MakeFunction    (0X1F6C,0X2078);
	SetFunctionFlags(0X1F6C,0x400);
	MakeFrame(0X1F6C, 0X8, 0, 0);
	MakeFunction    (0X2078,0X2110);
	SetFunctionFlags(0X2078,0x400);
	MakeFrame(0X2078, 0X10, 0, 0);
	MakeFunction    (0X2110,0X21F8);
	SetFunctionFlags(0X2110,0x400);
	MakeFrame(0X2110, 0X20, 0, 0);
	MakeFunction    (0X21F8,0X2266);
	SetFunctionFlags(0X21F8,0x400);
	MakeFrame(0X21F8, 0X8, 0, 0);
	MakeFunction    (0X2266,0X2316);
	SetFunctionFlags(0X2266,0x400);
	MakeFrame(0X2266, 0X18, 0, 0);
	MakeFunction    (0X2316,0X2442);
	SetFunctionFlags(0X2316,0x400);
	MakeFrame(0X2316, 0X24, 0, 0);
	MakeFunction    (0X2442,0X25A6);
	SetFunctionFlags(0X2442,0x401);
	MakeFrame(0X2442, 0X10, 0, 0);
	MakeLocal(0X2442, 0X25A6, "[bp-0X8]", "p_err");
	MakeFunction    (0X25D8,0X276A);
	SetFunctionFlags(0X25D8,0x400);
	MakeFrame(0X25D8, 0X38, 0, 0);
	MakeFunction    (0X276A,0X2788);
	SetFunctionFlags(0X276A,0x400);
	MakeFunction    (0X2788,0X27C2);
	SetFunctionFlags(0X2788,0x400);
	MakeFrame(0X2788, 0X10, 0, 0);
	MakeFunction    (0X27C2,0X27DE);
	SetFunctionFlags(0X27C2,0x400);
	MakeFunction    (0X27DE,0X2832);
	SetFunctionFlags(0X27DE,0x400);
	MakeFunction    (0X2832,0X28C2);
	SetFunctionFlags(0X2832,0x400);
	MakeFrame(0X2832, 0X18, 0, 0);
	MakeFunction    (0X28C2,0X29B4);
	SetFunctionFlags(0X28C2,0x400);
	MakeFrame(0X28C2, 0X30, 0, 0);
	MakeFunction    (0X29B4,0X2A6C);
	SetFunctionFlags(0X29B4,0x400);
	MakeFrame(0X29B4, 0X28, 0, 0);
	MakeFunction    (0X2A6C,0X2ADC);
	SetFunctionFlags(0X2A6C,0x400);
	MakeFrame(0X2A6C, 0X20, 0, 0);
	MakeFunction    (0X2ADC,0X2B10);
	SetFunctionFlags(0X2ADC,0x400);
	MakeFrame(0X2ADC, 0X18, 0, 0);
	MakeFunction    (0X2B10,0X2BCA);
	SetFunctionFlags(0X2B10,0x400);
	MakeFrame(0X2B10, 0X28, 0, 0);
	MakeFunction    (0X2BCA,0X2C22);
	SetFunctionFlags(0X2BCA,0x400);
	MakeFrame(0X2BCA, 0X30, 0, 0);
	MakeFunction    (0X2C22,0X2C54);
	SetFunctionFlags(0X2C22,0x400);
	MakeFrame(0X2C22, 0X18, 0, 0);
	MakeFunction    (0X2C54,0X2C94);
	SetFunctionFlags(0X2C54,0x400);
	MakeFrame(0X2C54, 0X20, 0, 0);
	MakeFunction    (0X2C94,0X2CD0);
	SetFunctionFlags(0X2C94,0x400);
	MakeFrame(0X2C94, 0X20, 0, 0);
	MakeFunction    (0X2CD0,0X2D0A);
	SetFunctionFlags(0X2CD0,0x400);
	MakeFrame(0X2CD0, 0X20, 0, 0);
	MakeFunction    (0X2D0A,0X2D44);
	SetFunctionFlags(0X2D0A,0x400);
	MakeFrame(0X2D0A, 0X20, 0, 0);
	MakeFunction    (0X2D44,0X2D46);
	SetFunctionFlags(0X2D44,0x400);
	MakeFunction    (0X2D46,0X2DFA);
	SetFunctionFlags(0X2D46,0x400);
	MakeFrame(0X2D46, 0X28, 0, 0);
	MakeFunction    (0X2DFA,0X2E94);
	SetFunctionFlags(0X2DFA,0x400);
	MakeFrame(0X2DFA, 0X28, 0, 0);
	MakeFunction    (0X2E94,0X2F8A);
	SetFunctionFlags(0X2E94,0x400);
	MakeFrame(0X2E94, 0X140, 0, 0);
	MakeFunction    (0X2F8A,0X2FA4);
	SetFunctionFlags(0X2F8A,0x400);
	MakeFunction    (0X2FA4,0X2FE0);
	SetFunctionFlags(0X2FA4,0x400);
	MakeFrame(0X2FA4, 0X18, 0, 0);
	MakeFunction    (0X2FE0,0X32F2);
	SetFunctionFlags(0X2FE0,0x400);
	MakeFrame(0X2FE0, 0X40, 0, 0);
	MakeFunction    (0X32F2,0X334A);
	SetFunctionFlags(0X32F2,0x400);
	MakeFrame(0X32F2, 0X20, 0, 0);
	MakeFunction    (0X334A,0X3388);
	SetFunctionFlags(0X334A,0x400);
	MakeFrame(0X334A, 0X18, 0, 0);
	MakeFunction    (0X3388,0X33F8);
	SetFunctionFlags(0X3388,0x400);
	MakeFrame(0X3388, 0X50, 0, 0);
	MakeFunction    (0X33F8,0X342E);
	SetFunctionFlags(0X33F8,0x400);
	MakeFrame(0X33F8, 0X18, 0, 0);
	MakeFunction    (0X342E,0X346C);
	SetFunctionFlags(0X342E,0x400);
	MakeFrame(0X342E, 0X18, 0, 0);
	MakeFunction    (0X346C,0X34A4);
	SetFunctionFlags(0X346C,0x400);
	MakeFrame(0X346C, 0X18, 0, 0);
	MakeFunction    (0X34A4,0X34E4);
	SetFunctionFlags(0X34A4,0x400);
	MakeFrame(0X34A4, 0X18, 0, 0);
	MakeFunction    (0X34E4,0X3542);
	SetFunctionFlags(0X34E4,0x400);
	MakeFrame(0X34E4, 0X28, 0, 0);
	MakeFunction    (0X3542,0X3614);
	SetFunctionFlags(0X3542,0x400);
	MakeFrame(0X3542, 0X30, 0, 0);
	MakeFunction    (0X3614,0X3654);
	SetFunctionFlags(0X3614,0x400);
	MakeFrame(0X3614, 0X60, 0, 0);
	MakeFunction    (0X3654,0X36AC);
	SetFunctionFlags(0X3654,0x400);
	MakeFrame(0X3654, 0X20, 0, 0);
	MakeFunction    (0X36AC,0X36EA);
	SetFunctionFlags(0X36AC,0x400);
	MakeFrame(0X36AC, 0X18, 0, 0);
	MakeFunction    (0X370C,0X3744);
	SetFunctionFlags(0X370C,0x400);
	MakeFrame(0X370C, 0X18, 0, 0);
	MakeFunction    (0X3744,0X378A);
	SetFunctionFlags(0X3744,0x400);
	MakeFrame(0X3744, 0X20, 0, 0);
	MakeFunction    (0X378A,0X37DC);
	SetFunctionFlags(0X378A,0x400);
	MakeFrame(0X378A, 0X20, 0, 0);
	MakeFunction    (0X37DC,0X381A);
	SetFunctionFlags(0X37DC,0x400);
	MakeFrame(0X37DC, 0X20, 0, 0);
	MakeFunction    (0X381A,0X3854);
	SetFunctionFlags(0X381A,0x400);
	MakeFrame(0X381A, 0X18, 0, 0);
	MakeFunction    (0X3854,0X3894);
	SetFunctionFlags(0X3854,0x400);
	MakeFrame(0X3854, 0X18, 0, 0);
	MakeFunction    (0X3894,0X38DA);
	SetFunctionFlags(0X3894,0x400);
	MakeFunction    (0X38DA,0X3906);
	SetFunctionFlags(0X38DA,0x400);
	MakeFunction    (0X3906,0X392C);
	SetFunctionFlags(0X3906,0x400);
	MakeFunction    (0X392C,0X3952);
	SetFunctionFlags(0X392C,0x400);
	MakeFunction    (0X3952,0X3978);
	SetFunctionFlags(0X3952,0x400);
	MakeFunction    (0X3978,0X399E);
	SetFunctionFlags(0X3978,0x400);
	MakeFunction    (0X399E,0X39B8);
	SetFunctionFlags(0X399E,0x400);
	MakeFunction    (0X39B8,0X39D4);
	SetFunctionFlags(0X39B8,0x400);
	MakeFunction    (0X39D4,0X39FC);
	SetFunctionFlags(0X39D4,0x400);
	MakeFunction    (0X39FC,0X3BF6);
	SetFunctionFlags(0X39FC,0x400);
	MakeFrame(0X39FC, 0X14, 0, 0);
	MakeFunction    (0X3BF6,0X3D32);
	SetFunctionFlags(0X3BF6,0x400);
	MakeFrame(0X3BF6, 0X78, 0, 0);
	MakeLocal(0X3BF6, 0X3D32, "[bp-0XC]", "p_err");
	MakeFunction    (0X3D32,0X3D60);
	SetFunctionFlags(0X3D32,0x400);
	MakeFrame(0X3D32, 0X18, 0, 0);
	MakeFunction    (0X3D60,0X3DB8);
	SetFunctionFlags(0X3D60,0x400);
	MakeFrame(0X3D60, 0X20, 0, 0);
	MakeFunction    (0X3DB8,0X3E00);
	SetFunctionFlags(0X3DB8,0x400);
	MakeFrame(0X3DB8, 0X28, 0, 0);
	MakeFunction    (0X3E00,0X3E2A);
	SetFunctionFlags(0X3E00,0x400);
	MakeFrame(0X3E00, 0X28, 0, 0);
	MakeFunction    (0X3E2A,0X3EBA);
	SetFunctionFlags(0X3E2A,0x400);
	MakeFrame(0X3E2A, 0X40, 0, 0);
	MakeFunction    (0X3EBA,0X3EE8);
	SetFunctionFlags(0X3EBA,0x400);
	MakeFrame(0X3EBA, 0X18, 0, 0);
	MakeFunction    (0X3EE8,0X3F1A);
	SetFunctionFlags(0X3EE8,0x400);
	MakeFrame(0X3EE8, 0X18, 0, 0);
	MakeFunction    (0X3F50,0X3F8C);
	SetFunctionFlags(0X3F50,0x400);
	MakeFrame(0X3F50, 0X20, 0, 0);
	MakeFunction    (0X3F8C,0X3FF6);
	SetFunctionFlags(0X3F8C,0x400);
	MakeFrame(0X3F8C, 0X20, 0, 0);
	MakeFunction    (0X3FF6,0X401C);
	SetFunctionFlags(0X3FF6,0x400);
	MakeFrame(0X3FF6, 0X20, 0, 0);
	MakeFunction    (0X401C,0X4086);
	SetFunctionFlags(0X401C,0x400);
	MakeFrame(0X401C, 0X28, 0, 0);
	MakeFunction    (0X4086,0X40D0);
	SetFunctionFlags(0X4086,0x400);
	MakeFrame(0X4086, 0X20, 0, 0);
	MakeFunction    (0X40D0,0X414C);
	SetFunctionFlags(0X40D0,0x400);
	MakeFrame(0X40D0, 0X38, 0, 0);
	MakeFunction    (0X414C,0X41D6);
	SetFunctionFlags(0X414C,0x400);
	MakeFrame(0X414C, 0XC0, 0, 0);
	MakeFunction    (0X41D6,0X41DE);
	SetFunctionFlags(0X41D6,0x400);
	MakeFunction    (0X41DE,0X420C);
	SetFunctionFlags(0X41DE,0x400);
	MakeFrame(0X41DE, 0X18, 0, 0);
	MakeFunction    (0X420C,0X423E);
	SetFunctionFlags(0X420C,0x400);
	MakeFrame(0X420C, 0X18, 0, 0);
	MakeFunction    (0X423E,0X426C);
	SetFunctionFlags(0X423E,0x400);
	MakeFrame(0X423E, 0X18, 0, 0);
	MakeFunction    (0X426C,0X42AC);
	SetFunctionFlags(0X426C,0x400);
	MakeFrame(0X426C, 0X28, 0, 0);
	MakeLocal(0X426C, 0X42AC, "[bp-0X14]", "p_err");
	MakeFunction    (0X42AC,0X431C);
	SetFunctionFlags(0X42AC,0x400);
	MakeFrame(0X42AC, 0X100, 0, 0);
	MakeFunction    (0X431C,0X4362);
	SetFunctionFlags(0X431C,0x400);
	MakeFrame(0X431C, 0X30, 0, 0);
	MakeFunction    (0X4378,0X445E);
	SetFunctionFlags(0X4378,0x400);
	MakeFrame(0X4378, 0X38, 0, 0);
	MakeFunction    (0X445E,0X448C);
	SetFunctionFlags(0X445E,0x400);
	MakeFrame(0X445E, 0X18, 0, 0);
	MakeFunction    (0X448C,0X44C2);
	SetFunctionFlags(0X448C,0x400);
	MakeFrame(0X448C, 0X18, 0, 0);
	MakeFunction    (0X44C2,0X44F6);
	SetFunctionFlags(0X44C2,0x400);
	MakeFrame(0X44C2, 0X20, 0, 0);
	MakeFunction    (0X44F6,0X4532);
	SetFunctionFlags(0X44F6,0x400);
	MakeFrame(0X44F6, 0X18, 0, 0);
	MakeFunction    (0X4532,0X4584);
	SetFunctionFlags(0X4532,0x400);
	MakeFrame(0X4532, 0X18, 0, 0);
	MakeFunction    (0X4584,0X45B8);
	SetFunctionFlags(0X4584,0x400);
	MakeFrame(0X4584, 0X18, 0, 0);
	MakeFunction    (0X45B8,0X4616);
	SetFunctionFlags(0X45B8,0x400);
	MakeFrame(0X45B8, 0X38, 0, 0);
	MakeFunction    (0X4616,0X464E);
	SetFunctionFlags(0X4616,0x400);
	MakeFrame(0X4616, 0X18, 0, 0);
	MakeFunction    (0X464E,0X467A);
	SetFunctionFlags(0X464E,0x400);
	MakeFrame(0X464E, 0X18, 0, 0);
	MakeFunction    (0X467A,0X4708);
	SetFunctionFlags(0X467A,0x400);
	MakeFrame(0X467A, 0X48, 0, 0);
	MakeFunction    (0X4708,0X47B4);
	SetFunctionFlags(0X4708,0x400);
	MakeFrame(0X4708, 0X40, 0, 0);
	MakeLocal(0X4708, 0X47B4, "[bp-0X10]", "p_err");
	MakeFunction    (0X47B4,0X47EA);
	SetFunctionFlags(0X47B4,0x400);
	MakeFrame(0X47B4, 0X50, 0, 0);
	MakeFunction    (0X47EA,0X48A8);
	SetFunctionFlags(0X47EA,0x400);
	MakeFrame(0X47EA, 0X48, 0, 0);
	MakeFunction    (0X48A8,0X4924);
	SetFunctionFlags(0X48A8,0x400);
	MakeFrame(0X48A8, 0XD0, 0, 0);
	MakeFunction    (0X4924,0X4AB0);
	SetFunctionFlags(0X4924,0x400);
	MakeFrame(0X4924, 0X88, 0, 0);
	MakeFunction    (0X4AB0,0X4B7C);
	SetFunctionFlags(0X4AB0,0x400);
	MakeFrame(0X4AB0, 0XB8, 0, 0);
	MakeFunction    (0X4B7C,0X4DC2);
	SetFunctionFlags(0X4B7C,0x400);
	MakeFrame(0X4B7C, 0XB0, 0, 0);
	MakeFunction    (0X4DC2,0X4E3E);
	SetFunctionFlags(0X4DC2,0x400);
	MakeFrame(0X4DC2, 0X20, 0, 0);
	MakeFunction    (0X4E3E,0X4F02);
	SetFunctionFlags(0X4E3E,0x400);
	MakeFrame(0X4E3E, 0X30, 0, 0);
	MakeFunction    (0X4F02,0X4FD2);
	SetFunctionFlags(0X4F02,0x400);
	MakeFrame(0X4F02, 0X48, 0, 0);
	MakeFunction    (0X4FD2,0X5062);
	SetFunctionFlags(0X4FD2,0x400);
	MakeFrame(0X4FD2, 0X20, 0, 0);
	MakeFunction    (0X5062,0X50C0);
	SetFunctionFlags(0X5062,0x400);
	MakeFrame(0X5062, 0X40, 0, 0);
	MakeFunction    (0X50C0,0X5124);
	SetFunctionFlags(0X50C0,0x400);
	MakeFrame(0X50C0, 0X20, 0, 0);
	MakeFunction    (0X5124,0X518A);
	SetFunctionFlags(0X5124,0x400);
	MakeFrame(0X5124, 0X20, 0, 0);
	MakeFunction    (0X518A,0X5216);
	SetFunctionFlags(0X518A,0x400);
	MakeFrame(0X518A, 0X28, 0, 0);
	MakeFunction    (0X5218,0X5266);
	SetFunctionFlags(0X5218,0x400);
	MakeFrame(0X5218, 0X20, 0, 0);
	MakeFunction    (0X5266,0X52EA);
	SetFunctionFlags(0X5266,0x400);
	MakeFrame(0X5266, 0X20, 0, 0);
	MakeFunction    (0X52EA,0X53C8);
	SetFunctionFlags(0X52EA,0x400);
	MakeFrame(0X52EA, 0X60, 0, 0);
	MakeFunction    (0X53C8,0X579A);
	SetFunctionFlags(0X53C8,0x400);
	MakeFrame(0X53C8, 0X10, 0, 0);
	MakeNameEx(0X5470, "def_54B4", SN_LOCAL);
	MakeFunction    (0X579A,0X57C0);
	SetFunctionFlags(0X579A,0x400);
	MakeFrame(0X579A, 0X10, 0, 0);
	MakeFunction    (0X57C0,0X57D0);
	SetFunctionFlags(0X57C0,0x400);
	MakeFunction    (0X57D0,0X5836);
	SetFunctionFlags(0X57D0,0x400);
	MakeFrame(0X57D0, 0X20, 0, 0);
	MakeFunction    (0X5836,0X584E);
	SetFunctionFlags(0X5836,0x400);
	MakeFunction    (0X584E,0X58C0);
	SetFunctionFlags(0X584E,0x400);
	MakeFrame(0X584E, 0X58, 0, 0);
	MakeFunction    (0X58C0,0X593C);
	SetFunctionFlags(0X58C0,0x400);
	MakeFrame(0X58C0, 0X28, 0, 0);
	MakeFunction    (0X593C,0X5A96);
	SetFunctionFlags(0X593C,0x400);
	MakeFrame(0X593C, 0X38, 0, 0);
	MakeFunction    (0X5A96,0X5ABC);
	SetFunctionFlags(0X5A96,0x400);
	MakeFunction    (0X5ABC,0X5BB0);
	SetFunctionFlags(0X5ABC,0x400);
	MakeFrame(0X5ABC, 0X38, 0, 0);
	MakeLocal(0X5ABC, 0X5BB0, "[bp-0X28]", "p_err");
	MakeFunction    (0X5BB0,0X5D2A);
	SetFunctionFlags(0X5BB0,0x400);
	MakeFrame(0X5BB0, 0X10, 0, 0);
	MakeNameEx(0X5D28, "def_5C8C", SN_LOCAL);
	MakeFunction    (0X5D2A,0X5D6C);
	SetFunctionFlags(0X5D2A,0x400);
	MakeFrame(0X5D2A, 0XA8, 0, 0);
	MakeFunction    (0X5D6C,0X5DC8);
	SetFunctionFlags(0X5D6C,0x400);
	MakeFrame(0X5D6C, 0X30, 0, 0);
	MakeLocal(0X5D6C, 0X5DC8, "[bp-0X10]", "varg_r0");
	MakeLocal(0X5D6C, 0X5DC8, "[bp-0XC]", "varg_r1");
	MakeLocal(0X5D6C, 0X5DC8, "[bp-0X8]", "varg_r2");
	MakeLocal(0X5D6C, 0X5DC8, "[bp-0X4]", "varg_r3");
	MakeFunction    (0X5DC8,0X5E20);
	SetFunctionFlags(0X5DC8,0x400);
	MakeFrame(0X5DC8, 0X30, 0, 0);
	MakeLocal(0X5DC8, 0X5E20, "[bp-0X10]", "varg_r0");
	MakeLocal(0X5DC8, 0X5E20, "[bp-0XC]", "varg_r1");
	MakeLocal(0X5DC8, 0X5E20, "[bp-0X8]", "varg_r2");
	MakeLocal(0X5DC8, 0X5E20, "[bp-0X4]", "varg_r3");
	MakeFunction    (0X5E60,0X5E96);
	SetFunctionFlags(0X5E60,0x400);
	MakeFrame(0X5E60, 0X18, 0, 0);
	MakeFunction    (0X5E96,0X5F0C);
	SetFunctionFlags(0X5E96,0x400);
	MakeFrame(0X5E96, 0X10, 0, 0);
	MakeFunction    (0X5F0C,0X5FA2);
	SetFunctionFlags(0X5F0C,0x400);
	MakeFrame(0X5F0C, 0X20, 0, 0);
	MakeFunction    (0X5FA2,0X5FCA);
	SetFunctionFlags(0X5FA2,0x400);
	MakeFrame(0X5FA2, 0X30, 0, 0);
	MakeFunction    (0X5FCA,0X604C);
	SetFunctionFlags(0X5FCA,0x400);
	MakeFrame(0X5FCA, 0X38, 0, 0);
	MakeFunction    (0X604C,0X60B6);
	SetFunctionFlags(0X604C,0x400);
	MakeFrame(0X604C, 0X28, 0, 0);
	MakeFunction    (0X60B6,0X60D6);
	SetFunctionFlags(0X60B6,0x400);
	MakeFrame(0X60B6, 0X10, 0, 0);
	MakeFunction    (0X60D6,0X6104);
	SetFunctionFlags(0X60D6,0x400);
	MakeFrame(0X60D6, 0X18, 0, 0);
	MakeFunction    (0X6104,0X6138);
	SetFunctionFlags(0X6104,0x400);
	MakeFrame(0X6104, 0X18, 0, 0);
	MakeFunction    (0X6138,0X61BC);
	SetFunctionFlags(0X6138,0x400);
	MakeFrame(0X6138, 0X10, 0, 0);
	MakeFunction    (0X61BC,0X61FE);
	SetFunctionFlags(0X61BC,0x400);
	MakeFrame(0X61BC, 0X28, 0, 0);
	MakeFunction    (0X61FE,0X6226);
	SetFunctionFlags(0X61FE,0x400);
	MakeFrame(0X61FE, 0X18, 0, 0);
	MakeFunction    (0X6226,0X6258);
	SetFunctionFlags(0X6226,0x400);
	MakeFrame(0X6226, 0X18, 0, 0);
	MakeFunction    (0X628C,0X62AE);
	SetFunctionFlags(0X628C,0x400);
	MakeFrame(0X628C, 0X18, 0, 0);
	MakeFunction    (0X62AE,0X62C4);
	SetFunctionFlags(0X62AE,0x400);
	MakeFrame(0X62AE, 0X10, 0, 0);
	MakeFunction    (0X62C4,0X62EC);
	SetFunctionFlags(0X62C4,0x400);
	MakeFrame(0X62C4, 0X10, 0, 0);
	MakeFunction    (0X62EC,0X6304);
	SetFunctionFlags(0X62EC,0x400);
	MakeFrame(0X62EC, 0X10, 0, 0);
	MakeFunction    (0X6304,0X631E);
	SetFunctionFlags(0X6304,0x400);
	MakeFrame(0X6304, 0X10, 0, 0);
	MakeFunction    (0X631E,0X6368);
	SetFunctionFlags(0X631E,0x400);
	MakeFrame(0X631E, 0X20, 0, 0);
	MakeFunction    (0X6368,0X63AC);
	SetFunctionFlags(0X6368,0x400);
	MakeFrame(0X6368, 0X10, 0, 0);
	MakeFunction    (0X63AC,0X643C);
	SetFunctionFlags(0X63AC,0x400);
	MakeFrame(0X63AC, 0XA0, 0, 0);
	MakeLocal(0X63AC, 0X643C, "[bp-0X10]", "p_err");
	MakeFunction    (0X643C,0X6452);
	SetFunctionFlags(0X643C,0x400);
	MakeFrame(0X643C, 0X10, 0, 0);
	MakeFunction    (0X6452,0X64CA);
	SetFunctionFlags(0X6452,0x400);
	MakeFrame(0X6452, 0X220, 0, 0);
	MakeFunction    (0X64CA,0X6552);
	SetFunctionFlags(0X64CA,0x400);
	MakeFrame(0X64CA, 0X118, 0, 0);
	MakeFunction    (0X6552,0X65E2);
	SetFunctionFlags(0X6552,0x400);
	MakeFrame(0X6552, 0X218, 0, 0);
	MakeFunction    (0X65E2,0X665C);
	SetFunctionFlags(0X65E2,0x400);
	MakeFrame(0X65E2, 0X118, 0, 0);
	MakeFunction    (0X665C,0X6672);
	SetFunctionFlags(0X665C,0x400);
	MakeFrame(0X665C, 0X10, 0, 0);
	MakeFunction    (0X6672,0X668C);
	SetFunctionFlags(0X6672,0x400);
	MakeFrame(0X6672, 0X10, 0, 0);
	MakeFunction    (0X668C,0X6754);
	SetFunctionFlags(0X668C,0x400);
	MakeFrame(0X668C, 0X58, 0, 0);
	MakeFunction    (0X6754,0X68CA);
	SetFunctionFlags(0X6754,0x400);
	MakeFrame(0X6754, 0X28, 0, 0);
	MakeFunction    (0X68CA,0X69A8);
	SetFunctionFlags(0X68CA,0x400);
	MakeFrame(0X68CA, 0X28, 0, 0);
	MakeFunction    (0X69A8,0X6A38);
	SetFunctionFlags(0X69A8,0x400);
	MakeFrame(0X69A8, 0X218, 0, 0);
	MakeFunction    (0X6A38,0X6AA8);
	SetFunctionFlags(0X6A38,0x400);
	MakeFrame(0X6A38, 0X110, 0, 0);
	MakeFunction    (0X6BF4,0X6C08);
	SetFunctionFlags(0X6BF4,0x400);
	MakeFunction    (0X6C08,0X6C1C);
	SetFunctionFlags(0X6C08,0x400);
	MakeFunction    (0X6C1C,0X6C30);
	SetFunctionFlags(0X6C1C,0x400);
	MakeFunction    (0X6C30,0X6C44);
	SetFunctionFlags(0X6C30,0x400);
	MakeFunction    (0X6C44,0X6C58);
	SetFunctionFlags(0X6C44,0x400);
	MakeFunction    (0X6C58,0X6C6C);
	SetFunctionFlags(0X6C58,0x400);
	MakeFunction    (0X6C6C,0X6C88);
	SetFunctionFlags(0X6C6C,0x400);
	MakeFunction    (0X6C88,0X6CA0);
	SetFunctionFlags(0X6C88,0x400);
	MakeFunction    (0X6CA0,0X6D82);
	SetFunctionFlags(0X6CA0,0x400);
	MakeFrame(0X6CA0, 0X20, 0, 0);
	MakeFunction    (0X6D82,0X6E12);
	SetFunctionFlags(0X6D82,0x410);
	MakeFrame(0X6D82, 0X24, 0, 0);
	MakeFunction    (0X6E12,0X6E8C);
	SetFunctionFlags(0X6E12,0x400);
	MakeFunction    (0X6E8C,0X6F92);
	SetFunctionFlags(0X6E8C,0x400);
	MakeFrame(0X6E8C, 0X24, 0, 0);
	MakeFunction    (0X6F92,0X6FC4);
	SetFunctionFlags(0X6F92,0x400);
	MakeFrame(0X6F92, 0X14, 0, 0);
	MakeFunction    (0X6FC4,0X7014);
	SetFunctionFlags(0X6FC4,0x400);
	MakeFrame(0X6FC4, 0X14, 0, 0);
	MakeFunction    (0X7014,0X7082);
	SetFunctionFlags(0X7014,0x400);
	MakeFrame(0X7014, 0X10, 0, 0);
	MakeFunction    (0X7082,0X70DC);
	SetFunctionFlags(0X7082,0x400);
	MakeFrame(0X7082, 0X8, 0, 0);
	MakeFunction    (0X70DC,0X7146);
	SetFunctionFlags(0X70DC,0x400);
	MakeFrame(0X70DC, 0X8, 0, 0);
	MakeFunction    (0X7146,0X71BA);
	SetFunctionFlags(0X7146,0x400);
	MakeFrame(0X7146, 0X8, 0, 0);
	MakeFunction    (0X71BA,0X7212);
	SetFunctionFlags(0X71BA,0x400);
	MakeFunction    (0X7212,0X8158);
	SetFunctionFlags(0X7212,0x401);
	MakeFrame(0X7212, 0X80, 0, 0);
	MakeLocal(0X7212, 0X8158, "[bp-0X4]", "p_err");
	MakeFunction    (0X815C,0X8172);
	SetFunctionFlags(0X815C,0x400);
	MakeFrame(0X815C, 0X10, 0, 0);
	MakeFunction    (0X8172,0X8478);
	SetFunctionFlags(0X8172,0x401);
	MakeFrame(0X8172, 0X28, 0, 0);
	MakeFunction    (0X84E2,0X8560);
	SetFunctionFlags(0X84E2,0x400);
	MakeFrame(0X84E2, 0X8, 0, 0);
	MakeFunction    (0X8560,0X85BC);
	SetFunctionFlags(0X8560,0x400);
	MakeFrame(0X8560, 0X8, 0, 0);
	MakeFunction    (0X85BC,0X8612);
	SetFunctionFlags(0X85BC,0x400);
	MakeFrame(0X85BC, 0X10, 0, 0);
	MakeFunction    (0X8612,0X8640);
	SetFunctionFlags(0X8612,0x400);
	MakeFrame(0X8612, 0X10, 0, 0);
	MakeFunction    (0X8640,0X8660);
	SetFunctionFlags(0X8640,0x400);
	MakeFrame(0X8640, 0X8, 0, 0);
	MakeFunction    (0X8660,0X869A);
	SetFunctionFlags(0X8660,0x400);
	MakeFrame(0X8660, 0X18, 0, 0);
	MakeFunction    (0X869A,0X86D8);
	SetFunctionFlags(0X869A,0x400);
	MakeFrame(0X869A, 0X8, 0, 0);
	MakeFunction    (0X86D8,0X8716);
	SetFunctionFlags(0X86D8,0x400);
	MakeFrame(0X86D8, 0X8, 0, 0);
	MakeFunction    (0X8716,0X871C);
	SetFunctionFlags(0X8716,0x400);
	MakeFunction    (0X871C,0X873E);
	SetFunctionFlags(0X871C,0x400);
	MakeFrame(0X871C, 0X8, 0, 0);
	MakeFunction    (0X873E,0X87FA);
	SetFunctionFlags(0X873E,0x400);
	MakeFrame(0X873E, 0X18, 0, 0);
	MakeFunction    (0X87FA,0X8820);
	SetFunctionFlags(0X87FA,0x400);
	SetFunctionCmt(0X87FA,	"The power is set to either 5 (CE) or 7 (FCC)", 1);
	MakeFrame(0X87FA, 0X8, 0, 0);
	MakeFunction    (0X8820,0X884A);
	SetFunctionFlags(0X8820,0x400);
	MakeFrame(0X8820, 0X10, 0, 0);
	MakeFunction    (0X884A,0X89A0);
	SetFunctionFlags(0X884A,0x400);
	MakeFrame(0X884A, 0X28, 0, 0);
	MakeFunction    (0X89C8,0X89F2);
	SetFunctionFlags(0X89C8,0x400);
	MakeFrame(0X89C8, 0XC, 0, 0);
	MakeFunction    (0X89F2,0X8A58);
	SetFunctionFlags(0X89F2,0x400);
	MakeFrame(0X89F2, 0X18, 0, 0);
	MakeFunction    (0X8A58,0X8C7C);
	SetFunctionFlags(0X8A58,0x400);
	MakeFrame(0X8A58, 0X28, 0, 0);
	MakeFunction    (0X8C7C,0X913C);
	SetFunctionFlags(0X8C7C,0x400);
	MakeFrame(0X8C7C, 0X30, 0, 0);
	MakeFunction    (0X913C,0X934C);
	SetFunctionFlags(0X913C,0x400);
	MakeFrame(0X913C, 0X28, 0, 0);
	MakeFunction    (0X934C,0X93D8);
	SetFunctionFlags(0X934C,0x400);
	MakeFrame(0X934C, 0X10, 0, 0);
	MakeFunction    (0X93D8,0X944E);
	SetFunctionFlags(0X93D8,0x400);
	MakeFrame(0X93D8, 0X10, 0, 0);
	MakeFunction    (0X944E,0X94C4);
	SetFunctionFlags(0X944E,0x400);
	MakeFrame(0X944E, 0X10, 0, 0);
	MakeFunction    (0X94C4,0X9560);
	SetFunctionFlags(0X94C4,0x400);
	MakeFrame(0X94C4, 0X8, 0, 0);
	MakeFunction    (0X9560,0X95D4);
	SetFunctionFlags(0X9560,0x400);
	MakeFrame(0X9560, 0X18, 0, 0);
	MakeFunction    (0X95D4,0X96B6);
	SetFunctionFlags(0X95D4,0x400);
	MakeFrame(0X95D4, 0X18, 0, 0);
	MakeFunction    (0X96B6,0X97BC);
	SetFunctionFlags(0X96B6,0x400);
	MakeFrame(0X96B6, 0X28, 0, 0);
	MakeFunction    (0X97BC,0X97E8);
	SetFunctionFlags(0X97BC,0x400);
	MakeFrame(0X97BC, 0X10, 0, 0);
	MakeFunction    (0X97E8,0X9810);
	SetFunctionFlags(0X97E8,0x400);
	MakeFunction    (0X9810,0X985E);
	SetFunctionFlags(0X9810,0x400);
	MakeFrame(0X9810, 0X10, 0, 0);
	MakeFunction    (0X985E,0X987C);
	SetFunctionFlags(0X985E,0x400);
	MakeFrame(0X985E, 0X8, 0, 0);
	MakeFunction    (0X987C,0X98F4);
	SetFunctionFlags(0X987C,0x400);
	MakeFrame(0X987C, 0X10, 0, 0);
	MakeFunction    (0X98F4,0X99DC);
	SetFunctionFlags(0X98F4,0x400);
	MakeFrame(0X98F4, 0X10, 0, 0);
	MakeFunction    (0X99DC,0X9AB0);
	SetFunctionFlags(0X99DC,0x400);
	MakeFrame(0X99DC, 0X20, 0, 0);
	MakeFunction    (0X9B00,0X9B46);
	SetFunctionFlags(0X9B00,0x400);
	MakeFrame(0X9B00, 0X30, 0, 0);
	MakeFunction    (0X9B46,0X9D60);
	SetFunctionFlags(0X9B46,0x401);
	MakeFrame(0X9B46, 0X10, 0, 0);
	MakeFunction    (0X9D60,0X9D6C);
	SetFunctionFlags(0X9D60,0x400);
	MakeFunction    (0X9D6C,0X9D90);
	SetFunctionFlags(0X9D6C,0x400);
	MakeFrame(0X9D6C, 0X10, 0, 0);
	MakeFunction    (0X9DC8,0X9E1E);
	SetFunctionFlags(0X9DC8,0x400);
	MakeFrame(0X9DC8, 0X10, 0, 0);
	MakeFunction    (0X9E1E,0X9E32);
	SetFunctionFlags(0X9E1E,0x400);
	MakeFrame(0X9E1E, 0X8, 0, 0);
	MakeFunction    (0X9E32,0X9E44);
	SetFunctionFlags(0X9E32,0x400);
	MakeFunction    (0X9E44,0X9E5A);
	SetFunctionFlags(0X9E44,0x400);
	MakeFrame(0X9E44, 0X8, 0, 0);
	MakeFunction    (0X9E5A,0X9EB0);
	SetFunctionFlags(0X9E5A,0x400);
	MakeFrame(0X9E5A, 0X10, 0, 0);
	MakeFunction    (0X9EB0,0X9EEA);
	SetFunctionFlags(0X9EB0,0x400);
	MakeFrame(0X9EB0, 0X18, 0, 0);
	MakeFunction    (0X9EEA,0X9F2C);
	SetFunctionFlags(0X9EEA,0x400);
	MakeFrame(0X9EEA, 0X20, 0, 0);
	MakeFunction    (0X9F2C,0X9F64);
	SetFunctionFlags(0X9F2C,0x400);
	MakeFrame(0X9F2C, 0X10, 0, 0);
	MakeFunction    (0X9F64,0X9F9C);
	SetFunctionFlags(0X9F64,0x400);
	MakeFrame(0X9F64, 0X10, 0, 0);
	MakeFunction    (0X9F9C,0X9FA6);
	SetFunctionFlags(0X9F9C,0x400);
	MakeFunction    (0X9FA6,0X9FB0);
	SetFunctionFlags(0X9FA6,0x400);
	MakeFunction    (0X9FBC,0XA102);
	SetFunctionFlags(0X9FBC,0x400);
	MakeFrame(0X9FBC, 0X30, 0, 0);
	MakeFunction    (0XA102,0XA13E);
	SetFunctionFlags(0XA102,0x400);
	MakeFrame(0XA102, 0X48, 0, 0);
	MakeFunction    (0XA13E,0XA1E0);
	SetFunctionFlags(0XA13E,0x400);
	MakeFrame(0XA13E, 0X48, 0, 0);
	MakeFunction    (0XA1E0,0XA2A0);
	SetFunctionFlags(0XA1E0,0x400);
	MakeFrame(0XA1E0, 0X40, 0, 0);
	MakeFunction    (0XA2A0,0XA2DE);
	SetFunctionFlags(0XA2A0,0x400);
	MakeFunction    (0XA2DE,0XA32A);
	SetFunctionFlags(0XA2DE,0x400);
	MakeFrame(0XA2DE, 0X8, 0, 0);
	MakeFunction    (0XA32A,0XA360);
	SetFunctionFlags(0XA32A,0x400);
	MakeFrame(0XA32A, 0X18, 0, 0);
	MakeFunction    (0XA360,0XA390);
	SetFunctionFlags(0XA360,0x400);
	MakeFrame(0XA360, 0X10, 0, 0);
	MakeFunction    (0XA390,0XA3D6);
	SetFunctionFlags(0XA390,0x400);
	MakeFrame(0XA390, 0X18, 0, 0);
	MakeFunction    (0XA3D6,0XA3F0);
	SetFunctionFlags(0XA3D6,0x400);
	MakeFunction    (0XA3F0,0XA592);
	SetFunctionFlags(0XA3F0,0x400);
	MakeFrame(0XA3F0, 0X60, 0, 0);
	MakeFunction    (0XA592,0XA838);
	SetFunctionFlags(0XA592,0x400);
	MakeFrame(0XA592, 0X70, 0, 0);
	MakeFunction    (0XA838,0XA968);
	SetFunctionFlags(0XA838,0x400);
	MakeFrame(0XA838, 0X28, 0, 0);
	MakeFunction    (0XA968,0XA9EE);
	SetFunctionFlags(0XA968,0x400);
	MakeFrame(0XA968, 0X10, 0, 0);
	MakeFunction    (0XA9EE,0XAA56);
	SetFunctionFlags(0XA9EE,0x400);
	MakeFrame(0XA9EE, 0X10, 0, 0);
	MakeFunction    (0XAA9C,0XAB04);
	SetFunctionFlags(0XAA9C,0x400);
	MakeFrame(0XAA9C, 0X10, 0, 0);
	MakeFunction    (0XAB04,0XACD8);
	SetFunctionFlags(0XAB04,0x401);
	MakeFrame(0XAB04, 0X10, 0, 0);
	MakeFunction    (0XACD8,0XACE4);
	SetFunctionFlags(0XACD8,0x400);
	MakeFunction    (0XACE4,0XAD08);
	SetFunctionFlags(0XACE4,0x400);
	MakeFrame(0XACE4, 0X10, 0, 0);
	MakeFunction    (0XAD5C,0XAD70);
	SetFunctionFlags(0XAD5C,0x400);
	MakeFunction    (0XAD70,0XADA0);
	SetFunctionFlags(0XAD70,0x400);
	MakeFrame(0XAD70, 0XC, 0, 0);
	MakeFunction    (0XADA0,0XADDA);
	SetFunctionFlags(0XADA0,0x400);
	MakeFrame(0XADA0, 0X18, 0, 0);
	MakeFunction    (0XADDA,0XAE28);
	SetFunctionFlags(0XADDA,0x400);
	MakeFrame(0XADDA, 0X18, 0, 0);
	MakeFunction    (0XAE2C,0XAE48);
	SetFunctionFlags(0XAE2C,0x400);
	MakeFunction    (0XAE48,0XAEC2);
	SetFunctionFlags(0XAE48,0x400);
	MakeFrame(0XAE48, 0X18, 0, 0);
	MakeFunction    (0XAEC2,0XAF12);
	SetFunctionFlags(0XAEC2,0x400);
	MakeFrame(0XAEC2, 0X10, 0, 0);
	MakeFunction    (0XAF12,0XAF28);
	SetFunctionFlags(0XAF12,0x400);
	MakeFunction    (0XAF28,0XAF3C);
	SetFunctionFlags(0XAF28,0x400);
	MakeFrame(0XAF28, 0X8, 0, 0);
	MakeFunction    (0XAF3C,0XB03C);
	SetFunctionFlags(0XAF3C,0x400);
	MakeFrame(0XAF3C, 0X2C, 0, 0);
	MakeFunction    (0XB03C,0XB05A);
	SetFunctionFlags(0XB03C,0x400);
	MakeFrame(0XB03C, 0X8, 0, 0);
	MakeFunction    (0XB05A,0XB0B0);
	SetFunctionFlags(0XB05A,0x400);
	MakeFrame(0XB05A, 0X20, 0, 0);
	MakeFunction    (0XB0B0,0XB214);
	SetFunctionFlags(0XB0B0,0x400);
	MakeFrame(0XB0B0, 0X2C, 0, 0);
	MakeFunction    (0XB214,0XB2A6);
	SetFunctionFlags(0XB214,0x400);
	MakeFrame(0XB214, 0X10, 0, 0);
	MakeFunction    (0XB2A6,0XB2C8);
	SetFunctionFlags(0XB2A6,0x400);
	MakeFrame(0XB2A6, 0X8, 0, 0);
	MakeFunction    (0XB2C8,0XB2DE);
	SetFunctionFlags(0XB2C8,0x400);
	MakeFunction    (0XB2DE,0XB318);
	SetFunctionFlags(0XB2DE,0x400);
	MakeFrame(0XB2DE, 0X8, 0, 0);
	MakeFunction    (0XB318,0XB62E);
	SetFunctionFlags(0XB318,0x400);
	MakeFrame(0XB318, 0X28, 0, 0);
	MakeFunction    (0XB62E,0XB6C0);
	SetFunctionFlags(0XB62E,0x400);
	MakeFrame(0XB62E, 0X20, 0, 0);
	MakeFunction    (0XB6C0,0XB6DE);
	SetFunctionFlags(0XB6C0,0x400);
	MakeFrame(0XB6C0, 0X10, 0, 0);
	MakeFunction    (0XB6DE,0XB6FC);
	SetFunctionFlags(0XB6DE,0x400);
	MakeFrame(0XB6DE, 0X10, 0, 0);
	MakeFunction    (0XB6FC,0XB750);
	SetFunctionFlags(0XB6FC,0x400);
	MakeFrame(0XB6FC, 0X228, 0, 0);
	MakeFunction    (0XB750,0XB7C4);
	SetFunctionFlags(0XB750,0x400);
	MakeFrame(0XB750, 0X138, 0, 0);
	MakeFunction    (0XB7C4,0XB820);
	SetFunctionFlags(0XB7C4,0x400);
	MakeFrame(0XB7C4, 0X38, 0, 0);
	MakeFunction    (0XB820,0XB86C);
	SetFunctionFlags(0XB820,0x400);
	MakeFrame(0XB820, 0X50, 0, 0);
	MakeFunction    (0XB86C,0XB8B8);
	SetFunctionFlags(0XB86C,0x400);
	MakeFrame(0XB86C, 0X30, 0, 0);
	MakeFunction    (0XB8B8,0XB906);
	SetFunctionFlags(0XB8B8,0x400);
	MakeFrame(0XB8B8, 0X38, 0, 0);
	MakeFunction    (0XB906,0XB99E);
	SetFunctionFlags(0XB906,0x400);
	MakeFrame(0XB906, 0X38, 0, 0);
	MakeFunction    (0XB99E,0XBA1C);
	SetFunctionFlags(0XB99E,0x400);
	MakeFrame(0XB99E, 0X48, 0, 0);
	MakeFunction    (0XBA1C,0XBA5E);
	SetFunctionFlags(0XBA1C,0x400);
	MakeFunction    (0XBA6C,0XBB5E);
	SetFunctionFlags(0XBA6C,0x400);
	MakeFrame(0XBA6C, 0X18, 0, 0);
	MakeFunction    (0XBB5E,0XBB86);
	SetFunctionFlags(0XBB5E,0x400);
	MakeFrame(0XBB5E, 0X8, 0, 0);
	MakeFunction    (0XBB86,0XBCFA);
	SetFunctionFlags(0XBB86,0x400);
	MakeFrame(0XBB86, 0X28, 0, 0);
	MakeFunction    (0XBCFA,0XBD22);
	SetFunctionFlags(0XBCFA,0x400);
	MakeFrame(0XBCFA, 0X8, 0, 0);
	MakeFunction    (0XBD4A,0XBD7A);
	SetFunctionFlags(0XBD4A,0x400);
	MakeFrame(0XBD4A, 0X8, 0, 0);
	MakeFunction    (0XBD7A,0XBD96);
	SetFunctionFlags(0XBD7A,0x400);
	MakeFrame(0XBD7A, 0X8, 0, 0);
	MakeFunction    (0XBD96,0XBDAC);
	SetFunctionFlags(0XBD96,0x400);
	MakeFrame(0XBD96, 0X10, 0, 0);
	MakeFunction    (0XBDC4,0XBDCA);
	SetFunctionFlags(0XBDC4,0x400);
	MakeFunction    (0XBDCA,0XBDF6);
	SetFunctionFlags(0XBDCA,0x400);
	MakeFrame(0XBDCA, 0X8, 0, 0);
	MakeFunction    (0XBDF6,0XBE24);
	SetFunctionFlags(0XBDF6,0x400);
	MakeFrame(0XBDF6, 0X10, 0, 0);
	MakeFunction    (0XBE24,0XBE50);
	SetFunctionFlags(0XBE24,0x400);
	MakeFrame(0XBE24, 0X10, 0, 0);
	MakeFunction    (0XBEC8,0XBF16);
	SetFunctionFlags(0XBEC8,0x400);
	MakeFrame(0XBEC8, 0X18, 0, 0);
	MakeFunction    (0XBF16,0XBF62);
	SetFunctionFlags(0XBF16,0x400);
	MakeFrame(0XBF16, 0X10, 0, 0);
	MakeFunction    (0XBF74,0XC054);
	SetFunctionFlags(0XBF74,0x400);
	MakeFrame(0XBF74, 0X18, 0, 0);
	MakeFunction    (0XC054,0XC09E);
	SetFunctionFlags(0XC054,0x400);
	MakeFrame(0XC054, 0X10, 0, 0);
	MakeFunction    (0XC09E,0XC132);
	SetFunctionFlags(0XC09E,0x400);
	MakeFrame(0XC09E, 0X20, 0, 0);
	MakeFunction    (0XC136,0XC166);
	SetFunctionFlags(0XC136,0x400);
	MakeFrame(0XC136, 0X108, 0, 0);
	MakeFunction    (0XC166,0XC25E);
	SetFunctionFlags(0XC166,0x400);
	MakeFrame(0XC166, 0X10, 0, 0);
	MakeFunction    (0XC25E,0XC40A);
	SetFunctionFlags(0XC25E,0x400);
	MakeFrame(0XC25E, 0X20, 0, 0);
	MakeFunction    (0XC40A,0XC414);
	SetFunctionFlags(0XC40A,0x400);
	MakeFunction    (0XC414,0XC6AA);
	SetFunctionFlags(0XC414,0x400);
	MakeFrame(0XC414, 0X18, 0, 0);
	MakeFunction    (0XC6AA,0XC756);
	SetFunctionFlags(0XC6AA,0x400);
	MakeFrame(0XC6AA, 0X10, 0, 0);
	MakeFunction    (0XC756,0XC848);
	SetFunctionFlags(0XC756,0x400);
	MakeFrame(0XC756, 0X10, 0, 0);
	MakeFunction    (0XC848,0XC850);
	SetFunctionFlags(0XC848,0x400);
	MakeFunction    (0XC850,0XC896);
	SetFunctionFlags(0XC850,0x400);
	MakeFrame(0XC850, 0X8, 0, 0);
	MakeFunction    (0XC896,0XC98A);
	SetFunctionFlags(0XC896,0x400);
	MakeFrame(0XC896, 0X10, 0, 0);
	MakeFunction    (0XC98A,0XCAD0);
	SetFunctionFlags(0XC98A,0x400);
	MakeFrame(0XC98A, 0X20, 0, 0);
	MakeFunction    (0XCAD0,0XCAD8);
	SetFunctionFlags(0XCAD0,0x400);
	MakeFunction    (0XCAD8,0XCC74);
	SetFunctionFlags(0XCAD8,0x400);
	MakeFrame(0XCAD8, 0X20, 0, 0);
	MakeFunction    (0XCC74,0XCD54);
	SetFunctionFlags(0XCC74,0x400);
	MakeFrame(0XCC74, 0X14, 0, 0);
	MakeFunction    (0XCD54,0XCEF6);
	SetFunctionFlags(0XCD54,0x400);
	MakeFrame(0XCD54, 0X10, 0, 0);
	MakeFunction    (0XCEF6,0XD062);
	SetFunctionFlags(0XCEF6,0x400);
	MakeFrame(0XCEF6, 0X8, 0, 0);
	MakeFunction    (0XD062,0XD084);
	SetFunctionFlags(0XD062,0x400);
	MakeFrame(0XD062, 0XC, 0, 0);
	MakeFunction    (0XD084,0XD0BE);
	SetFunctionFlags(0XD084,0x400);
	MakeFrame(0XD084, 0XC, 0, 0);
	MakeFunction    (0XD0BE,0XD1A6);
	SetFunctionFlags(0XD0BE,0x400);
	MakeFrame(0XD0BE, 0X18, 0, 0);
	MakeFunction    (0XD1A6,0XD43E);
	SetFunctionFlags(0XD1A6,0x400);
	MakeFrame(0XD1A6, 0X10, 0, 0);
	MakeFunction    (0XD43E,0XD4D4);
	SetFunctionFlags(0XD43E,0x400);
	MakeFrame(0XD43E, 0X8, 0, 0);
	MakeFunction    (0XD4D4,0XD4E6);
	SetFunctionFlags(0XD4D4,0x400);
	MakeFunction    (0XD4EE,0XD50A);
	SetFunctionFlags(0XD4EE,0x400);
	MakeFunction    (0XD50A,0XD526);
	SetFunctionFlags(0XD50A,0x400);
	MakeFrame(0XD50A, 0X4, 0, 0);
	MakeFunction    (0XD526,0XD550);
	SetFunctionFlags(0XD526,0x400);
	MakeFrame(0XD526, 0X8, 0, 0);
	MakeFunction    (0XD550,0XD55C);
	SetFunctionFlags(0XD550,0x400);
	MakeFunction    (0XD55C,0XD6F8);
	SetFunctionFlags(0XD55C,0x400);
	MakeFrame(0XD55C, 0X30, 0, 0);
	MakeFunction    (0XD6F8,0XD71E);
	SetFunctionFlags(0XD6F8,0x400);
	MakeFunction    (0XD71E,0XD742);
	SetFunctionFlags(0XD71E,0x400);
	MakeFunction    (0XD742,0XD77E);
	SetFunctionFlags(0XD742,0x400);
	MakeFrame(0XD742, 0X8, 0, 0);
	MakeFunction    (0XD77E,0XD7B8);
	SetFunctionFlags(0XD77E,0x400);
	MakeFrame(0XD77E, 0X8, 0, 0);
	MakeFunction    (0XD7B8,0XD7D0);
	SetFunctionFlags(0XD7B8,0x400);
	MakeFunction    (0XD7D0,0XD7E8);
	SetFunctionFlags(0XD7D0,0x400);
	MakeFunction    (0XD7E8,0XD85A);
	SetFunctionFlags(0XD7E8,0x400);
	MakeFrame(0XD7E8, 0X30, 0, 0);
	MakeFunction    (0XD85A,0XD8BC);
	SetFunctionFlags(0XD85A,0x400);
	MakeFrame(0XD85A, 0X8, 0, 0);
	MakeFunction    (0XD8F0,0XD906);
	SetFunctionFlags(0XD8F0,0x400);
	MakeFunction    (0XD906,0XD912);
	SetFunctionFlags(0XD906,0x400);
	MakeFunction    (0XD91C,0XD938);
	SetFunctionFlags(0XD91C,0x400);
	MakeFunction    (0XD938,0XD942);
	SetFunctionFlags(0XD938,0x400);
	MakeFunction    (0XD942,0XD952);
	SetFunctionFlags(0XD942,0x400);
	MakeFunction    (0XD952,0XD95C);
	SetFunctionFlags(0XD952,0x400);
	MakeFunction    (0XD95C,0XD970);
	SetFunctionFlags(0XD95C,0x400);
	MakeFunction    (0XD978,0XD980);
	SetFunctionFlags(0XD978,0x400);
	MakeFunction    (0XD980,0XD988);
	SetFunctionFlags(0XD980,0x400);
	MakeFunction    (0XD988,0XD99E);
	SetFunctionFlags(0XD988,0x400);
	MakeFunction    (0XD9AE,0XD9CA);
	SetFunctionFlags(0XD9AE,0x400);
	MakeFunction    (0XD9EC,0XD9FC);
	SetFunctionFlags(0XD9EC,0x400);
	MakeFunction    (0XD9FC,0XDA0A);
	SetFunctionFlags(0XD9FC,0x400);
	MakeFunction    (0XDA0A,0XDA16);
	SetFunctionFlags(0XDA0A,0x400);
	MakeFunction    (0XDA16,0XDA2C);
	SetFunctionFlags(0XDA16,0x400);
	MakeFunction    (0XDA2C,0XDA40);
	SetFunctionFlags(0XDA2C,0x400);
	MakeFunction    (0XDA40,0XDA48);
	SetFunctionFlags(0XDA40,0x400);
	MakeFunction    (0XDA48,0XDA6A);
	SetFunctionFlags(0XDA48,0x400);
	MakeFunction    (0XDA6A,0XDA74);
	SetFunctionFlags(0XDA6A,0x400);
	MakeFunction    (0XDA7C,0XDA84);
	SetFunctionFlags(0XDA7C,0x400);
	MakeFunction    (0XDA84,0XDA8C);
	SetFunctionFlags(0XDA84,0x400);
	MakeFunction    (0XDA94,0XDAF2);
	SetFunctionFlags(0XDA94,0x400);
	MakeFrame(0XDA94, 0X10, 0, 0);
	MakeFunction    (0XDAF2,0XDB06);
	SetFunctionFlags(0XDAF2,0x400);
	MakeFunction    (0XDB06,0XDB12);
	SetFunctionFlags(0XDB06,0x400);
	MakeFunction    (0XDB12,0XDB20);
	SetFunctionFlags(0XDB12,0x400);
	MakeFunction    (0XDB20,0XDB3E);
	SetFunctionFlags(0XDB20,0x400);
	MakeFunction    (0XDB3E,0XDB46);
	SetFunctionFlags(0XDB3E,0x400);
	MakeFunction    (0XDB46,0XDB4E);
	SetFunctionFlags(0XDB46,0x400);
	MakeFunction    (0XDB4E,0XDB58);
	SetFunctionFlags(0XDB4E,0x400);
	MakeFunction    (0XDB58,0XDB60);
	SetFunctionFlags(0XDB58,0x400);
	MakeFunction    (0XDB60,0XDC30);
	SetFunctionFlags(0XDB60,0x400);
	MakeFrame(0XDB60, 0X10, 0, 0);
	MakeFunction    (0XDC30,0XDCFA);
	SetFunctionFlags(0XDC30,0x400);
	MakeFrame(0XDC30, 0X8, 0, 0);
	MakeFunction    (0XDCFA,0XDD14);
	SetFunctionFlags(0XDCFA,0x400);
	MakeFrame(0XDCFA, 0X8, 0, 0);
	MakeFunction    (0XDD14,0XDD4A);
	SetFunctionFlags(0XDD14,0x400);
	MakeFunction    (0XDD54,0XDDDC);
	SetFunctionFlags(0XDD54,0x400);
	SetFunctionCmt(0XDD54,	"Initializes the SPIx peripheral.", 1);
	MakeFrame(0XDD54, 0X18, 0, 0);
	MakeFunction    (0XDDDC,0XDDF0);
	SetFunctionFlags(0XDDDC,0x400);
	MakeFunction    (0XDDFC,0XDE1E);
	SetFunctionFlags(0XDDFC,0x400);
	MakeFrame(0XDDFC, 0X8, 0, 0);
	MakeFunction    (0XDE42,0XDE5C);
	SetFunctionFlags(0XDE42,0x400);
	MakeFrame(0XDE42, 0X8, 0, 0);
	MakeFunction    (0XDE5C,0XDE96);
	SetFunctionFlags(0XDE5C,0x400);
	MakeFrame(0XDE5C, 0X8, 0, 0);
	MakeFunction    (0XDE96,0XE000);
	SetFunctionFlags(0XDE96,0x400);
	MakeFrame(0XDE96, 0X18, 0, 0);
	MakeFunction    (0XE000,0XE0D8);
	SetFunctionFlags(0XE000,0x400);
	MakeFrame(0XE000, 0X10, 0, 0);
	MakeFunction    (0XE0D8,0XE0F4);
	SetFunctionFlags(0XE0D8,0x400);
	MakeFrame(0XE0D8, 0X8, 0, 0);
	MakeFunction    (0XE0F4,0XE1D0);
	SetFunctionFlags(0XE0F4,0x400);
	MakeFrame(0XE0F4, 0X18, 0, 0);
	MakeFunction    (0XE214,0XE28A);
	SetFunctionFlags(0XE214,0x400);
	MakeFrame(0XE214, 0X18, 0, 0);
	MakeFunction    (0XE28A,0XE2C2);
	SetFunctionFlags(0XE28A,0x400);
	MakeFunction    (0XE2C2,0XE4A8);
	SetFunctionFlags(0XE2C2,0x400);
	MakeFrame(0XE2C2, 0X38, 0, 0);
	MakeLocal(0XE2C2, 0XE4A8, "[bp-0X10]", "varg_r0");
	MakeLocal(0XE2C2, 0XE4A8, "[bp-0XC]", "varg_r1");
	MakeLocal(0XE2C2, 0XE4A8, "[bp-0X8]", "varg_r2");
	MakeLocal(0XE2C2, 0XE4A8, "[bp-0X4]", "varg_r3");
	MakeFunction    (0XE4A8,0XE8B8);
	SetFunctionFlags(0XE4A8,0x400);
	MakeFrame(0XE4A8, 0X58, 0, 0);
	MakeFunction    (0XE8B8,0XE9EE);
	SetFunctionFlags(0XE8B8,0x400);
	MakeFrame(0XE8B8, 0X18, 0, 0);
	MakeFunction    (0XE9EE,0XEA62);
	SetFunctionFlags(0XE9EE,0x400);
	MakeFrame(0XE9EE, 0X10, 0, 0);
	MakeFunction    (0XEA62,0XEAAC);
	SetFunctionFlags(0XEA62,0x400);
	MakeFrame(0XEA62, 0X10, 0, 0);
	MakeFunction    (0XEB10,0XEB24);
	SetFunctionFlags(0XEB10,0x400);
	MakeFrame(0XEB10, 0X8, 0, 0);
	MakeFunction    (0XEB24,0XEB32);
	SetFunctionFlags(0XEB24,0x400);
	MakeFunction    (0XEB32,0XEC5A);
	SetFunctionFlags(0XEB32,0x400);
	MakeFrame(0XEB32, 0X30, 0, 0);
	MakeLocal(0XEB32, 0XEC5A, "[bp-0X2C]", "p_err");
	MakeFunction    (0XEC5A,0XEC68);
	SetFunctionFlags(0XEC5A,0x400);
	MakeFrame(0XEC5A, 0XC, 0, 0);
	MakeFunction    (0XEC78,0XEC82);
	SetFunctionFlags(0XEC78,0x400);
	MakeFunction    (0XEC82,0XEC8A);
	SetFunctionFlags(0XEC82,0x400);
	MakeFunction    (0XEC8A,0XEC90);
	SetFunctionFlags(0XEC8A,0x400);
	MakeFunction    (0XEC90,0XECAA);
	SetFunctionFlags(0XEC90,0x400);
	MakeFrame(0XEC90, 0X4, 0, 0);
	MakeFunction    (0XECAA,0XECC4);
	SetFunctionFlags(0XECAA,0x400);
	MakeFrame(0XECAA, 0X4, 0, 0);
	MakeFunction    (0XECC4,0XECEC);
	SetFunctionFlags(0XECC4,0x400);
	MakeFrame(0XECC4, 0X4, 0, 0);
	MakeFunction    (0XECEC,0XED02);
	SetFunctionFlags(0XECEC,0x400);
	MakeFrame(0XECEC, 0X8, 0, 0);
	MakeFunction    (0XED02,0XED44);
	SetFunctionFlags(0XED02,0x400);
	MakeFrame(0XED02, 0X4, 0, 0);
	MakeFunction    (0XED44,0XED7C);
	SetFunctionFlags(0XED44,0x400);
	MakeFrame(0XED44, 0X4, 0, 0);
	MakeFunction    (0XED7C,0XEDF6);
	SetFunctionFlags(0XED7C,0x400);
	MakeFrame(0XED7C, 0X8, 0, 0);
	MakeFunction    (0XEDF6,0XEE32);
	SetFunctionFlags(0XEDF6,0x400);
	MakeFrame(0XEDF6, 0X4, 0, 0);
	MakeFunction    (0XEE32,0XEE6A);
	SetFunctionFlags(0XEE32,0x400);
	MakeFrame(0XEE32, 0XC, 0, 0);
	MakeFunction    (0XEE9C,0XEECC);
	SetFunctionFlags(0XEE9C,0x400);
	MakeFrame(0XEE9C, 0X10, 0, 0);
	MakeFunction    (0XEEF2,0XEF36);
	SetFunctionFlags(0XEEF2,0x400);
	MakeFrame(0XEEF2, 0X4, 0, 0);
	MakeFunction    (0XEF36,0XEF70);
	SetFunctionFlags(0XEF36,0x400);
	MakeFrame(0XEF36, 0X4, 0, 0);
	MakeFunction    (0XEF70,0XEFAC);
	SetFunctionFlags(0XEF70,0x400);
	MakeFrame(0XEF70, 0X18, 0, 0);
	MakeFunction    (0XEFAC,0XEFF8);
	SetFunctionFlags(0XEFAC,0x400);
	MakeFrame(0XEFAC, 0X10, 0, 0);
	MakeFunction    (0XEFF8,0XF02A);
	SetFunctionFlags(0XEFF8,0x400);
	MakeFrame(0XEFF8, 0X8, 0, 0);
	MakeFunction    (0XF02A,0XF076);
	SetFunctionFlags(0XF02A,0x400);
	MakeFrame(0XF02A, 0X1C, 0, 0);
	MakeFunction    (0XF0A4,0XF110);
	SetFunctionFlags(0XF0A4,0x400);
	MakeFrame(0XF0A4, 0X18, 0, 0);
	MakeFunction    (0XF110,0XF21C);
	SetFunctionFlags(0XF110,0x400);
	MakeFrame(0XF110, 0X40, 0, 0);
	MakeFunction    (0XF21C,0XF326);
	SetFunctionFlags(0XF21C,0x400);
	MakeFrame(0XF21C, 0X24, 0, 0);
	MakeFunction    (0XF326,0XF4AE);
	SetFunctionFlags(0XF326,0x400);
	MakeFrame(0XF326, 0X58, 0, 0);
	MakeFunction    (0XF4AE,0XF52C);
	SetFunctionFlags(0XF4AE,0x400);
	MakeFrame(0XF4AE, 0X70, 0, 0);
	MakeFunction    (0XF52C,0XF5A0);
	SetFunctionFlags(0XF52C,0x400);
	MakeFrame(0XF52C, 0XB8, 0, 0);
	MakeFunction    (0XF5A0,0XF5FC);
	SetFunctionFlags(0XF5A0,0x400);
	MakeFrame(0XF5A0, 0XB0, 0, 0);
	MakeFunction    (0XF5FC,0XF66A);
	SetFunctionFlags(0XF5FC,0x400);
	MakeFrame(0XF5FC, 0XB8, 0, 0);
	MakeFunction    (0XF66A,0XF688);
	SetFunctionFlags(0XF66A,0x400);
	MakeFrame(0XF66A, 0X8, 0, 0);
	MakeFunction    (0XF688,0XF6A6);
	SetFunctionFlags(0XF688,0x400);
	MakeFrame(0XF688, 0X8, 0, 0);
	MakeFunction    (0XF6A6,0XF6DC);
	SetFunctionFlags(0XF6A6,0x400);
	MakeFrame(0XF6A6, 0X28, 0, 0);
	MakeFunction    (0XF6DC,0XF714);
	SetFunctionFlags(0XF6DC,0x400);
	MakeFrame(0XF6DC, 0X30, 0, 0);
	MakeFunction    (0XF714,0XF7A2);
	SetFunctionFlags(0XF714,0x400);
	MakeFrame(0XF714, 0XC8, 0, 0);
	MakeFunction    (0XF7A2,0XF7E4);
	SetFunctionFlags(0XF7A2,0x400);
	MakeFrame(0XF7A2, 0X28, 0, 0);
	MakeFunction    (0XF7E4,0XF93C);
	SetFunctionFlags(0XF7E4,0x400);
	MakeFrame(0XF7E4, 0X30, 0, 0);
	MakeFunction    (0XF954,0XF9B6);
	SetFunctionFlags(0XF954,0x400);
	MakeFrame(0XF954, 0X58, 0, 0);
	MakeFunction    (0XF9B6,0XFA00);
	SetFunctionFlags(0XF9B6,0x400);
	MakeFrame(0XF9B6, 0X30, 0, 0);
	MakeFunction    (0XFA00,0XFA2C);
	SetFunctionFlags(0XFA00,0x400);
	MakeFrame(0XFA00, 0X10, 0, 0);
	MakeFunction    (0XFA2C,0XFA58);
	SetFunctionFlags(0XFA2C,0x400);
	MakeFrame(0XFA2C, 0X10, 0, 0);
	MakeFunction    (0XFA58,0XFA8C);
	SetFunctionFlags(0XFA58,0x400);
	MakeFrame(0XFA58, 0X28, 0, 0);
	MakeFunction    (0XFA8C,0XFBD8);
	SetFunctionFlags(0XFA8C,0x400);
	MakeFrame(0XFA8C, 0X50, 0, 0);
	MakeFunction    (0XFBD8,0XFC06);
	SetFunctionFlags(0XFBD8,0x400);
	MakeFrame(0XFBD8, 0X28, 0, 0);
	MakeFunction    (0XFC06,0XFC32);
	SetFunctionFlags(0XFC06,0x400);
	MakeFrame(0XFC06, 0X28, 0, 0);
	MakeFunction    (0XFC32,0XFC76);
	SetFunctionFlags(0XFC32,0x400);
	MakeFrame(0XFC32, 0X10, 0, 0);
	MakeFunction    (0XFC76,0XFC8C);
	SetFunctionFlags(0XFC76,0x400);
	MakeFrame(0XFC76, 0X8, 0, 0);
	MakeFunction    (0XFC8C,0XFCA2);
	SetFunctionFlags(0XFC8C,0x400);
	MakeFrame(0XFC8C, 0X8, 0, 0);
	MakeFunction    (0XFCA2,0XFCB8);
	SetFunctionFlags(0XFCA2,0x400);
	MakeFrame(0XFCA2, 0X8, 0, 0);
	MakeFunction    (0XFCB8,0XFCCE);
	SetFunctionFlags(0XFCB8,0x400);
	MakeFrame(0XFCB8, 0X8, 0, 0);
	MakeFunction    (0XFCCE,0XFCDE);
	SetFunctionFlags(0XFCCE,0x400);
	MakeFrame(0XFCCE, 0X8, 0, 0);
	MakeFunction    (0XFCDE,0XFD02);
	SetFunctionFlags(0XFCDE,0x400);
	MakeFrame(0XFCDE, 0X10, 0, 0);
	MakeFunction    (0XFD02,0XFD28);
	SetFunctionFlags(0XFD02,0x400);
	MakeFrame(0XFD02, 0X10, 0, 0);
	MakeFunction    (0XFD28,0XFD32);
	SetFunctionFlags(0XFD28,0x400);
	MakeFunction    (0XFD32,0XFD50);
	SetFunctionFlags(0XFD32,0x400);
	MakeFrame(0XFD32, 0X8, 0, 0);
	MakeFunction    (0XFD54,0XFE80);
	SetFunctionFlags(0XFD54,0x410);
	MakeFrame(0XFD54, 0X120, 32, 0);
	MakeFunction    (0XFE80,0XFF00);
	SetFunctionFlags(0XFE80,0x400);
	MakeFrame(0XFE80, 0X20, 0, 0);
	MakeFunction    (0XFF00,0XFF6C);
	SetFunctionFlags(0XFF00,0x400);
	MakeFrame(0XFF00, 0X20, 0, 0);
	MakeFunction    (0XFF6C,0XFF8E);
	SetFunctionFlags(0XFF6C,0x400);
	MakeFrame(0XFF6C, 0X8, 0, 0);
	MakeFunction    (0XFF8E,0XFFB4);
	SetFunctionFlags(0XFF8E,0x400);
	MakeFrame(0XFF8E, 0XB8, 0, 0);
	MakeFunction    (0XFFE8,0X1020C);
	SetFunctionFlags(0XFFE8,0x400);
	MakeFrame(0XFFE8, 0X20, 0, 0);
	MakeFunction    (0X1020C,0X1040E);
	SetFunctionFlags(0X1020C,0x400);
	MakeFrame(0X1020C, 0XC, 0, 0);
	MakeFunction    (0X1040E,0X1072E);
	SetFunctionFlags(0X1040E,0x400);
	MakeFrame(0X1040E, 0X24, 0, 0);
	MakeFunction    (0X1072E,0X10872);
	SetFunctionFlags(0X1072E,0x400);
	MakeFrame(0X1072E, 0X208, 0, 0);
	MakeFunction    (0X10872,0X108B8);
	SetFunctionFlags(0X10872,0x400);
	MakeFrame(0X10872, 0X1C, 0, 0);
	MakeFunction    (0X108B8,0X10908);
	SetFunctionFlags(0X108B8,0x400);
	MakeFrame(0X108B8, 0X18, 0, 0);
	MakeFunction    (0X10908,0X1092C);
	SetFunctionFlags(0X10908,0x400);
	MakeFrame(0X10908, 0XC, 0, 0);
	MakeFunction    (0X10938,0X10C64);
	SetFunctionFlags(0X10938,0x400);
	MakeFrame(0X10938, 0X30, 0, 0);
	MakeFunction    (0X10C64,0X10CBA);
	SetFunctionFlags(0X10C64,0x400);
	MakeFrame(0X10C64, 0X4, 0, 0);
	MakeFunction    (0X10CBA,0X10F2C);
	SetFunctionFlags(0X10CBA,0x400);
	MakeFrame(0X10CBA, 0X30, 0, 0);
	MakeFunction    (0X10F2C,0X11128);
	SetFunctionFlags(0X10F2C,0x400);
	MakeFrame(0X10F2C, 0X24, 0, 0);
	MakeFunction    (0X11128,0X1135A);
	SetFunctionFlags(0X11128,0x400);
	MakeFrame(0X11128, 0X2C, 0, 0);
	MakeFunction    (0X1135A,0X116A6);
	SetFunctionFlags(0X1135A,0x400);
	MakeFrame(0X1135A, 0X2C, 0, 0);
	MakeFunction    (0X116AC,0X116D2);
	SetFunctionFlags(0X116AC,0x400);
	MakeFrame(0X116AC, 0X10, 0, 0);
	MakeFunction    (0X116D2,0X11732);
	SetFunctionFlags(0X116D2,0x400);
	MakeFrame(0X116D2, 0X8, 0, 0);
	MakeFunction    (0X11732,0X11782);
	SetFunctionFlags(0X11732,0x400);
	MakeFrame(0X11732, 0X8, 0, 0);
	MakeFunction    (0X11782,0X11786);
	SetFunctionFlags(0X11782,0x480);
	MakeFunction    (0X11786,0X117AC);
	SetFunctionFlags(0X11786,0x400);
	MakeFrame(0X11786, 0X8, 0, 0);
	MakeFunction    (0X117AC,0X117CA);
	SetFunctionFlags(0X117AC,0x400);
	MakeFunction    (0X117CA,0X117D8);
	SetFunctionFlags(0X117CA,0x400);
	MakeFrame(0X117CA, 0X8, 0, 0);
	MakeFunction    (0X117D8,0X117E6);
	SetFunctionFlags(0X117D8,0x400);
	MakeFrame(0X117D8, 0X8, 0, 0);
	MakeFunction    (0X117E6,0X117F4);
	SetFunctionFlags(0X117E6,0x400);
	MakeFrame(0X117E6, 0X8, 0, 0);
	MakeFunction    (0X117F4,0X1188A);
	SetFunctionFlags(0X117F4,0x400);
	MakeFrame(0X117F4, 0X28, 0, 0);
	MakeFunction    (0X1188A,0X1197A);
	SetFunctionFlags(0X1188A,0x400);
	MakeFrame(0X1188A, 0X38, 0, 0);
	MakeFunction    (0X1197A,0X119D0);
	SetFunctionFlags(0X1197A,0x400);
	MakeFrame(0X1197A, 0X10, 0, 0);
	MakeFunction    (0X119D0,0X11A34);
	SetFunctionFlags(0X119D0,0x400);
	MakeFrame(0X119D0, 0X8, 0, 0);
	MakeFunction    (0X11A34,0X11A42);
	SetFunctionFlags(0X11A34,0x400);
	MakeFunction    (0X11A70,0X11ACC);
	SetFunctionFlags(0X11A70,0x400);
	MakeFunction    (0X11ACC,0X11AE0);
	SetFunctionFlags(0X11ACC,0x400);
	MakeFunction    (0X11AE0,0X11AF2);
	SetFunctionFlags(0X11AE0,0x400);
	MakeFunction    (0X11AF2,0X11B0A);
	SetFunctionFlags(0X11AF2,0x400);
	MakeFunction    (0X11B0A,0X11B20);
	SetFunctionFlags(0X11B0A,0x400);
	MakeFunction    (0X11B20,0X11B2C);
	SetFunctionFlags(0X11B20,0x400);
	MakeFunction    (0X11B2C,0X11B34);
	SetFunctionFlags(0X11B2C,0x400);
	MakeFunction    (0X11B34,0X11B6C);
	SetFunctionFlags(0X11B34,0x400);
	MakeFrame(0X11B34, 0X10, 0, 0);
	MakeFunction    (0X11B6C,0X11BA0);
	SetFunctionFlags(0X11B6C,0x400);
	MakeFrame(0X11B6C, 0XC, 0, 0);
	MakeFunction    (0X11BA0,0X11C08);
	SetFunctionFlags(0X11BA0,0x400);
	MakeFrame(0X11BA0, 0X10, 0, 0);
	MakeFunction    (0X11C08,0X11C42);
	SetFunctionFlags(0X11C08,0x400);
	MakeFrame(0X11C08, 0X10, 0, 0);
	MakeFunction    (0X11C68,0X11C8A);
	SetFunctionFlags(0X11C68,0x400);
	MakeFrame(0X11C68, 0X8, 0, 0);
	MakeFunction    (0X11C8A,0X11C90);
	SetFunctionFlags(0X11C8A,0x404);
	SetFunctionCmt(0X11C8A,	"Get current CPU timestamp timer count value. May be defined as CPU_TS_TmrRd() to improve performance when retrieving the timestamp.", 1);
	MakeFrame(0X11C8A, 0, 0, 0);
	MakeFunction    (0X11C90,0X11C96);
	SetFunctionFlags(0X11C90,0x400);
	MakeFunction    (0X11CA0,0X11CA2);
	SetFunctionFlags(0X11CA0,0x400);
	MakeFunction    (0X11CA2,0X11CB0);
	SetFunctionFlags(0X11CA2,0x400);
	MakeFunction    (0X11CB0,0X11CB4);
	SetFunctionFlags(0X11CB0,0x480);
	SetType(0X11CB0, "void j___disable_irq(void);");
	MakeFunction    (0X11CB4,0X11CC2);
	SetFunctionFlags(0X11CB4,0x400);
	MakeFunction    (0X11CC2,0X11CEC);
	SetFunctionFlags(0X11CC2,0x400);
	MakeFrame(0X11CC2, 0X10, 0, 0);
	MakeFunction    (0X11CEC,0X11D1A);
	SetFunctionFlags(0X11CEC,0x400);
	MakeFrame(0X11CEC, 0X10, 0, 0);
	MakeFunction    (0X11D1A,0X11D1C);
	SetFunctionFlags(0X11D1A,0x440);
	MakeFunction    (0X11D1C,0X11D30);
	SetFunctionFlags(0X11D1C,0x400);
	MakeFrame(0X11D1C, 0X8, 0, 0);
	MakeFunction    (0X11D30,0X11D32);
	SetFunctionFlags(0X11D30,0x401);
	MakeFunction    (0X11D32,0X11D34);
	SetFunctionFlags(0X11D32,0x401);
	MakeFunction    (0X11D34,0X11D36);
	SetFunctionFlags(0X11D34,0x401);
	MakeFunction    (0X11D36,0X11D38);
	SetFunctionFlags(0X11D36,0x401);
	MakeFunction    (0X11D38,0X11D3A);
	SetFunctionFlags(0X11D38,0x401);
	MakeFunction    (0X11D3A,0X11D3C);
	SetFunctionFlags(0X11D3A,0x401);
	MakeFunction    (0X11D3C,0X11D3E);
	SetFunctionFlags(0X11D3C,0x401);
	MakeFunction    (0X11D3E,0X11D70);
	SetFunctionFlags(0X11D3E,0x404);
	SetType(0X11D3E, "void OS_CPU_IntHandler(void);");
	SetFunctionCmt(0X11D3E,	"Handles all Cortex NVIC's external sources interrupts", 1);
	MakeFrame(0X11D3E, 0X10, 0, 0);
	MakeFunction    (0X11F90,0X11F92);
	SetFunctionFlags(0X11F90,0x404);
	SetType(0X11F90, "void OSCfg_Init(void);");
	SetFunctionCmt(0X11F90,	"This function is used to make sure that debug variables that are unused in the application are not optimized away.\nThis function might not be necessary for all compilers.", 1);
	MakeFrame(0X11F90, 0, 0, 0);
	MakeFunction    (0X11F94,0X11FA2);
	SetFunctionFlags(0X11F94,0x405);
	SetType(0X11F94, "void __cdecl OS_IdleTask(void *p_arg);");
	SetFunctionCmt(0X11F94,	"This task is internal to uC/OS-III and executes whenever no other higher priority tasks executes because they are ALL waiting for event(s) to occur.", 1);
	MakeFrame(0X11F94, 0, 0, 0);
	MakeFunction    (0X11FA2,0X11FE0);
	SetFunctionFlags(0X11FA2,0x404);
	SetType(0X11FA2, "void __cdecl OS_IdleTaskInit(enum OS_ERR *p_err);");
	SetFunctionCmt(0X11FA2,	"This function initializes the idle task", 1);
	MakeFrame(0X11FA2, 0X28, 0, 0);
	MakeLocal(0X11FA2, 0X11FE0, "[bp-0X20]", "stk_limit");
	MakeLocal(0X11FA2, 0X11FE0, "[bp-0X14]", "time_quanta");
	MakeLocal(0X11FA2, 0X11FE0, "[bp-0X10]", "p_ext");
	MakeFunction    (0X11FE0,0X11FFE);
	SetFunctionFlags(0X11FE0,0x404);
	SetType(0X11FE0, "void OS_RdyListInit(void);");
	SetFunctionCmt(0X11FE0,	"This function is called by OSInit() to initialize the ready list.\nThe ready list contains a list of all the tasks that are ready to run.", 1);
	MakeFrame(0X11FE0, 0, 0, 0);
	MakeFunction    (0X11FFE,0X12086);
	SetFunctionFlags(0X11FFE,0x404);
	SetType(0X11FFE, "void __cdecl OSInit(enum OS_ERR *p_err);");
	SetFunctionCmt(0X11FFE,	"This function is used to initialize the internals of uC/OS-III and MUST be called prior to creating any uC/OS-III object and, prior to calling OS_Start().", 1);
	MakeFrame(0X11FFE, 0X8, 0, 0);
	MakeFunction    (0X12086,0X1209C);
	SetFunctionFlags(0X12086,0x404);
	SetType(0X12086, "void OSIntEnter(void);");
	SetFunctionCmt(0X12086,	"This function is used to notify uC/OS-III that you are about to service an interrupt service routine (ISR).\nThis allows uC/OS-III to keep track of interrupt nesting and thus only perform rescheduling at the last nested ISR.", 1);
	MakeFrame(0X12086, 0, 0, 0);
	MakeFunction    (0X1209C,0X12104);
	SetFunctionFlags(0X1209C,0x404);
	SetType(0X1209C, "void OSIntExit(void);");
	SetFunctionCmt(0X1209C,	"This function is used to notify uC/OS-III that you have completed servicing an ISR.\nWhen the last nested ISR has completed, uC/OS-III will call the scheduler to determine whether a new, high-priority task, is ready to run.", 1);
	MakeFrame(0X1209C, 0X8, 0, 0);
	MakeFunction    (0X12104,0X1215E);
	SetFunctionFlags(0X12104,0x404);
	SetType(0X12104, "void OSSched(void);");
	SetFunctionCmt(0X12104,	"This function is called by other uC/OS-III services to determine whether a new, high priority task has been made ready to run.\nThis function is invoked by TASK level code and is not used to reschedule tasks from ISRs (see OSIntExit() for ISR rescheduling).", 1);
	MakeFrame(0X12104, 0X8, 0, 0);
	MakeFunction    (0X1215E,0X12172);
	SetFunctionFlags(0X1215E,0x404);
	SetType(0X1215E, "void OS_SchedLockTimeMeasStart(void);");
	SetFunctionCmt(0X1215E,	"These functions are used to measure the peak amount of time that the scheduler is locked", 1);
	MakeFrame(0X1215E, 0X8, 0, 0);
	MakeFunction    (0X12172,0X121B6);
	SetFunctionFlags(0X12172,0x404);
	SetType(0X12172, "void __cdecl OSSchedLock(enum OS_ERR *p_err);");
	SetFunctionCmt(0X12172,	"This function is used to prevent rescheduling from taking place.\nThis allows your application to prevent context switches until you are ready to permit context switching.", 1);
	MakeFrame(0X12172, 0X10, 0, 0);
	MakeFunction    (0X121B6,0X121E0);
	SetFunctionFlags(0X121B6,0x404);
	SetType(0X121B6, "void OS_SchedLockTimeMeasStop(void);");
	MakeFrame(0X121B6, 0X8, 0, 0);
	MakeFunction    (0X121E0,0X1223C);
	SetFunctionFlags(0X121E0,0x404);
	SetType(0X121E0, "void __cdecl OSSchedUnlock(enum OS_ERR *p_err);");
	SetFunctionCmt(0X121E0,	"This function is used to re-allow rescheduling.", 1);
	MakeFrame(0X121E0, 0X10, 0, 0);
	MakeFunction    (0X1223C,0X12274);
	SetFunctionFlags(0X1223C,0x404);
	SetType(0X1223C, "void __cdecl OSStart(enum OS_ERR *p_err);");
	SetFunctionCmt(0X1223C,	"This function is used to start the multitasking process which lets uC/OS-III manages the task that you created.\nBefore you can call OSStart(), you MUST have called OSInit() and you MUST have created at least one application task.", 1);
	MakeFrame(0X1223C, 0X10, 0, 0);
	MakeFunction    (0X12274,0X1227A);
	SetFunctionFlags(0X12274,0x400);
	MakeFunction    (0X1227A,0X12284);
	SetFunctionFlags(0X1227A,0x400);
	MakeFunction    (0X12284,0X122B2);
	SetFunctionFlags(0X12284,0x404);
	SetType(0X12284, "void __cdecl OS_PendDbgNameAdd(struct OS_PEND_OBJ *p_obj, struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X12284,	"Used to add pointers to ASCII 'names' of objects so they can easily be displayed using a kernel aware tool.", 1);
	MakeFrame(0X12284, 0, 0, 0);
	MakeFunction    (0X122B2,0X1230C);
	SetFunctionFlags(0X122B2,0x404);
	SetType(0X122B2, "void __cdecl OS_PendListInsertPrio(struct OS_PEND_LIST *p_pend_list, struct OS_PEND_DATA *p_pend_data);");
	SetFunctionCmt(0X122B2,	"This function is called to place an OS_PEND_DATA entry in a linked list based on its priority.\nThe highest priority being placed at the head of the list.", 1);
	MakeFrame(0X122B2, 0XC, 0, 0);
	MakeFunction    (0X1230C,0X1233C);
	SetFunctionFlags(0X1230C,0x404);
	SetType(0X1230C, "void __cdecl OS_PendDataInit(struct OS_TCB *p_tcb, struct OS_PEND_DATA *p_pend_data_tbl, unsigned __int16 tbl_size);");
	SetFunctionCmt(0X1230C,	"This function is called to initialize the fields of a table of OS_PEND_DATA entries.\nIt's assumed that the .PendObjPtr field of each entry in the table is set by the caller and thus will NOT be touched by this function.", 1);
	MakeFrame(0X1230C, 0X8, 0, 0);
	MakeFunction    (0X1233C,0X1240C);
	SetFunctionFlags(0X1233C,0x404);
	SetType(0X1233C, "void __cdecl OS_RdyListRemove(struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X1233C,	"This function is called to remove an OS_TCB from an OS_RDY_LIST knowing the address of the OS_TCB to remove.", 1);
	MakeFrame(0X1233C, 0X10, 0, 0);
	MakeFunction    (0X1240C,0X12436);
	SetFunctionFlags(0X1240C,0x404);
	SetType(0X1240C, "void __cdecl OS_TaskBlock(struct OS_TCB *p_tcb, unsigned __int32 timeout);");
	SetFunctionCmt(0X1240C,	"This function is called to remove a task from the ready list and also insert it in the timer tick list if the specified timeout is non-zero.", 1);
	MakeFrame(0X1240C, 0X10, 0, 0);
	MakeFunction    (0X12436,0X1247E);
	SetFunctionFlags(0X12436,0x404);
	SetType(0X12436, "void __cdecl OS_Pend(struct OS_PEND_DATA *p_pend_data, struct OS_PEND_OBJ *p_obj, unsigned __int8 pending_on, unsigned __int32 timeout);");
	SetFunctionCmt(0X12436,	"This function is called to place a task in the blocked state waiting for an event to occur.\nThis function exist because it is common to a number of OSxxxPend() services.", 1);
	MakeFrame(0X12436, 0X18, 0, 0);
	MakeFunction    (0X1247E,0X124B4);
	SetFunctionFlags(0X1247E,0x404);
	SetType(0X1247E, "void __cdecl OS_PendListRemove1(struct OS_PEND_LIST *p_pend_list, struct OS_PEND_DATA *p_pend_data);");
	SetFunctionCmt(0X1247E,	"This function is called to remove a task from a wait list knowing only the TCB of the task to remove", 1);
	MakeFrame(0X1247E, 0X8, 0, 0);
	MakeFunction    (0X124B4,0X124DA);
	SetFunctionFlags(0X124B4,0x404);
	SetType(0X124B4, "void __cdecl OS_PendListRemove(struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X124B4,	"This function is called to remove a task from a pend list knowing only the TCB of the task to remove", 1);
	MakeFrame(0X124B4, 0X10, 0, 0);
	MakeFunction    (0X124DA,0X124FA);
	SetFunctionFlags(0X124DA,0x404);
	SetType(0X124DA, "void __cdecl OS_PendAbort1(struct OS_PEND_OBJ *p_obj, struct OS_TCB *p_tcb, unsigned __int32 ts);");
	SetFunctionCmt(0X124DA,	"This function is called when a task is pending on multiple objects and one of the objects has been pend aborted.\nThis function needs to indicate to the caller which object was pend aborted by placing the address of the object in the OS_PEND_DATA table corresponding to the pend aborted object.", 1);
	MakeFrame(0X124DA, 0X8, 0, 0);
	MakeFunction    (0X124FA,0X1252E);
	SetFunctionFlags(0X124FA,0x404);
	SetType(0X124FA, "void __cdecl OS_RdyListInsertHead(struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X124FA,	"This function is called to place an OS_TCB at the beginning of a linked list", 1);
	MakeFrame(0X124FA, 0, 0, 0);
	MakeFunction    (0X1252E,0X1255E);
	SetFunctionFlags(0X1252E,0x404);
	SetType(0X1252E, "void __cdecl OS_RdyListInsertTail(struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X1252E,	"This function is called to place an OS_TCB at the end of a linked list.\nThis function is INTERNAL to uC/OS-III and your application MUST NOT call it.", 1);
	MakeFrame(0X1252E, 0, 0, 0);
	MakeFunction    (0X1255E,0X12584);
	SetFunctionFlags(0X1255E,0x404);
	SetType(0X1255E, "void __cdecl OS_RdyListInsert(struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X1255E,	"This function is called to insert a TCB in the ready list.\nThis function is INTERNAL to uC/OS-III and your application should not call it.", 1);
	MakeFrame(0X1255E, 0X8, 0, 0);
	MakeFunction    (0X12584,0X1259E);
	SetFunctionFlags(0X12584,0x404);
	SetType(0X12584, "void __cdecl OS_TaskRdy(struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X12584,	"This function is called to make a task ready-to-run.\nThis function is INTERNAL to uC/OS-III and your application MUST NOT call it.", 1);
	MakeFrame(0X12584, 0X8, 0, 0);
	MakeFunction    (0X1259E,0X12626);
	SetFunctionFlags(0X1259E,0x404);
	SetType(0X1259E, "void __cdecl OS_PendAbort(struct OS_PEND_OBJ *p_obj, struct OS_TCB *p_tcb, unsigned __int32 ts);");
	SetFunctionCmt(0X1259E,	"This function is called by OSxxxPendAbort() functions to abort pending on an event.", 1);
	MakeFrame(0X1259E, 0X18, 0, 0);
	MakeFunction    (0X12626,0X1263C);
	SetFunctionFlags(0X12626,0x404);
	SetType(0X12626, "void __cdecl OS_PendDbgNameRemove(struct OS_PEND_OBJ *p_obj, struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X12626,	"Used to remove pointers to ASCII 'names' of objects.", 1);
	MakeFrame(0X12626, 0, 0, 0);
	MakeFunction    (0X1263C,0X1266E);
	SetFunctionFlags(0X1263C,0x404);
	SetType(0X1263C, "void __cdecl OS_PendListChangePrio(struct OS_TCB *p_tcb, unsigned __int8 prio_new);");
	SetFunctionCmt(0X1263C,	"This function is called to change the position of a task waiting in one or more pend lists.\nBecause a task can be waiting on multiple objects then each pend list needs to be updated.  Specifically, the\ntask can be the highest priority task waiting on one pend list, the lowest priority task waiting in yet\nanother pend list or somewhere else in another pend list.", 1);
	MakeFrame(0X1263C, 0X10, 0, 0);
	MakeFunction    (0X1266E,0X12678);
	SetFunctionFlags(0X1266E,0x404);
	SetType(0X1266E, "void __cdecl OS_PendListInit(struct OS_PEND_LIST *p_pend_list);");
	SetFunctionCmt(0X1266E,	"This function is called to initialize the fields of an OS_PEND_LIST.", 1);
	MakeFrame(0X1266E, 0, 0, 0);
	MakeFunction    (0X12678,0X12698);
	SetFunctionFlags(0X12678,0x404);
	SetType(0X12678, "void __cdecl OS_PendListInsertHead(struct OS_PEND_LIST *p_pend_list, struct OS_PEND_DATA *p_pend_data);");
	SetFunctionCmt(0X12678,	"This function is called to place an OS_PEND_DATA entry at the beginning of a linked list", 1);
	MakeFrame(0X12678, 0, 0, 0);
	MakeFunction    (0X12698,0X126B8);
	SetFunctionFlags(0X12698,0x404);
	SetType(0X12698, "void __cdecl OS_PendObjDel1(struct OS_PEND_OBJ *p_obj, struct OS_TCB *p_tcb, unsigned __int32 ts);");
	SetFunctionCmt(0X12698,	"This function is called when a task is pending on multiple objects and the object is being deleted.\nThis function needs to indicate to the caller which object was deleted by placing the address of the\nobject in the OS_PEND_DATA table corresponding to the deleted object.", 1);
	MakeFrame(0X12698, 0X8, 0, 0);
	MakeFunction    (0X126B8,0X12736);
	SetFunctionFlags(0X126B8,0x404);
	SetType(0X126B8, "void __cdecl OS_PendObjDel(struct OS_PEND_OBJ *p_obj, struct OS_TCB *p_tcb, unsigned __int32 ts);");
	SetFunctionCmt(0X126B8,	"This function is called when a object is to make a task ready-to-run.", 1);
	MakeFrame(0X126B8, 0X18, 0, 0);
	MakeFunction    (0X12736,0X1275C);
	SetFunctionFlags(0X12736,0x404);
	SetType(0X12736, "void __cdecl OS_Post1(struct OS_PEND_OBJ *p_obj, struct OS_TCB *p_tcb, void *p_void, unsigned __int16 msg_size, unsigned __int32 ts);");
	SetFunctionCmt(0X12736,	"This function is called when a task is pending on multiple objects and the object has been posted to.\nThis function needs to indicate to the caller which object was posted to by placing the address of the\nobject in the OS_PEND_DATA table corresponding to the posted object.", 1);
	MakeFrame(0X12736, 0X10, 0, 0);
	MakeLocal(0X12736, 0X1275C, "[bp+0]", "ts");
	MakeFunction    (0X1275C,0X127F4);
	SetFunctionFlags(0X1275C,0x404);
	SetType(0X1275C, "void __cdecl OS_Post(struct OS_PEND_OBJ *p_obj, struct OS_TCB *p_tcb, void *p_void, unsigned __int16 msg_size, unsigned __int32 ts);");
	SetFunctionCmt(0X1275C,	"This function is called to post to a task.  This function exist because it is common to a number of OSxxxPost() services.\nINTERNAL to uC/OS-III - your application should not call it.", 1);
	MakeFrame(0X1275C, 0X18, 0, 0);
	MakeLocal(0X1275C, 0X127F4, "[bp+0]", "ts");
	MakeFunction    (0X127F4,0X12828);
	SetFunctionFlags(0X127F4,0x400);
	MakeFrame(0X127F4, 0X8, 0, 0);
	MakeFunction    (0X12838,0X1283A);
	SetFunctionFlags(0X12838,0x404);
	SetType(0X12838, "void OSIdleTaskHook(void);");
	SetFunctionCmt(0X12838,	"This function is called by the idle task.\nThis hook has been added to allow you to do such things as STOP the CPU to conserve power.", 1);
	MakeFrame(0X12838, 0, 0, 0);
	MakeFunction    (0X1283A,0X12860);
	SetFunctionFlags(0X1283A,0x404);
	SetType(0X1283A, "void OSInitHook(void);");
	SetFunctionCmt(0X1283A,	"This function is called by OSInit() at the beginning of OSInit().", 1);
	MakeFrame(0X1283A, 0XC, 0, 0);
	MakeFunction    (0X12860,0X12862);
	SetFunctionFlags(0X12860,0x404);
	SetType(0X12860, "void OSStatTaskHook(void);");
	SetFunctionCmt(0X12860,	"This function is called every second by uC/OS-III's statistics task.\nThis allows your application to add functionality to the statistics task.", 1);
	MakeFrame(0X12860, 0, 0, 0);
	MakeFunction    (0X12862,0X12864);
	SetFunctionFlags(0X12862,0x404);
	SetType(0X12862, "void __cdecl OSTaskCreateHook(struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X12862,	"This function is called when a task is created.", 1);
	MakeFrame(0X12862, 0, 0, 0);
	MakeFunction    (0X12864,0X12866);
	SetFunctionFlags(0X12864,0x404);
	SetType(0X12864, "void __cdecl OSTaskDelHook(struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X12864,	"This function is called when a task is deleted.", 1);
	MakeFrame(0X12864, 0, 0, 0);
	MakeFunction    (0X12866,0X12868);
	SetFunctionFlags(0X12866,0x404);
	SetType(0X12866, "void __cdecl OSTaskReturnHook(struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X12866,	"This function is called if a task accidentally returns.  In other words, a task should either be an infinite loop or delete itself when done.", 1);
	MakeFrame(0X12866, 0, 0, 0);
	MakeFunction    (0X12868,0X128C4);
	SetFunctionFlags(0X12868,0x404);
	SetType(0X12868, "struct CPU_STK *__cdecl OSTaskStkInit(void (__cdecl *p_task)(void *), void *p_arg, struct CPU_STK *p_stk_base, struct CPU_STK *p_stk_limit, unsigned __int32 stk_size, unsigned __int16 opt);");
	SetFunctionCmt(0X12868,	"This function is called by OS_Task_Create() or OSTaskCreateExt() to initialize the stack frame of the task being created.\nThis function is highly processor specific.", 1);
	MakeFrame(0X12868, 0X8, 0, 0);
	MakeLocal(0X12868, 0X128C4, "[bp+0]", "stk_size");
	MakeLocal(0X12868, 0X128C4, "[bp+0X4]", "opt");
	MakeFunction    (0X128C4,0X12912);
	SetFunctionFlags(0X128C4,0x404);
	SetType(0X128C4, "void OSTaskSwHook(void);");
	SetFunctionCmt(0X128C4,	"This function is called when a task switch is performed.\nThis allows you to perform other operations during a context switch.", 1);
	MakeFrame(0X128C4, 0X10, 0, 0);
	MakeFunction    (0X12912,0X12914);
	SetFunctionFlags(0X12912,0x404);
	SetType(0X12912, "void OSTimeTickHook(void);");
	SetFunctionCmt(0X12912,	"This function is called every tick.", 1);
	MakeFrame(0X12912, 0, 0, 0);
	MakeFunction    (0X12914,0X1293E);
	SetFunctionFlags(0X12914,0x404);
	SetType(0X12914, "void OS_CPU_SysTickHandler(void);");
	SetFunctionCmt(0X12914,	"Handle the system tick (SysTick) interrupt, which is used to generate the uC/OS-II tick interrupt.", 1);
	MakeFrame(0X12914, 0X8, 0, 0);
	MakeFunction    (0X1293E,0X12962);
	SetFunctionFlags(0X1293E,0x404);
	SetType(0X1293E, "void __cdecl OS_CPU_SysTickInit(unsigned __int32 cnts);");
	SetFunctionCmt(0X1293E,	"Initialize the SysTick.", 1);
	MakeFrame(0X1293E, 0, 0, 0);
	MakeFunction    (0X12988,0X1298A);
	SetFunctionFlags(0X12988,0x404);
	SetType(0X12988, "void OS_Dbg_Init(void);");
	SetFunctionCmt(0X12988,	"This function is used to make sure that debug variables that are unused in the application are not optimized away.\nThis function might not be necessary for all compilers.", 1);
	MakeFrame(0X12988, 0, 0, 0);
	MakeFunction    (0X1298C,0X129BC);
	SetFunctionFlags(0X1298C,0x404);
	SetType(0X1298C, "void __cdecl OS_MsgPoolCreate(struct OS_MSG *p_msg, unsigned __int16 size);");
	SetFunctionCmt(0X1298C,	"This function is called to create a singly linked list of OS_MSGs which is used as a pool of available OS_MSGs to be used for sending messages.", 1);
	MakeFrame(0X1298C, 0X8, 0, 0);
	MakeFunction    (0X129BC,0X129E2);
	SetFunctionFlags(0X129BC,0x400);
	MakeFrame(0X129BC, 0X10, 0, 0);
	MakeFunction    (0X129E2,0X12A04);
	SetFunctionFlags(0X129E2,0x404);
	SetType(0X129E2, "void __cdecl OS_MsgPoolInit(enum OS_ERR *p_err);");
	SetFunctionCmt(0X129E2,	"This function is called by OSInit() to initialize the free list of OS_MSGs.", 1);
	MakeFrame(0X129E2, 0X10, 0, 0);
	MakeFunction    (0X12A04,0X12A24);
	SetFunctionFlags(0X12A04,0x400);
	MakeFrame(0X12A04, 0X10, 0, 0);
	MakeFunction    (0X12A24,0X12A52);
	SetFunctionFlags(0X12A24,0x404);
	SetType(0X12A24, "unsigned __int16 __cdecl OS_MsgQFreeAll(struct OS_MSG_Q *p_msg_q);");
	SetFunctionCmt(0X12A24,	"This function returns all the messages in a message queue to the free list.", 1);
	MakeFrame(0X12A24, 0X8, 0, 0);
	MakeFunction    (0X12A52,0X12A60);
	SetFunctionFlags(0X12A52,0x404);
	SetType(0X12A52, "void __cdecl OS_MsgQInit(struct OS_MSG_Q *p_msg_q, unsigned __int16 size);");
	SetFunctionCmt(0X12A52,	"This function is called to initialize a message queue.\nINTERNAL to uC/OS-III - your application MUST NOT call it.", 1);
	MakeFrame(0X12A52, 0, 0, 0);
	MakeFunction    (0X12A60,0X12AB2);
	SetFunctionFlags(0X12A60,0x404);
	SetType(0X12A60, "void *__cdecl OS_MsgQGet(struct OS_MSG_Q *p_msg_q, unsigned __int16 *p_msg_size, unsigned __int32 *p_ts, enum OS_ERR *p_err);");
	SetFunctionCmt(0X12A60,	"This function retrieves a message from a message queue.", 1);
	MakeFrame(0X12A60, 0X14, 0, 0);
	MakeFunction    (0X12AB2,0X12B38);
	SetFunctionFlags(0X12AB2,0x404);
	SetType(0X12AB2, "void __cdecl OS_MsgQPut(struct OS_MSG_Q *p_msg_q, void *p_void, unsigned __int16 msg_size, unsigned __int16 opt, unsigned __int32 ts, enum OS_ERR *p_err);");
	SetFunctionCmt(0X12AB2,	"This function places a message in a message queue.", 1);
	MakeFrame(0X12AB2, 0X1C, 0, 0);
	MakeLocal(0X12AB2, 0X12B38, "[bp+0]", "ts");
	MakeLocal(0X12AB2, 0X12B38, "[bp+0X4]", "p_err");
	MakeFunction    (0X12B44,0X12B54);
	SetFunctionFlags(0X12B44,0x404);
	SetType(0X12B44, "void OS_PrioInit(void);");
	MakeFrame(0X12B44, 0, 0, 0);
	MakeFunction    (0X12B54,0X12B74);
	SetFunctionFlags(0X12B54,0x404);
	SetType(0X12B54, "enum OS_PRIO OS_PrioGetHighest(void);");
	MakeFrame(0X12B54, 0X8, 0, 0);
	MakeFunction    (0X12B74,0X12B90);
	SetFunctionFlags(0X12B74,0x404);
	SetType(0X12B74, "void __cdecl OS_PrioInsert(enum OS_PRIO prio);");
	SetFunctionCmt(0X12B74,	"This function is called to insert a priority in the priority table.", 1);
	MakeFrame(0X12B74, 0, 0, 0);
	MakeFunction    (0X12B90,0X12BAC);
	SetFunctionFlags(0X12B90,0x404);
	SetType(0X12B90, "void __cdecl OS_PrioRemove(enum OS_PRIO prio);");
	SetFunctionCmt(0X12B90,	"This function is called to remove a priority in the priority table.", 1);
	MakeFrame(0X12B90, 0, 0, 0);
	MakeFunction    (0X12BB0,0X12BCA);
	SetFunctionFlags(0X12BB0,0x404);
	SetType(0X12BB0, "void __cdecl OS_SemDbgListAdd(struct OS_SEM *p_sem);");
	SetFunctionCmt(0X12BB0,	"Called by uC/OS-III to add a semaphore to the debug list.", 1);
	MakeFrame(0X12BB0, 0, 0, 0);
	MakeFunction    (0X12BCA,0X12C14);
	SetFunctionFlags(0X12BCA,0x404);
	SetType(0X12BCA, "void __cdecl OSSemCreate(struct OS_SEM *p_sem, char *p_name, unsigned __int32 cnt, enum OS_ERR *p_err);");
	SetFunctionCmt(0X12BCA,	"This function creates a semaphore.", 1);
	MakeFrame(0X12BCA, 0X18, 0, 0);
	MakeFunction    (0X12C14,0X12C2A);
	SetFunctionFlags(0X12C14,0x404);
	SetType(0X12C14, "void __cdecl OS_SemClr(struct OS_SEM *p_sem);");
	SetFunctionCmt(0X12C14,	"This function is called by OSSemDel() to clear the contents of a semaphore", 1);
	MakeFrame(0X12C14, 0, 0, 0);
	MakeFunction    (0X12C2A,0X12C4E);
	SetFunctionFlags(0X12C2A,0x404);
	SetType(0X12C2A, "void __cdecl OS_SemDbgListRemove(struct OS_SEM *p_sem);");
	MakeFrame(0X12C2A, 0, 0, 0);
	MakeFunction    (0X12C4E,0X12D0A);
	SetFunctionFlags(0X12C4E,0x404);
	SetType(0X12C4E, "unsigned __int16 __cdecl OSSemDel(struct OS_SEM *p_sem, unsigned __int16 opt, enum OS_ERR *p_err);");
	SetFunctionCmt(0X12C4E,	"This function deletes a semaphore.", 1);
	MakeFrame(0X12C4E, 0X28, 0, 0);
	MakeLocal(0X12C4E, 0X12D0A, "[bp-0X28]", "priMask");
	MakeFunction    (0X12D0E,0X12E18);
	SetFunctionFlags(0X12D0E,0x400);
	MakeFrame(0X12D0E, 0X48, 0, 0);
	MakeFunction    (0X12E18,0X12E8E);
	SetFunctionFlags(0X12E18,0x404);
	SetType(0X12E18, "unsigned __int16 __cdecl OSxxxPendAbort(void *p_unk, unsigned __int16 opt, enum OS_ERR *p_err);");
	SetFunctionCmt(0X12E18,	"This function aborts & readies any tasks currently waiting on (xxx)", 1);
	MakeFrame(0X12E18, 0X28, 0, 0);
	MakeFunction    (0X12E8E,0X12F20);
	SetFunctionFlags(0X12E8E,0x400);
	MakeFrame(0X12E8E, 0X28, 0, 0);
	MakeLocal(0X12E8E, 0X12F20, "[bp-0X28]", "ts");
	MakeFunction    (0X12F20,0X12F3A);
	SetFunctionFlags(0X12F20,0x400);
	MakeFrame(0X12F20, 0X10, 0, 0);
	MakeFunction    (0X12F3A,0X12F48);
	SetFunctionFlags(0X12F3A,0x400);
	MakeFunction    (0X12F6C,0X13028);
	SetFunctionFlags(0X12F6C,0x404);
	SetType(0X12F6C, "void __cdecl OSTaskChangePrio(struct OS_TCB *p_tcb, enum OS_PRIO prio_new, enum OS_ERR *p_err);");
	SetFunctionCmt(0X12F6C,	"This function allows you to change the priority of a task dynamically.\nNote that the new priority MUST be available.", 1);
	MakeFrame(0X12F6C, 0X18, 0, 0);
	MakeFunction    (0X13028,0X13046);
	SetFunctionFlags(0X13028,0x404);
	SetType(0X13028, "void __cdecl OS_TaskDbgListAdd(struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X13028,	"These functions are called by uC/OS-III to add or remove an OS_TCB from the debug list.", 1);
	MakeFrame(0X13028, 0, 0, 0);
	MakeFunction    (0X13046,0X130CA);
	SetFunctionFlags(0X13046,0x404);
	SetType(0X13046, "void __cdecl OS_TaskInitTCB(struct OS_TCB *p_tcb);");
	MakeFrame(0X13046, 0X10, 0, 0);
	MakeFunction    (0X130CA,0X131B6);
	SetFunctionFlags(0X130CA,0x404);
	SetType(0X130CA, "void __fastcall OSTaskCreate(struct OS_TCB *p_tcb, char *p_name, void (__cdecl *p_task)(void *), void *p_arg, enum OS_PRIO prio, enum CPU_STK *p_stk_base, unsigned int stk_limit, unsigned int stk_size, int q_size, unsigned __int32 time_quanta, void *p_ext, enum OS_OPT opt, enum OS_ERR *p_err);");
	MakeFrame(0X130CA, 0X40, 0, 0);
	MakeLocal(0X130CA, 0X131B6, "[bp+0]", "prio");
	MakeLocal(0X130CA, 0X131B6, "[bp+0X4]", "p_stk_base");
	MakeLocal(0X130CA, 0X131B6, "[bp+0X8]", "stk_limit");
	MakeLocal(0X130CA, 0X131B6, "[bp+0XC]", "stk_size");
	MakeLocal(0X130CA, 0X131B6, "[bp+0X10]", "q_size");
	MakeLocal(0X130CA, 0X131B6, "[bp+0X14]", "time_quanta");
	MakeLocal(0X130CA, 0X131B6, "[bp+0X18]", "p_ext");
	MakeLocal(0X130CA, 0X131B6, "[bp+0X1C]", "opt");
	MakeLocal(0X130CA, 0X131B6, "[bp+0X20]", "p_err");
	MakeFunction    (0X131B6,0X131FC);
	SetFunctionFlags(0X131B6,0x400);
	MakeFrame(0X131B6, 0X10, 0, 0);
	MakeFunction    (0X131FC,0X13328);
	SetFunctionFlags(0X131FC,0x400);
	MakeFrame(0X131FC, 0X28, 0, 0);
	MakeLocal(0X131FC, 0X13328, "[bp-0X28]", "priMask");
	MakeFunction    (0X13328,0X133AA);
	SetFunctionFlags(0X13328,0x400);
	SetType(0X13328, "void __cdecl OS_TaskQPost(struct OS_TCB *p_tcb, void *p_void, unsigned __int16 msg_size, unsigned __int16 opt, unsigned __int32 ts, enum OS_ERR *p_err);");
	SetFunctionCmt(0X13328,	"This function sends a message to a task", 1);
	MakeFrame(0X13328, 0X28, 0, 0);
	MakeLocal(0X13328, 0X133AA, "[bp+0]", "ts");
	MakeLocal(0X13328, 0X133AA, "[bp+0X4]", "p_err");
	MakeFunction    (0X133D0,0X133D4);
	SetFunctionFlags(0X133D0,0x480);
	SetType(0X133D0, "void j_OSSched(void);");
	MakeFunction    (0X133E8,0X1340E);
	SetFunctionFlags(0X133E8,0x400);
	MakeFrame(0X133E8, 0X20, 0, 0);
	MakeFunction    (0X1340E,0X134C6);
	SetFunctionFlags(0X1340E,0x400);
	MakeFrame(0X1340E, 0X10, 0, 0);
	MakeFunction    (0X134C6,0X135DA);
	SetFunctionFlags(0X134C6,0x404);
	SetType(0X134C6, "unsigned __int16 __cdecl OSTaskSemPend(unsigned __int32 timeout, unsigned __int16 opt, unsigned __int32 *p_ts, enum OS_ERR *p_err);");
	SetFunctionCmt(0X134C6,	"This function is called to block the current task until a signal is sent by another task or ISR.", 1);
	MakeFrame(0X134C6, 0X20, 0, 0);
	MakeFunction    (0X135DA,0X13682);
	SetFunctionFlags(0X135DA,0x404);
	SetType(0X135DA, "int __cdecl OS_TaskSemPost(struct OS_TCB *p_tcb, unsigned __int16 opt, unsigned __int32 ts, enum OS_ERR *p_err);");
	SetFunctionCmt(0X135DA,	"This function is called to signal a task waiting for a signal.", 1);
	MakeFrame(0X135DA, 0X20, 0, 0);
	MakeLocal(0X135DA, 0X13682, "[bp-0X20]", "ts");
	MakeFunction    (0X13682,0X1369C);
	SetFunctionFlags(0X13682,0x404);
	SetType(0X13682, "int __cdecl OSTaskSemPost(struct OS_TCB *p_tcb, unsigned __int16 opt, enum OS_ERR *p_err);");
	MakeFrame(0X13682, 0X10, 0, 0);
	MakeFunction    (0X1369C,0X136CC);
	SetFunctionFlags(0X1369C,0x404);
	SetType(0X1369C, "unsigned __int16 __cdecl OSTaskSemSet(struct OS_TCB *p_tcb, unsigned __int16 cnt, enum OS_ERR *p_err);");
	SetFunctionCmt(0X1369C,	"This function is called to clear the signal counter", 1);
	MakeFrame(0X1369C, 0X18, 0, 0);
	MakeFunction    (0X136CC,0X1377A);
	SetFunctionFlags(0X136CC,0x404);
	SetType(0X136CC, "void __cdecl OS_TaskSuspend(struct OS_TCB *p_tcb, enum OS_ERR *p_err);");
	SetFunctionCmt(0X136CC,	"This function is called to suspend a task.\nThe task can be the calling task if 'p_tcb' is a NULL pointer or the pointer to the TCB of the calling task.", 1);
	MakeFrame(0X136CC, 0X10, 0, 0);
	MakeFunction    (0X1377A,0X137AC);
	SetFunctionFlags(0X1377A,0x404);
	SetType(0X1377A, "void __cdecl OS_TaskDbgListRemove(struct OS_TCB *p_tcb);");
	MakeFrame(0X1377A, 0, 0, 0);
	MakeFunction    (0X137AC,0X137BE);
	SetFunctionFlags(0X137AC,0x404);
	SetType(0X137AC, "void __cdecl OS_TaskInit(enum OS_ERR *p_err);");
	SetFunctionCmt(0X137AC,	"This function is called by OSInit() to initialize the task management.", 1);
	MakeFrame(0X137AC, 0, 0, 0);
	MakeFunction    (0X137BE,0X137D6);
	SetFunctionFlags(0X137BE,0x405);
	SetType(0X137BE, "void OS_TaskReturn(void);");
	SetFunctionCmt(0X137BE,	"This function is called if a task accidentally returns without deleting itself.\nIn other words, a task should either be an infinite loop or delete itself if it's done.", 1);
	MakeFrame(0X137BE, 0X8, 0, 0);
	MakeFunction    (0X137F4,0X1382A);
	SetFunctionFlags(0X137F4,0x404);
	SetType(0X137F4, "void __cdecl OS_TickListRemove(struct OS_TCB *p_tcb);");
	SetFunctionCmt(0X137F4,	"This function is called to remove a task from the tick list", 1);
	MakeFrame(0X137F4, 0X8, 0, 0);
	MakeFunction    (0X1382A,0X13936);
	SetFunctionFlags(0X1382A,0x404);
	SetType(0X1382A, "void OS_TickListUpdate(void);");
	SetFunctionCmt(0X1382A,	"This function is called when a tick occurs and determines if the timeout waiting for a kernel object has expired or a delay has expired.", 1);
	MakeFrame(0X1382A, 0X28, 0, 0);
	MakeLocal(0X1382A, 0X13936, "[bp-0X28]", "priMask");
	MakeFunction    (0X13936,0X1395A);
	SetFunctionFlags(0X13936,0x405);
	SetType(0X13936, "void __cdecl OS_TickTask(void *p_arg);");
	SetFunctionCmt(0X13936,	"This task is internal to uC/OS-III and is triggered by the tick interrupt.", 1);
	MakeFrame(0X13936, 0X10, 0, 0);
	MakeLocal(0X13936, 0X1395A, "[bp-0XC]", "p_ts");
	MakeFunction    (0X1395A,0X1397C);
	SetFunctionFlags(0X1395A,0x404);
	SetType(0X1395A, "void OS_TickListInit(void);");
	SetFunctionCmt(0X1395A,	"This function initializes the tick handling data structures of uC/OS-III.", 1);
	MakeFrame(0X1395A, 0X8, 0, 0);
	MakeFunction    (0X1397C,0X139D4);
	SetFunctionFlags(0X1397C,0x404);
	SetType(0X1397C, "void __cdecl OS_TickTaskInit(enum OS_ERR *p_err);");
	SetFunctionCmt(0X1397C,	"This function is called by OSInit() to create the tick task.", 1);
	MakeFrame(0X1397C, 0X30, 0, 0);
	MakeLocal(0X1397C, 0X139D4, "[bp-0X30]", "prio");
	MakeLocal(0X1397C, 0X139D4, "[bp-0X2C]", "p_stk_base");
	MakeLocal(0X1397C, 0X139D4, "[bp-0X20]", "q_size");
	MakeLocal(0X1397C, 0X139D4, "[bp-0X1C]", "time_quanta");
	MakeLocal(0X1397C, 0X139D4, "[bp-0X10]", "p_err");
	MakeFunction    (0X139D4,0X13A9E);
	SetFunctionFlags(0X139D4,0x404);
	SetType(0X139D4, "void __cdecl OS_TickListInsert(struct OS_TCB *p_tcb, unsigned __int32 time, unsigned __int16 opt, enum OS_ERR *p_err);");
	SetFunctionCmt(0X139D4,	"This function is called to place a task in a list of task waiting for either time to expire or waiting to timeout on a pend call.", 1);
	MakeFrame(0X139D4, 0X14, 0, 0);
	MakeFunction    (0X13A9E,0X13ABC);
	SetFunctionFlags(0X13A9E,0x404);
	SetType(0X13A9E, "void OS_TickListResetPeak(void);");
	SetFunctionCmt(0X13A9E,	"This function is used to reset the peak detector for the number of entries in each spoke.", 1);
	MakeFrame(0X13A9E, 0X8, 0, 0);
	MakeFunction    (0X13AF8,0X13B5A);
	SetFunctionFlags(0X13AF8,0x404);
	SetType(0X13AF8, "void __cdecl OSTimeDly(unsigned __int32 dly, unsigned __int16 opt, enum OS_ERR *p_err);");
	SetFunctionCmt(0X13AF8,	"This function is called to delay execution of the currently running task until the specified number of system ticks expires.\nThis, of course, directly equates to delaying the current task for some time to expire.", 1);
	MakeFrame(0X13AF8, 0X18, 0, 0);
	MakeFunction    (0X13B78,0X13C34);
	SetFunctionFlags(0X13B78,0x404);
	SetType(0X13B78, "void __cdecl OSTimeDlyHMSM(unsigned __int16 hours, unsigned __int16 minutes, unsigned __int16 seconds, unsigned __int32 milli, unsigned __int16 opt, enum OS_ERR *p_err);");
	SetFunctionCmt(0X13B78,	"This function is called to delay execution of the currently running task until some time expires.\nThis call allows you to specify the delay time in HOURS, MINUTES, SECONDS and MILLISECONDS instead of ticks.", 1);
	MakeFrame(0X13B78, 0X18, 0, 0);
	MakeLocal(0X13B78, 0X13C34, "[bp+0]", "opt");
	MakeLocal(0X13B78, 0X13C34, "[bp+0X4]", "p_err");
	MakeFunction    (0X13C34,0X13C58);
	SetFunctionFlags(0X13C34,0x404);
	SetType(0X13C34, "unsigned __int32 __cdecl OSTimeGet(enum OS_ERR *p_err);");
	SetFunctionCmt(0X13C34,	"This function is used by your application to obtain the current value of the counter which keeps track of the number of clock ticks.", 1);
	MakeFrame(0X13C34, 0X10, 0, 0);
	MakeFunction    (0X13C58,0X13C7C);
	SetFunctionFlags(0X13C58,0x404);
	SetType(0X13C58, "void __cdecl OSTimeSet(unsigned __int32 ticks, enum OS_ERR *p_err);");
	SetFunctionCmt(0X13C58,	"This function sets the counter which keeps track of the number of clock ticks.", 1);
	MakeFrame(0X13C58, 0X10, 0, 0);
	MakeFunction    (0X13C7C,0X13C8E);
	SetFunctionFlags(0X13C7C,0x404);
	SetType(0X13C7C, "void OSTimeTick(void);");
	SetFunctionCmt(0X13C7C,	"This function is used to signal to uC/OS-III the occurrence of a 'system tick' (also known as a 'clock tick').\nThis function should be called by the tick ISR.", 1);
	MakeFrame(0X13C7C, 0X8, 0, 0);
	MakeFunction    (0X13CA4,0X13CBA);
	SetFunctionFlags(0X13CA4,0x400);
	MakeFrame(0X13CA4, 0X8, 0, 0);
	MakeFunction    (0X13CC0,0X13CC4);
	SetFunctionFlags(0X13CC0,0x404);
	SetType(0X13CC0, "void _disable_irq(void);");
	SetFunctionCmt(0X13CC0,	"Disable IRQ Interrupts\n\n  This function disables IRQ interrupts by setting the I-bit in the CPSR.\n  Can only be executed in Privileged modes.", 1);
	MakeFrame(0X13CC0, 0, 0, 0);
	MakeFunction    (0X13CC4,0X13CC8);
	SetFunctionFlags(0X13CC4,0x404);
	SetType(0X13CC4, "void _enable_irq(void);");
	SetFunctionCmt(0X13CC4,	"Enable IRQ Interrupts\n\n  This function enables IRQ interrupts by clearing the I-bit in the CPSR.\n  Can only be executed in Privileged modes.", 1);
	MakeFrame(0X13CC4, 0, 0, 0);
	MakeFunction    (0X13CC8,0X13CD0);
	SetFunctionFlags(0X13CC8,0x404);
	SetType(0X13CC8, "unsigned __int16 get_PRIMASK(void);");
	SetFunctionCmt(0X13CC8,	"Get Priority Mask\n\n    This function returns the current state of the priority mask bit from the Priority Mask Register.", 1);
	MakeFrame(0X13CC8, 0, 0, 0);
	MakeFunction    (0X13CD0,0X13CD6);
	SetFunctionFlags(0X13CD0,0x404);
	SetType(0X13CD0, "void __cdecl _set_PRIMASK(unsigned __int16 priMask);");
	SetFunctionCmt(0X13CD0,	"Set Priority Mask\n\n    This function assigns the given value to the Priority Mask Register.", 1);
	MakeFrame(0X13CD0, 0, 0, 0);
	MakeFunction    (0X13CD6,0X13CDC);
	SetFunctionFlags(0X13CD6,0x404);
	SetType(0X13CD6, "unsigned int __cdecl CPU_CntLeadZeros(unsigned int val);");
	SetFunctionCmt(0X13CD6,	"Counts the number of contiguous, most-significant, leading zero bits before the first binary one bit in a data value.", 1);
	MakeFrame(0X13CD6, 0, 0, 0);
	MakeFunction    (0X13CDC,0X13CE2);
	SetFunctionFlags(0X13CDC,0x404);
	SetType(0X13CDC, "unsigned __int16 __cdecl _RBIT(unsigned __int16 value);");
	SetFunctionCmt(0X13CDC,	"Reverse bit order of value\n\n    This function reverses the bit order of the given value.", 1);
	MakeFrame(0X13CDC, 0, 0, 0);
	MakeFunction    (0X13CE2,0X13CE6);
	SetFunctionFlags(0X13CE2,0x404);
	SetType(0X13CE2, "void _WFI(void);");
	SetFunctionCmt(0X13CE2,	"Wait For Interrupt\n\n    Wait For Interrupt is a hint instruction that suspends execution\n    until one of a number of events occurs.", 1);
	MakeFrame(0X13CE2, 0, 0, 0);
	MakeFunction    (0X13CE6,0X13CEA);
	SetFunctionFlags(0X13CE6,0x404);
	SetType(0X13CE6, "void _WFE(void);");
	SetFunctionCmt(0X13CE6,	"Wait For Event\n\n    Wait For Event is a hint instruction that permits the processor to enter\n    a low-power state until one of a number of events occurs.", 1);
	MakeFrame(0X13CE6, 0, 0, 0);
	MakeFunction    (0X13CEC,0X13D18);
	SetFunctionFlags(0X13CEC,0x400);
	MakeFrame(0X13CEC, 0XC, 0, 0);
	MakeFunction    (0X13D18,0X13D44);
	SetFunctionFlags(0X13D18,0x400);
	MakeFrame(0X13D18, 0X8, 0, 0);
	MakeFunction    (0X13D44,0X13E06);
	SetFunctionFlags(0X13D44,0x400);
	MakeFrame(0X13D44, 0X10, 0, 0);
	MakeFunction    (0X13E06,0X13EC8);
	SetFunctionFlags(0X13E06,0x400);
	MakeFrame(0X13E06, 0X10, 0, 0);
	MakeFunction    (0X13EC8,0X13F1C);
	SetFunctionFlags(0X13EC8,0x400);
	MakeFrame(0X13EC8, 0X10, 0, 0);
	MakeFunction    (0X13F1C,0X1404C);
	SetFunctionFlags(0X13F1C,0x400);
	MakeFrame(0X13F1C, 0X18, 0, 0);
	MakeFunction    (0X1404C,0X1416C);
	SetFunctionFlags(0X1404C,0x400);
	MakeFrame(0X1404C, 0X10, 0, 0);
	MakeFunction    (0X1416C,0X14198);
	SetFunctionFlags(0X1416C,0x404);
	SetType(0X1416C, "void CPU_IntDisMeasStop(void);");
	SetFunctionCmt(0X1416C,	"Stop interrupts disabled time measurement.", 1);
	MakeFrame(0X1416C, 0X8, 0, 0);
	MakeFunction    (0X14198,0X141B4);
	SetFunctionFlags(0X14198,0x404);
	SetType(0X14198, "void CPU_IntDisMeasStart(void);");
	SetFunctionCmt(0X14198,	"Start interrupts disabled time measurement.", 1);
	MakeFrame(0X14198, 0X8, 0, 0);
	MakeFunction    (0X141B4,0X141C8);
	SetFunctionFlags(0X141B4,0x400);
	MakeFrame(0X141B4, 0X8, 0, 0);
	MakeFunction    (0X141E8,0X141EE);
	SetFunctionFlags(0X141E8,0x400);
	MakeFunction    (0X141EE,0X14206);
	SetFunctionFlags(0X141EE,0x404);
	SetType(0X141EE, "unsigned __int32 CPU_IntDisMeasMaxCurGet(void);");
	SetFunctionCmt(0X141EE,	"Get current maximum interrupts disabled time.", 1);
	MakeFrame(0X141EE, 0X8, 0, 0);
	MakeFunction    (0X14206,0X14220);
	SetFunctionFlags(0X14206,0x404);
	SetType(0X14206, "unsigned __int32 CPU_IntDisMeasMaxCurReset(void);");
	SetFunctionCmt(0X14206,	"Reset current maximum interrupts disabled time.", 1);
	MakeFrame(0X14206, 0X8, 0, 0);
	MakeFunction    (0X14220,0X14238);
	SetFunctionFlags(0X14220,0x404);
	SetType(0X14220, "unsigned __int32 CPU_IntDisMeasMaxGet(void);");
	SetFunctionCmt(0X14220,	"Get (non-resetable) maximum interrupts disabled time.", 1);
	MakeFrame(0X14220, 0X8, 0, 0);
	MakeFunction    (0X14238,0X1427E);
	SetFunctionFlags(0X14238,0x404);
	SetType(0X14238, "void CPU_IntDisMeasInit(void);");
	SetFunctionCmt(0X14238,	"Initialize interrupts disabled time measurements feature", 1);
	MakeFrame(0X14238, 0X18, 0, 0);
	MakeFunction    (0X1427E,0X1428E);
	SetFunctionFlags(0X1427E,0x404);
	SetType(0X1427E, "unsigned __int32 __cdecl CPU_IntDisMeasMaxCalc(unsigned __int32 time_tot_cnts);");
	SetFunctionCmt(0X1427E,	"Calculate maximum interrupts disabled time.", 1);
	MakeFrame(0X1427E, 0, 0, 0);
	MakeFunction    (0X14296,0X142F2);
	SetFunctionFlags(0X14296,0x400);
	MakeFrame(0X14296, 0XC, 0, 0);
	MakeFunction    (0X142F2,0X1438E);
	SetFunctionFlags(0X142F2,0x400);
	MakeFrame(0X142F2, 0X10, 0, 0);
	MakeFunction    (0X1438E,0X143D4);
	SetFunctionFlags(0X1438E,0x400);
	MakeFrame(0X1438E, 0X10, 0, 0);
	MakeFunction    (0X143D4,0X1441A);
	SetFunctionFlags(0X143D4,0x400);
	MakeFrame(0X143D4, 0X10, 0, 0);
	MakeFunction    (0X1441A,0X14476);
	SetFunctionFlags(0X1441A,0x400);
	MakeFrame(0X1441A, 0X8, 0, 0);
	MakeFunction    (0X14476,0X14478);
	SetFunctionFlags(0X14476,0x440);
	MakeFunction    (0X14478,0X1447A);
	SetFunctionFlags(0X14478,0x400);
	MakeFunction    (0X1447A,0X1447E);
	SetFunctionFlags(0X1447A,0x400);
	MakeFunction    (0X1447E,0X14482);
	SetFunctionFlags(0X1447E,0x400);
	MakeFunction    (0X14490,0X144C4);
	SetFunctionFlags(0X14490,0x400);
	MakeFrame(0X14490, 0X8, 0, 0);
	MakeFunction    (0X144C4,0X14502);
	SetFunctionFlags(0X144C4,0x400);
	MakeFrame(0X144C4, 0XC, 0, 0);
	MakeFunction    (0X14502,0X14536);
	SetFunctionFlags(0X14502,0x400);
	MakeFrame(0X14502, 0X8, 0, 0);
	MakeFunction    (0X14536,0X14574);
	SetFunctionFlags(0X14536,0x400);
	MakeFrame(0X14536, 0XC, 0, 0);
	MakeFunction    (0X14574,0X14586);
	SetFunctionFlags(0X14574,0x400);
	MakeFunction    (0X14586,0X1459C);
	SetFunctionFlags(0X14586,0x400);
	MakeFunction    (0X1459C,0X145A0);
	SetFunctionFlags(0X1459C,0x400);
	MakeFunction    (0X145A0,0X145A4);
	SetFunctionFlags(0X145A0,0x400);
	MakeFunction    (0X145A4,0X145A8);
	SetFunctionFlags(0X145A4,0x400);
	MakeFunction    (0X145A8,0X145AC);
	SetFunctionFlags(0X145A8,0x400);
	MakeFunction    (0X145AC,0X145B0);
	SetFunctionFlags(0X145AC,0x400);
	MakeFunction    (0X145B0,0X145B4);
	SetFunctionFlags(0X145B0,0x400);
	MakeFunction    (0X145B4,0X145DA);
	SetFunctionFlags(0X145B4,0x400);
	MakeFunction    (0X145DA,0X145DE);
	SetFunctionFlags(0X145DA,0x400);
	MakeFunction    (0X145DE,0X145E2);
	SetFunctionFlags(0X145DE,0x400);
	MakeFunction    (0X145E2,0X14620);
	SetFunctionFlags(0X145E2,0x400);
	MakeFrame(0X145E2, 0X10, 0, 0);
	MakeFunction    (0X14620,0X14674);
	SetFunctionFlags(0X14620,0x400);
	MakeFrame(0X14620, 0X8, 0, 0);
	MakeFunction    (0X14674,0X1468C);
	SetFunctionFlags(0X14674,0x400);
	MakeFunction    (0X1468C,0X146BC);
	SetFunctionFlags(0X1468C,0x400);
	MakeFunction    (0X146D0,0X146F6);
	SetFunctionFlags(0X146D0,0x400);
	MakeFrame(0X146D0, 0X8, 0, 0);
	MakeFunction    (0X146F6,0X14708);
	SetFunctionFlags(0X146F6,0x400);
	MakeFunction    (0X14708,0X14712);
	SetFunctionFlags(0X14708,0x400);
	MakeFunction    (0X14712,0X14766);
	SetFunctionFlags(0X14712,0x400);
	MakeFrame(0X14712, 0XC, 0, 0);
	MakeFunction    (0X14766,0X1477E);
	SetFunctionFlags(0X14766,0x400);
	MakeFrame(0X14766, 0X8, 0, 0);
	MakeFunction    (0X1477E,0X147F0);
	SetFunctionFlags(0X1477E,0x400);
	MakeFrame(0X1477E, 0X10, 0, 0);
	MakeFunction    (0X147F0,0X14852);
	SetFunctionFlags(0X147F0,0x400);
	MakeFrame(0X147F0, 0X10, 0, 0);
	MakeFunction    (0X14852,0X148CC);
	SetFunctionFlags(0X14852,0x400);
	MakeFrame(0X14852, 0X10, 0, 0);
	MakeFunction    (0X148CC,0X148F4);
	SetFunctionFlags(0X148CC,0x400);
	MakeFrame(0X148CC, 0X10, 0, 0);
	MakeFunction    (0X148F4,0X1492A);
	SetFunctionFlags(0X148F4,0x400);
	MakeFrame(0X148F4, 0X8, 0, 0);
	MakeFunction    (0X1492A,0X14950);
	SetFunctionFlags(0X1492A,0x400);
	MakeFrame(0X1492A, 0X8, 0, 0);
	MakeFunction    (0X14950,0X14996);
	SetFunctionFlags(0X14950,0x400);
	MakeFrame(0X14950, 0X8, 0, 0);
	MakeFunction    (0X14996,0X14A1E);
	SetFunctionFlags(0X14996,0x400);
	MakeFrame(0X14996, 0X8, 0, 0);
	MakeFunction    (0X14A1E,0X14A46);
	SetFunctionFlags(0X14A1E,0x400);
	MakeFrame(0X14A1E, 0X8, 0, 0);
	MakeFunction    (0X14A46,0X14A76);
	SetFunctionFlags(0X14A46,0x400);
	MakeFrame(0X14A46, 0X8, 0, 0);
	MakeFunction    (0X14A76,0X14AB0);
	SetFunctionFlags(0X14A76,0x400);
	MakeFrame(0X14A76, 0X8, 0, 0);
	MakeFunction    (0X14AB0,0X14B0C);
	SetFunctionFlags(0X14AB0,0x400);
	MakeFrame(0X14AB0, 0X8, 0, 0);
	MakeFunction    (0X14B0C,0X14C4E);
	SetFunctionFlags(0X14B0C,0x400);
	MakeFrame(0X14B0C, 0X18, 0, 0);
	MakeFunction    (0X14C4E,0X14C8A);
	SetFunctionFlags(0X14C4E,0x400);
	MakeFrame(0X14C4E, 0X8, 0, 0);
	MakeFunction    (0X14C8A,0X14CDE);
	SetFunctionFlags(0X14C8A,0x400);
	MakeFrame(0X14C8A, 0X8, 0, 0);
	MakeFunction    (0X14CDE,0X14D76);
	SetFunctionFlags(0X14CDE,0x400);
	MakeFrame(0X14CDE, 0X8, 0, 0);
	MakeFunction    (0X14DA8,0X14DC6);
	SetFunctionFlags(0X14DA8,0x400);
	MakeFunction    (0X14DC6,0X14DDA);
	SetFunctionFlags(0X14DC6,0x400);
	MakeFunction    (0X14DDA,0X14DEE);
	SetFunctionFlags(0X14DDA,0x400);
	MakeFrame(0X14DDA, 0X8, 0, 0);
	MakeFunction    (0X14DEE,0X14E12);
	SetFunctionFlags(0X14DEE,0x400);
	MakeFrame(0X14DEE, 0X8, 0, 0);
	MakeFunction    (0X14E34,0X14E4A);
	SetFunctionFlags(0X14E34,0x400);
	MakeFunction    (0X14E4A,0X14E54);
	SetFunctionFlags(0X14E4A,0x400);
	MakeFunction    (0X14E54,0X14E78);
	SetFunctionFlags(0X14E54,0x400);
	MakeFrame(0X14E54, 0X8, 0, 0);
	MakeFunction    (0X14E78,0X14E94);
	SetFunctionFlags(0X14E78,0x400);
	MakeFrame(0X14E78, 0X8, 0, 0);
	MakeFunction    (0X14E94,0X14E9E);
	SetFunctionFlags(0X14E94,0x400);
	MakeFunction    (0X14E9E,0X14EA6);
	SetFunctionFlags(0X14E9E,0x400);
	MakeFunction    (0X14EA6,0X150CC);
	SetFunctionFlags(0X14EA6,0x400);
	MakeFrame(0X14EA6, 0X18, 0, 0);
	MakeFunction    (0X150DC,0X150EA);
	SetFunctionFlags(0X150DC,0x400);
	MakeFunction    (0X150EA,0X15100);
	SetFunctionFlags(0X150EA,0x400);
	MakeFunction    (0X15100,0X15126);
	SetFunctionFlags(0X15100,0x400);
	MakeFunction    (0X1512C,0X15162);
	SetFunctionFlags(0X1512C,0x400);
	MakeFrame(0X1512C, 0X8, 0, 0);
	MakeFunction    (0X15162,0X1517C);
	SetFunctionFlags(0X15162,0x400);
	MakeFunction    (0X1517C,0X15198);
	SetFunctionFlags(0X1517C,0x400);
	MakeFrame(0X1517C, 0XC, 0, 0);
	MakeFunction    (0X15198,0X151D0);
	SetFunctionFlags(0X15198,0x400);
	MakeFunction    (0X151E4,0X152B8);
	SetFunctionFlags(0X151E4,0x400);
	MakeFrame(0X151E4, 0X20, 0, 0);
	MakeFunction    (0X152B8,0X1530C);
	SetFunctionFlags(0X152B8,0x400);
	MakeFrame(0X152B8, 0X8, 0, 0);
	MakeFunction    (0X1530C,0X1531C);
	SetFunctionFlags(0X1530C,0x400);
	MakeFunction    (0X1531C,0X1531E);
	SetFunctionFlags(0X1531C,0x440);
	MakeFunction    (0X1531E,0X15348);
	SetFunctionFlags(0X1531E,0x400);
	MakeFrame(0X1531E, 0X8, 0, 0);
	MakeFunction    (0X15348,0X1537E);
	SetFunctionFlags(0X15348,0x400);
	MakeFrame(0X15348, 0X8, 0, 0);
	MakeFunction    (0X1537E,0X15380);
	SetFunctionFlags(0X1537E,0x440);
	MakeFunction    (0X15380,0X15394);
	SetFunctionFlags(0X15380,0x400);
	MakeFrame(0X15380, 0X4, 0, 0);
	MakeFunction    (0X15394,0X153A8);
	SetFunctionFlags(0X15394,0x400);
	MakeFrame(0X15394, 0X4, 0, 0);
	MakeFunction    (0X153A8,0X153BC);
	SetFunctionFlags(0X153A8,0x400);
	MakeFrame(0X153A8, 0X4, 0, 0);
	MakeFunction    (0X153BC,0X153D0);
	SetFunctionFlags(0X153BC,0x400);
	MakeFrame(0X153BC, 0X4, 0, 0);
	MakeFunction    (0X153D0,0X153E4);
	SetFunctionFlags(0X153D0,0x400);
	MakeFrame(0X153D0, 0X4, 0, 0);
	MakeFunction    (0X153E8,0X1543A);
	SetFunctionFlags(0X153E8,0x400);
	MakeFrame(0X153E8, 0X14, 0, 0);
	MakeFunction    (0X1543A,0X1547C);
	SetFunctionFlags(0X1543A,0x400);
	MakeFrame(0X1543A, 0X10, 0, 0);
	MakeFunction    (0X1547C,0X1549A);
	SetFunctionFlags(0X1547C,0x400);
	MakeFrame(0X1547C, 0X8, 0, 0);
	MakeFunction    (0X154EC,0X154F0);
	SetFunctionFlags(0X154EC,0x480);
	MakeFunction    (0X154F0,0X154F8);
	SetFunctionFlags(0X154F0,0x400);
	MakeFunction    (0X154F8,0X15500);
	SetFunctionFlags(0X154F8,0x400);
	MakeFunction    (0X15500,0X15504);
	SetFunctionFlags(0X15500,0x480);
	MakeFunction    (0X15504,0X15506);
	SetFunctionFlags(0X15504,0x440);
	MakeFunction    (0X15548,0X1555C);
	SetFunctionFlags(0X15548,0x400);
	MakeFrame(0X15548, 0X8, 0, 0);
	MakeFunction    (0X1555C,0X15576);
	SetFunctionFlags(0X1555C,0x400);
	MakeFrame(0X1555C, 0X8, 0, 0);
	MakeFunction    (0X15576,0X155E0);
	SetFunctionFlags(0X15576,0x400);
	MakeFrame(0X15576, 0X10, 0, 0);
	MakeFunction    (0X155E0,0X1563A);
	SetFunctionFlags(0X155E0,0x400);
	MakeFrame(0X155E0, 0X18, 0, 0);
	MakeFunction    (0X1563A,0X1564C);
	SetFunctionFlags(0X1563A,0x400);
	MakeFrame(0X1563A, 0X8, 0, 0);
	MakeFunction    (0X1564C,0X1566E);
	SetFunctionFlags(0X1564C,0x400);
	MakeFrame(0X1564C, 0X18, 0, 0);
	MakeLocal(0X1564C, 0X1566E, "[bp-0X10]", "varg_r0");
	MakeLocal(0X1564C, 0X1566E, "[bp-0XC]", "varg_r1");
	MakeLocal(0X1564C, 0X1566E, "[bp-0X8]", "varg_r2");
	MakeLocal(0X1564C, 0X1566E, "[bp-0X4]", "varg_r3");
	MakeFunction    (0X1566E,0X15670);
	SetFunctionFlags(0X1566E,0x440);
	MakeFunction    (0X15670,0X1568A);
	SetFunctionFlags(0X15670,0x400);
	MakeFunction    (0X1568A,0X1569C);
	SetFunctionFlags(0X1568A,0x400);
	MakeFunction    (0X1569C,0X156AA);
	SetFunctionFlags(0X1569C,0x400);
	MakeFunction    (0X156AA,0X156B4);
	SetFunctionFlags(0X156AA,0x400);
	MakeFunction    (0X156CC,0X156DC);
	SetFunctionFlags(0X156CC,0x400);
	SetType(0X156CC, "void WDT_Feed(void);");
	SetFunctionCmt(0X156CC,	"After set WDTEN, call this function to start Watchdog or reload the Watchdog timer", 1);
	MakeFunction    (0X156DC,0X156FC);
	SetFunctionFlags(0X156DC,0x400);
	MakeFrame(0X156DC, 0X8, 0, 0);
	MakeFunction    (0X156FC,0X15726);
	SetFunctionFlags(0X156FC,0x400);
	MakeFrame(0X156FC, 0X8, 0, 0);
	MakeFunction    (0X15726,0X1574A);
	SetFunctionFlags(0X15726,0x400);
	MakeFrame(0X15726, 0X8, 0, 0);
	MakeFunction    (0X1574A,0X15774);
	SetFunctionFlags(0X1574A,0x400);
	MakeFrame(0X1574A, 0X8, 0, 0);
	MakeFunction    (0X15774,0X157A6);
	SetFunctionFlags(0X15774,0x400);
	MakeFrame(0X15774, 0X8, 0, 0);
	MakeFunction    (0X157B6,0X157D8);
	SetFunctionFlags(0X157B6,0x400);
	MakeFrame(0X157B6, 0X8, 0, 0);
	MakeFunction    (0X157D8,0X1584C);
	SetFunctionFlags(0X157D8,0x400);
	MakeFrame(0X157D8, 0X10, 0, 0);
	MakeFunction    (0X1584C,0X158B0);
	SetFunctionFlags(0X1584C,0x400);
	MakeFrame(0X1584C, 0X18, 0, 0);
	MakeFunction    (0X158B0,0X158FA);
	SetFunctionFlags(0X158B0,0x400);
	MakeFrame(0X158B0, 0X8, 0, 0);
	MakeFunction    (0X158FA,0X15904);
	SetFunctionFlags(0X158FA,0x400);
	MakeFunction    (0X15904,0X1590E);
	SetFunctionFlags(0X15904,0x400);
	MakeFunction    (0X1590E,0X15918);
	SetFunctionFlags(0X1590E,0x400);
	MakeFunction    (0X15918,0X15922);
	SetFunctionFlags(0X15918,0x400);
	MakeFunction    (0X15922,0X1592C);
	SetFunctionFlags(0X15922,0x400);
	MakeFunction    (0X1592C,0X15936);
	SetFunctionFlags(0X1592C,0x400);
	MakeFunction    (0X15936,0X15942);
	SetFunctionFlags(0X15936,0x400);
	MakeFunction    (0X15942,0X1594E);
	SetFunctionFlags(0X15942,0x400);
	MakeFunction    (0X1594E,0X15958);
	SetFunctionFlags(0X1594E,0x400);
	MakeFunction    (0X15958,0X15962);
	SetFunctionFlags(0X15958,0x400);
	MakeFunction    (0X15962,0X1596C);
	SetFunctionFlags(0X15962,0x400);
	MakeFunction    (0X1596C,0X15976);
	SetFunctionFlags(0X1596C,0x400);
	MakeFunction    (0X15976,0X15980);
	SetFunctionFlags(0X15976,0x400);
	MakeFunction    (0X15980,0X1598A);
	SetFunctionFlags(0X15980,0x400);
	MakeFunction    (0X1598A,0X15994);
	SetFunctionFlags(0X1598A,0x400);
	MakeFunction    (0X15994,0X1599E);
	SetFunctionFlags(0X15994,0x400);
	MakeFunction    (0X1599E,0X159A8);
	SetFunctionFlags(0X1599E,0x400);
	MakeFunction    (0X159A8,0X159B2);
	SetFunctionFlags(0X159A8,0x400);
	MakeFunction    (0X159B2,0X159C2);
	SetFunctionFlags(0X159B2,0x400);
	MakeFrame(0X159B2, 0X8, 0, 0);
	MakeFunction    (0X159C2,0X159D6);
	SetFunctionFlags(0X159C2,0x400);
	MakeFrame(0X159C2, 0X8, 0, 0);
	MakeFunction    (0X159D6,0X159E0);
	SetFunctionFlags(0X159D6,0x400);
	MakeFunction    (0X159E0,0X159F0);
	SetFunctionFlags(0X159E0,0x400);
	MakeFrame(0X159E0, 0X4, 0, 0);
	MakeFunction    (0X159F0,0X159FA);
	SetFunctionFlags(0X159F0,0x400);
	MakeFunction    (0X15A04,0X15A08);
	SetFunctionFlags(0X15A04,0x400);
	MakeFunction    (0X15A08,0X15A28);
	SetFunctionFlags(0X15A08,0x400);
	MakeFrame(0X15A08, 0X8, 0, 0);
	MakeFunction    (0X15A28,0X15A36);
	SetFunctionFlags(0X15A28,0x400);
	MakeFunction    (0X15A54,0X15A7A);
	SetFunctionFlags(0X15A54,0x400);
	MakeFrame(0X15A54, 0X8, 0, 0);
	MakeFunction    (0X15A7A,0X15AAE);
	SetFunctionFlags(0X15A7A,0x400);
	MakeFrame(0X15A7A, 0XC, 0, 0);
	MakeFunction    (0X15AAE,0X15AD0);
	SetFunctionFlags(0X15AAE,0x400);
	MakeFrame(0X15AAE, 0XC, 0, 0);
	MakeFunction    (0X15AD4,0X15AEA);
	SetFunctionFlags(0X15AD4,0x400);
	MakeFrame(0X15AD4, 0X8, 0, 0);
	MakeFunction    (0X15AEA,0X15B10);
	SetFunctionFlags(0X15AEA,0x400);
	MakeFrame(0X15AEA, 0XC, 0, 0);
	MakeFunction    (0X15B10,0X15B2C);
	SetFunctionFlags(0X15B10,0x400);
	MakeFrame(0X15B10, 0XC, 0, 0);
	MakeFunction    (0X15B30,0X15BDA);
	SetFunctionFlags(0X15B30,0x400);
	SetType(0X15B30, "void __cdecl ADC_Init(struct LPC_ADC_TypeDef *ADCx, unsigned __int32 rate);");
	SetFunctionCmt(0X15B30,	"Initial for ADC", 1);
	MakeFrame(0X15B30, 0X10, 0, 0);
	MakeFunction    (0X15BDA,0X15C00);
	SetFunctionFlags(0X15BDA,0x400);
	MakeFrame(0X15BDA, 0X18, 0, 0);
	MakeFunction    (0X15C00,0X15C0E);
	SetFunctionFlags(0X15C00,0x400);
	SetType(0X15C00, "unsigned __int32 __cdecl ADC_GetData(unsigned __int32 channel);");
	SetFunctionCmt(0X15C00,	"Get Result conversion from A/D data register", 1);
	MakeFunction    (0X15C0E,0X15C2A);
	SetFunctionFlags(0X15C0E,0x400);
	MakeFunction    (0X15C2A,0X15C3C);
	SetFunctionFlags(0X15C2A,0x404);
	SetType(0X15C2A, "void __cdecl ADC_StartCmd(struct LPC_ADC_TypeDef *ADCx, unsigned __int8 start_mode);");
	SetFunctionCmt(0X15C2A,	"Set start mode for ADC", 1);
	MakeFrame(0X15C2A, 0, 0, 0);
	MakeFunction    (0X15C3C,0X15C52);
	SetFunctionFlags(0X15C3C,0x404);
	SetType(0X15C3C, "void __cdecl ADC_BurstCmd(struct LPC_ADC_TypeDef *ADCx, enum FunctionalState NewState);");
	SetFunctionCmt(0X15C3C,	"ADC Burst mode setting", 1);
	MakeFrame(0X15C3C, 0, 0, 0);
	MakeFunction    (0X15C52,0X15C68);
	SetFunctionFlags(0X15C52,0x404);
	SetType(0X15C52, "void __cdecl ADC_PowerdownCmd(struct LPC_ADC_TypeDef *ADCx, enum FunctionalState NewState);");
	SetFunctionCmt(0X15C52,	"Set AD conversion in power mode", 1);
	MakeFrame(0X15C52, 0, 0, 0);
	MakeFunction    (0X15C68,0X15C7E);
	SetFunctionFlags(0X15C68,0x404);
	SetType(0X15C68, "void __cdecl ADC_EdgeStartConfig(struct LPC_ADC_TypeDef *ADCx, unsigned __int8 EdgeOption);");
	SetFunctionCmt(0X15C68,	"Set Edge start configuration", 1);
	MakeFrame(0X15C68, 0, 0, 0);
	MakeFunction    (0X15C7E,0X15C96);
	SetFunctionFlags(0X15C7E,0x404);
	SetType(0X15C7E, "void __cdecl ADC_IntConfig(struct LPC_ADC_TypeDef *ADCx, enum ADC_TYPE_INT_OPT IntType, enum FunctionalState NewState);");
	SetFunctionCmt(0X15C7E,	"ADC interrupt configuration", 1);
	MakeFrame(0X15C7E, 0X8, 0, 0);
	MakeFunction    (0X15C96,0X15CAA);
	SetFunctionFlags(0X15C96,0x404);
	SetType(0X15C96, "void __cdecl ADC_ChannelCmd(struct LPC_ADC_TypeDef *ADCx, unsigned __int8 Channel, enum FunctionalState NewState);");
	SetFunctionCmt(0X15C96,	"Enable/Disable ADC channel number", 1);
	MakeFrame(0X15C96, 0, 0, 0);
	MakeFunction    (0X15CAA,0X15CB6);
	SetFunctionFlags(0X15CAA,0x404);
	SetType(0X15CAA, "unsigned __int16 __cdecl ADC_ChannelGetData(struct LPC_ADC_TypeDef *ADCx, unsigned __int8 channel);");
	SetFunctionCmt(0X15CAA,	"Get ADC result", 1);
	MakeFrame(0X15CAA, 0, 0, 0);
	MakeFunction    (0X15CB6,0X15CD0);
	SetFunctionFlags(0X15CB6,0x404);
	SetType(0X15CB6, "enum FlagStatus __cdecl ADC_ChannelGetStatus(struct LPC_ADC_TypeDef *ADCx, unsigned __int8 channel, unsigned __int32 StatusType);");
	SetFunctionCmt(0X15CB6,	"Get ADC Chanel status from ADC data register", 1);
	MakeFrame(0X15CB6, 0, 0, 0);
	MakeFunction    (0X15CD0,0X15CD4);
	SetFunctionFlags(0X15CD0,0x404);
	SetType(0X15CD0, "unsigned __int32 __cdecl ADC_GlobalGetData(struct LPC_ADC_TypeDef *ADCx);");
	SetFunctionCmt(0X15CD0,	"Get ADC Data from AD Global register", 1);
	MakeFrame(0X15CD0, 0, 0, 0);
	MakeFunction    (0X15CD4,0X15CEA);
	SetFunctionFlags(0X15CD4,0x404);
	SetType(0X15CD4, "enum FlagStatus __cdecl ADC_GlobalGetStatus(struct LPC_ADC_TypeDef *ADCx, unsigned __int32 StatusType);");
	SetFunctionCmt(0X15CD4,	"Get ADC Chanel status from AD global data register", 1);
	MakeFrame(0X15CD4, 0, 0, 0);
	MakeFunction    (0X15CFC,0X15D50);
	SetFunctionFlags(0X15CFC,0x404);
	SetType(0X15CFC, "void __cdecl CLKPWR_SetPCLKDiv(unsigned __int32 ClkType, unsigned __int32 DivVal);");
	SetFunctionCmt(0X15CFC,	"Set value of each Peripheral Clock Selection", 1);
	MakeFrame(0X15CFC, 0X8, 0, 0);
	MakeFunction    (0X15D50,0X15D6A);
	SetFunctionFlags(0X15D50,0x404);
	SetType(0X15D50, "unsigned __int32 __cdecl CLKPWR_GetPCLKSEL(unsigned __int32 ClkType);");
	SetFunctionCmt(0X15D50,	"Get current value of each Peripheral Clock Selection", 1);
	MakeFrame(0X15D50, 0, 0, 0);
	MakeFunction    (0X15D6A,0X15D90);
	SetFunctionFlags(0X15D6A,0x404);
	SetType(0X15D6A, "unsigned __int32 __cdecl CLKPWR_GetPCLK(unsigned __int32 ClkType);");
	SetFunctionCmt(0X15D6A,	"Get current value of each Peripheral Clock", 1);
	MakeFrame(0X15D6A, 0X4, 0, 0);
	MakeFunction    (0X15DB2,0X15DBE);
	SetFunctionFlags(0X15DB2,0x404);
	SetType(0X15DB2, "void CLKPWR_Sleep(void);");
	SetFunctionCmt(0X15DB2,	"Enter Sleep mode with co-operated instruction by the Cortex-M3.", 1);
	MakeFrame(0X15DB2, 0, 0, 0);
	MakeFunction    (0X15DBE,0X15DD0);
	SetFunctionFlags(0X15DBE,0x404);
	SetType(0X15DBE, "void CLKPWR_DeepSleep(void);");
	SetFunctionCmt(0X15DBE,	"Enter Deep Sleep mode with co-operated instruction by the Cortex-M3.", 1);
	MakeFrame(0X15DBE, 0, 0, 0);
	MakeFunction    (0X15DD0,0X15DE2);
	SetFunctionFlags(0X15DD0,0x404);
	SetType(0X15DD0, "void CLKPWR_PowerDown(void);");
	SetFunctionCmt(0X15DD0,	"Enter Power Down mode with co-operated instruction by the Cortex-M3.", 1);
	MakeFrame(0X15DD0, 0, 0, 0);
	MakeFunction    (0X15DE2,0X15DF4);
	SetFunctionFlags(0X15DE2,0x404);
	SetType(0X15DE2, "void CLKPWR_DeepPowerDown(void);");
	SetFunctionCmt(0X15DE2,	"Enter Deep Power Down mode with co-operated instruction by the Cortex-M3.", 1);
	MakeFrame(0X15DE2, 0, 0, 0);
	MakeFunction    (0X15E04,0X15E10);
	SetFunctionFlags(0X15E04,0x400);
	SetType(0X15E04, "void __cdecl check_failed(unsigned __int8 *file, unsigned __int32 line);");
	MakeFrame(0X15E04, 0, 0, 0);
	MakeFunction    (0X15E40,0X15E6A);
	SetFunctionFlags(0X15E40,0x404);
	SetType(0X15E40, "void __cdecl RTC_Init(struct LPC_RTC_TypeDef *RTCx);");
	SetFunctionCmt(0X15E40,	"Initializes the RTC peripheral.", 1);
	MakeFrame(0X15E40, 0X8, 0, 0);
	MakeFunction    (0X15E6A,0X15E8E);
	SetFunctionFlags(0X15E6A,0x404);
	SetType(0X15E6A, "void __cdecl RTC_DeInit(struct LPC_RTC_TypeDef *RTCx);");
	SetFunctionCmt(0X15E6A,	"De-initializes the RTC peripheral registers to their default reset values.", 1);
	MakeFrame(0X15E6A, 0X8, 0, 0);
	MakeFunction    (0X15E8E,0X15EB2);
	SetFunctionFlags(0X15E8E,0x404);
	SetType(0X15E8E, "void __cdecl RTC_ResetClockTickCounter(struct LPC_RTC_TypeDef *RTCx);");
	SetFunctionCmt(0X15E8E,	"Reset clock tick counter in RTC peripheral", 1);
	MakeFrame(0X15E8E, 0X8, 0, 0);
	MakeFunction    (0X15EB2,0X15EE6);
	SetFunctionFlags(0X15EB2,0x404);
	SetType(0X15EB2, "void __cdecl RTC_Cmd(struct LPC_RTC_TypeDef *RTCx, enum FunctionalState NewState);");
	SetFunctionCmt(0X15EB2,	"Start/Stop RTC peripheral", 1);
	MakeFrame(0X15EB2, 0X10, 0, 0);
	MakeFunction    (0X15EE6,0X15FD6);
	SetFunctionFlags(0X15EE6,0x404);
	SetType(0X15EE6, "void __cdecl RTC_CntIncrIntConfig(struct LPC_RTC_TypeDef *RTCx, unsigned __int32 CntIncrIntType, enum FunctionalState NewState);");
	SetFunctionCmt(0X15EE6,	"Enable/Disable Counter increment interrupt for each time type in RTC peripheral", 1);
	MakeFrame(0X15EE6, 0X10, 0, 0);
	MakeNameEx(0X15F64, "def_15F38", SN_LOCAL);
	MakeFunction    (0X15FD6,0X160C6);
	SetFunctionFlags(0X15FD6,0x404);
	SetType(0X15FD6, "void __cdecl RTC_AlarmIntConfig(struct LPC_RTC_TypeDef *RTCx, unsigned __int32 AlarmTimeType, enum FunctionalState NewState);");
	SetFunctionCmt(0X15FD6,	"Enable/Disable Alarm interrupt for each time type", 1);
	MakeFrame(0X15FD6, 0X10, 0, 0);
	MakeNameEx(0X16054, "def_16028", SN_LOCAL);
	MakeFunction    (0X160C6,0X161D8);
	SetFunctionFlags(0X160C6,0x404);
	SetType(0X160C6, "void __cdecl RTC_SetTime(struct LPC_RTC_TypeDef *RTCx, unsigned __int32 Timetype, unsigned __int32 TimeValue);");
	SetFunctionCmt(0X160C6,	"Set current time value for each time type in RTC peripheral", 1);
	MakeFrame(0X160C6, 0X18, 0, 0);
}

static Functions_1(void) {

	MakeFunction    (0X161D8,0X1628E);
	SetFunctionFlags(0X161D8,0x404);
	SetType(0X161D8, "unsigned __int32 __cdecl RTC_GetTime(struct LPC_RTC_TypeDef *RTCx, unsigned __int32 Timetype);");
	SetFunctionCmt(0X161D8,	"Get current time value for each type time type", 1);
	MakeFrame(0X161D8, 0X10, 0, 0);
	MakeFunction    (0X1628E,0X162F2);
	SetFunctionFlags(0X1628E,0x404);
	SetType(0X1628E, "void __cdecl RTC_SetFullTime(struct LPC_RTC_TypeDef *RTCx, struct RTC_TIME_Type *pFullTime);");
	SetFunctionCmt(0X1628E,	"Set full of time in RTC peripheral", 1);
	MakeFrame(0X1628E, 0X10, 0, 0);
	MakeFunction    (0X162F2,0X16356);
	SetFunctionFlags(0X162F2,0x404);
	SetType(0X162F2, "void __cdecl RTC_GetFullTime(struct LPC_RTC_TypeDef *RTCx, struct RTC_TIME_Type *pFullTime);");
	SetFunctionCmt(0X162F2,	"Get full of time in RTC peripheral", 1);
	MakeFrame(0X162F2, 0X10, 0, 0);
	MakeFunction    (0X16356,0X16454);
	SetFunctionFlags(0X16356,0x404);
	SetType(0X16356, "void __cdecl RTC_SetAlarmTime(struct LPC_RTC_TypeDef *RTCx, unsigned __int32 Timetype, unsigned __int32 ALValue);");
	SetFunctionCmt(0X16356,	"Set alarm time value for each time type", 1);
	MakeFrame(0X16356, 0X18, 0, 0);
	MakeFunction    (0X16454,0X164B0);
	SetFunctionFlags(0X16454,0x404);
	SetType(0X16454, "unsigned __int32 __cdecl RTC_GetAlarmTime(struct LPC_RTC_TypeDef *RTCx, unsigned __int32 Timetype);");
	SetFunctionCmt(0X16454,	"Get alarm time value for each time type", 1);
	MakeFrame(0X16454, 0, 0, 0);
	MakeFunction    (0X164B0,0X16516);
	SetFunctionFlags(0X164B0,0x404);
	SetType(0X164B0, "void __cdecl RTC_SetFullAlarmTime(struct LPC_RTC_TypeDef *RTCx, struct RTC_TIME_Type *pFullTime);");
	SetFunctionCmt(0X164B0,	"Set full of alarm time in RTC peripheral", 1);
	MakeFrame(0X164B0, 0X10, 0, 0);
	MakeFunction    (0X16516,0X1657C);
	SetFunctionFlags(0X16516,0x404);
	SetType(0X16516, "void __cdecl RTC_GetFullAlarmTime(struct LPC_RTC_TypeDef *RTCx, struct RTC_TIME_Type *pFullTime);");
	SetFunctionCmt(0X16516,	"Get full of alarm time in RTC peripheral", 1);
	MakeFrame(0X16516, 0X10, 0, 0);
	MakeFunction    (0X1657C,0X165B2);
	SetFunctionFlags(0X1657C,0x404);
	SetType(0X1657C, "enum IntStatus __cdecl RTC_GetIntPending(struct LPC_RTC_TypeDef *RTCx, unsigned __int32 IntType);");
	SetFunctionCmt(0X1657C,	"Check whether if specified Location interrupt in", 1);
	MakeFrame(0X1657C, 0X10, 0, 0);
	MakeFunction    (0X165B2,0X165E6);
	SetFunctionFlags(0X165B2,0x404);
	SetType(0X165B2, "void __cdecl RTC_ClearIntPending(struct LPC_RTC_TypeDef *RTCx, unsigned __int32 IntType);");
	SetFunctionCmt(0X165B2,	"Clear specified Location interrupt pending in", 1);
	MakeFrame(0X165B2, 0X10, 0, 0);
	MakeFunction    (0X165E6,0X16622);
	SetFunctionFlags(0X165E6,0x404);
	SetType(0X165E6, "void __cdecl RTC_CalibCounterCmd(struct LPC_RTC_TypeDef *RTCx, enum FunctionalState NewState);");
	SetFunctionCmt(0X165E6,	"Enable/Disable calibration counter in RTC peripheral", 1);
	MakeFrame(0X165E6, 0X10, 0, 0);
	MakeFunction    (0X16622,0X16676);
	SetFunctionFlags(0X16622,0x404);
	SetType(0X16622, "void __cdecl RTC_CalibConfig(struct LPC_RTC_TypeDef *RTCx, unsigned __int32 CalibValue, unsigned __int8 CalibDir);");
	SetFunctionCmt(0X16622,	"Configures Calibration in RTC peripheral", 1);
	MakeFrame(0X16622, 0X18, 0, 0);
	MakeFunction    (0X1667C,0X166AE);
	SetFunctionFlags(0X1667C,0x404);
	SetType(0X1667C, "void __cdecl RTC_WriteGPREG(struct LPC_RTC_TypeDef *RTCx, unsigned __int8 Channel, unsigned __int32 Value);");
	SetFunctionCmt(0X1667C,	"Write value to General purpose registers", 1);
	MakeFrame(0X1667C, 0X10, 0, 0);
	MakeFunction    (0X166AE,0X166DE);
	SetFunctionFlags(0X166AE,0x404);
	SetType(0X166AE, "unsigned __int32 __cdecl RTC_ReadGPREG(struct LPC_RTC_TypeDef *RTCx, unsigned __int8 Channel);");
	SetFunctionCmt(0X166AE,	"Read value from General purpose registers", 1);
	MakeFrame(0X166AE, 0X10, 0, 0);
	MakeFunction    (0X166E4,0X166FA);
	SetFunctionFlags(0X166E4,0x400);
	MakeFunction    (0X166FA,0X1671E);
	SetFunctionFlags(0X166FA,0x400);
	MakeFunction    (0X1671E,0X16798);
	SetFunctionFlags(0X1671E,0x400);
	MakeFrame(0X1671E, 0X10, 0, 0);
	MakeFunction    (0X16798,0X168AE);
	SetFunctionFlags(0X16798,0x400);
	MakeFrame(0X16798, 0X28, 0, 0);
	MakeFunction    (0X168AE,0X168BA);
	SetFunctionFlags(0X168AE,0x400);
	MakeFunction    (0X168C6,0X1691C);
	SetFunctionFlags(0X168C6,0x400);
	MakeFrame(0X168C6, 0X10, 0, 0);
	MakeFunction    (0X1691C,0X169AC);
	SetFunctionFlags(0X1691C,0x400);
	MakeFrame(0X1691C, 0X20, 0, 0);
	MakeFunction    (0X169AC,0X169DC);
	SetFunctionFlags(0X169AC,0x400);
	MakeFunction    (0X169DC,0X16A5A);
	SetFunctionFlags(0X169DC,0x400);
	MakeFrame(0X169DC, 0X10, 0, 0);
	MakeFunction    (0X16A5A,0X16B82);
	SetFunctionFlags(0X16A5A,0x400);
	MakeFrame(0X16A5A, 0X28, 0, 0);
	MakeFunction    (0X16B82,0X16B8E);
	SetFunctionFlags(0X16B82,0x400);
	MakeFunction    (0X16B8E,0X16B9A);
	SetFunctionFlags(0X16B8E,0x400);
	MakeFunction    (0X16B9A,0X16BEC);
	SetFunctionFlags(0X16B9A,0x400);
	MakeFrame(0X16B9A, 0X10, 0, 0);
	MakeFunction    (0X16BEC,0X16C74);
	SetFunctionFlags(0X16BEC,0x400);
	MakeFrame(0X16BEC, 0X20, 0, 0);
	MakeFunction    (0X16C74,0X16C98);
	SetFunctionFlags(0X16C74,0x400);
	MakeFunction    (0X16C98,0X16D02);
	SetFunctionFlags(0X16C98,0x400);
	MakeFrame(0X16C98, 0X10, 0, 0);
	MakeFunction    (0X16D02,0X16E06);
	SetFunctionFlags(0X16D02,0x400);
	MakeFrame(0X16D02, 0X28, 0, 0);
	MakeFunction    (0X16E06,0X16E12);
	SetFunctionFlags(0X16E06,0x400);
	MakeFunction    (0X16E12,0X16E1E);
	SetFunctionFlags(0X16E12,0x400);
	MakeFunction    (0X16E72,0X16EFE);
	SetFunctionFlags(0X16E72,0x400);
	MakeFrame(0X16E72, 0X20, 0, 0);
	MakeFunction    (0X16F18,0X16F3C);
	SetFunctionFlags(0X16F18,0x400);
	MakeFunction    (0X16F3C,0X16FA6);
	SetFunctionFlags(0X16F3C,0x400);
	MakeFrame(0X16F3C, 0X10, 0, 0);
	MakeFunction    (0X16FA6,0X170B8);
	SetFunctionFlags(0X16FA6,0x400);
	MakeFrame(0X16FA6, 0X28, 0, 0);
	MakeFunction    (0X170B8,0X170C4);
	SetFunctionFlags(0X170B8,0x400);
	MakeFunction    (0X170C4,0X170D0);
	SetFunctionFlags(0X170C4,0x400);
	MakeFunction    (0X170D0,0X17126);
	SetFunctionFlags(0X170D0,0x400);
	MakeFrame(0X170D0, 0X10, 0, 0);
	MakeFunction    (0X17126,0X171B4);
	SetFunctionFlags(0X17126,0x400);
	MakeFrame(0X17126, 0X20, 0, 0);
	MakeFunction    (0X171B4,0X171EA);
	SetFunctionFlags(0X171B4,0x400);
	MakeFrame(0X171B4, 0X20, 0, 0);
	MakeLocal(0X171B4, 0X171EA, "[bp-0X10]", "varg_r0");
	MakeLocal(0X171B4, 0X171EA, "[bp-0XC]", "varg_r1");
	MakeLocal(0X171B4, 0X171EA, "[bp-0X8]", "varg_r2");
	MakeLocal(0X171B4, 0X171EA, "[bp-0X4]", "varg_r3");
	MakeFunction    (0X171EA,0X17200);
	SetFunctionFlags(0X171EA,0x400);
	MakeFunction    (0X17218,0X17298);
	SetFunctionFlags(0X17218,0x400);
	MakeFrame(0X17218, 0X10, 0, 0);
	MakeFunction    (0X17298,0X172C6);
	SetFunctionFlags(0X17298,0x400);
	SetType(0X17298, "void __cdecl WDT_Init(enum WDT_CLK_OPT ClkSrc, enum WDT_MODE_OPT WDTMode);");
	MakeFrame(0X17298, 0X10, 0, 0);
	MakeFunction    (0X172C6,0X172DE);
	SetFunctionFlags(0X172C6,0x400);
	MakeFunction    (0X172DE,0X172FE);
	SetFunctionFlags(0X172DE,0x400);
	MakeFrame(0X172DE, 0X8, 0, 0);
	MakeFunction    (0X1730A,0X17318);
	SetFunctionFlags(0X1730A,0x400);
	MakeFunction    (0X17318,0X17336);
	SetFunctionFlags(0X17318,0x400);
	MakeFrame(0X17318, 0X8, 0, 0);
	MakeFunction    (0X1733E,0X1734A);
	SetFunctionFlags(0X1733E,0x400);
	MakeFunction    (0X1734A,0X17352);
	SetFunctionFlags(0X1734A,0x400);
	MakeFunction    (0X17352,0X1735A);
	SetFunctionFlags(0X17352,0x400);
	MakeFunction    (0X1736C,0X1738C);
	SetFunctionFlags(0X1736C,0x400);
	MakeFrame(0X1736C, 0X10, 0, 0);
	MakeFunction    (0X17390,0X173C0);
	SetFunctionFlags(0X17390,0x400);
	MakeFrame(0X17390, 0X18, 0, 0);
	MakeFunction    (0X173C4,0X173EA);
	SetFunctionFlags(0X173C4,0x400);
	MakeFrame(0X173C4, 0X20, 0, 0);
	MakeLocal(0X173C4, 0X173EA, "[bp-0X10]", "varg_r0");
	MakeLocal(0X173C4, 0X173EA, "[bp-0XC]", "varg_r1");
	MakeLocal(0X173C4, 0X173EA, "[bp-0X8]", "varg_r2");
	MakeLocal(0X173C4, 0X173EA, "[bp-0X4]", "varg_r3");
	MakeFunction    (0X173F0,0X17446);
	SetFunctionFlags(0X173F0,0x400);
	MakeFrame(0X173F0, 0X10, 0, 0);
	MakeFunction    (0X17446,0X17462);
	SetFunctionFlags(0X17446,0x400);
	MakeFrame(0X17446, 0X10, 0, 0);
	MakeFunction    (0X17484,0X17608);
	SetFunctionFlags(0X17484,0x400);
	MakeFrame(0X17484, 0X28, 0, 0);
	MakeFunction    (0X1760C,0X17640);
	SetFunctionFlags(0X1760C,0x400);
	MakeFrame(0X1760C, 0X48, 0, 0);
	MakeLocal(0X1760C, 0X17640, "[bp-0X10]", "varg_r0");
	MakeLocal(0X1760C, 0X17640, "[bp-0XC]", "varg_r1");
	MakeLocal(0X1760C, 0X17640, "[bp-0X8]", "varg_r2");
	MakeLocal(0X1760C, 0X17640, "[bp-0X4]", "varg_r3");
	MakeFunction    (0X17648,0X17794);
	SetFunctionFlags(0X17648,0x400);
	MakeFrame(0X17648, 0X38, 0, 0);
	MakeFunction    (0X17794,0X177A8);
	SetFunctionFlags(0X17794,0x400);
	MakeFunction    (0X177A8,0X17800);
	SetFunctionFlags(0X177A8,0x400);
	MakeFrame(0X177A8, 0X8, 0, 0);
	MakeFunction    (0X17800,0X1783E);
	SetFunctionFlags(0X17800,0x400);
	MakeFrame(0X17800, 0X8, 0, 0);
	MakeFunction    (0X1783E,0X178D4);
	SetFunctionFlags(0X1783E,0x400);
	MakeFrame(0X1783E, 0X10, 0, 0);
	MakeFunction    (0X178D4,0X179C2);
	SetFunctionFlags(0X178D4,0x400);
	MakeFunction    (0X179C2,0X179D2);
	SetFunctionFlags(0X179C2,0x400);
	MakeFunction    (0X179D2,0X17A16);
	SetFunctionFlags(0X179D2,0x400);
	MakeFunction    (0X17A16,0X17A64);
	SetFunctionFlags(0X17A16,0x400);
	MakeFrame(0X17A16, 0X4, 0, 0);
	MakeFunction    (0X17A6E,0X17A7A);
	SetFunctionFlags(0X17A6E,0x400);
	MakeFrame(0X17A6E, 0X8, 0, 0);
	MakeFunction    (0X17A7A,0X17AA6);
	SetFunctionFlags(0X17A7A,0x400);
	MakeFrame(0X17A7A, 0X10, 0, 0);
	MakeFunction    (0X17AA6,0X17AC8);
	SetFunctionFlags(0X17AA6,0x400);
	MakeFrame(0X17AA6, 0X10, 0, 0);
	MakeFunction    (0X17AC8,0X17ADA);
	SetFunctionFlags(0X17AC8,0x400);
	MakeFunction    (0X17ADA,0X17AEC);
	SetFunctionFlags(0X17ADA,0x400);
	MakeFunction    (0X17AEC,0X17B3E);
	SetFunctionFlags(0X17AEC,0x400);
	MakeFrame(0X17AEC, 0X10, 0, 0);
	MakeFunction    (0X17B3E,0X17BF0);
	SetFunctionFlags(0X17B3E,0x400);
	MakeFrame(0X17B3E, 0X20, 0, 0);
	MakeFunction    (0X17BF0,0X17C58);
	SetFunctionFlags(0X17BF0,0x400);
	MakeFrame(0X17BF0, 0X18, 0, 0);
	MakeFunction    (0X17C90,0X17C9A);
	SetFunctionFlags(0X17C90,0x400);
	MakeFunction    (0X17C9A,0X17CBA);
	SetFunctionFlags(0X17C9A,0x400);
	MakeFrame(0X17C9A, 0X40, 0, 0);
	MakeFunction    (0X17CC0,0X17CCA);
	SetFunctionFlags(0X17CC0,0x400);
	MakeFunction    (0X17CCA,0X17CDA);
	SetFunctionFlags(0X17CCA,0x400);
	MakeFunction    (0X17CDC,0X17D92);
	SetFunctionFlags(0X17CDC,0x400);
	MakeFrame(0X17CDC, 0X38, 0, 0);
	MakeFunction    (0X17D98,0X17E04);
	SetFunctionFlags(0X17D98,0x400);
	MakeFrame(0X17D98, 0X18, 0, 0);
	MakeFunction    (0X17E14,0X17E58);
	SetFunctionFlags(0X17E14,0x400);
	MakeFrame(0X17E14, 0X8, 0, 0);
	MakeFunction    (0X17E58,0X17E70);
	SetFunctionFlags(0X17E58,0x400);
	MakeFrame(0X17E58, 0X8, 0, 0);
	MakeFunction    (0X17E84,0X17EA0);
	SetFunctionFlags(0X17E84,0x400);
	MakeFunction    (0X17EA0,0X1809C);
	SetFunctionFlags(0X17EA0,0x400);
	MakeFrame(0X17EA0, 0X58, 0, 0);
	MakeFunction    (0X1809C,0X18338);
	SetFunctionFlags(0X1809C,0x400);
	MakeFrame(0X1809C, 0X78, 0, 0);
	MakeFunction    (0X18350,0X18368);
	SetFunctionFlags(0X18350,0x400);
	MakeFunction    (0X183B0,0X183B4);
	SetFunctionFlags(0X183B0,0x400);
	MakeFunction    (0X183B8,0X183BC);
	SetFunctionFlags(0X183B8,0x400);
	MakeFunction    (0X183C0,0X1844A);
	SetFunctionFlags(0X183C0,0x400);
	MakeFrame(0X183C0, 0XC, 0, 0);
	MakeFunction    (0X1844A,0X1845C);
	SetFunctionFlags(0X1844A,0x400);
	MakeFrame(0X1844A, 0X8, 0, 0);
	MakeFunction    (0X1845E,0X1860A);
	SetFunctionFlags(0X1845E,0x400);
	MakeFrame(0X1845E, 0X60, 0, 0);
	MakeFunction    (0X1860A,0X18876);
	SetFunctionFlags(0X1860A,0x400);
	MakeFrame(0X1860A, 0X68, 0, 0);
	MakeFunction    (0X18876,0X1888A);
	SetFunctionFlags(0X18876,0x400);
	MakeFrame(0X18876, 0X8, 0, 0);
	MakeFunction    (0X188A2,0X188B6);
	SetFunctionFlags(0X188A2,0x400);
	MakeFrame(0X188A2, 0X8, 0, 0);
	MakeFunction    (0X188D0,0X18C3E);
	SetFunctionFlags(0X188D0,0x400);
	MakeFrame(0X188D0, 0X60, 0, 0);
	MakeFunction    (0X18C44,0X18D1C);
	SetFunctionFlags(0X18C44,0x400);
	MakeFrame(0X18C44, 0X48, 0, 0);
	MakeFunction    (0X18D20,0X18D60);
	SetFunctionFlags(0X18D20,0x400);
	MakeFrame(0X18D20, 0X10, 0, 0);
	MakeFunction    (0X18D60,0X18D6A);
	SetFunctionFlags(0X18D60,0x400);
	MakeFrame(0X18D60, 0X8, 0, 0);
	MakeFunction    (0X18D70,0X18DE0);
	SetFunctionFlags(0X18D70,0x400);
	MakeFrame(0X18D70, 0X18, 0, 0);
	MakeFunction    (0X18DF0,0X190FA);
	SetFunctionFlags(0X18DF0,0x400);
	MakeFrame(0X18DF0, 0X50, 0, 0);
	MakeFunction    (0X19108,0X1922C);
	SetFunctionFlags(0X19108,0x400);
	MakeFrame(0X19108, 0X48, 0, 0);
	MakeFunction    (0X1923C,0X1924E);
	SetFunctionFlags(0X1923C,0x401);
	MakeFrame(0X1923C, 0X8, 0, 0);
	MakeFunction    (0X19250,0X192D0);
	SetFunctionFlags(0X19250,0x400);
	MakeFunction    (0X192D0,0X192F6);
	SetFunctionFlags(0X192D0,0x400);
	MakeFunction    (0X192F8,0X19300);
	SetFunctionFlags(0X192F8,0x401);
	MakeFunction    (0X19306,0X193EA);
	SetFunctionFlags(0X19306,0x400);
	MakeFunction    (0X193EA,0X196A2);
	SetFunctionFlags(0X193EA,0x400);
	MakeFrame(0X193EA, 0X10, 0, 0);
	MakeFunction    (0X19724,0X19774);
	SetFunctionFlags(0X19724,0x400);
	MakeFrame(0X19724, 0X8, 0, 0);
	MakeFunction    (0X19778,0X1983E);
	SetFunctionFlags(0X19778,0x400);
	MakeFunction    (0X1983E,0X19866);
	SetFunctionFlags(0X1983E,0x400);
	MakeFrame(0X1983E, 0X18, 0, 0);
	MakeFunction    (0X19866,0X1988E);
	SetFunctionFlags(0X19866,0x400);
	MakeFrame(0X19866, 0X18, 0, 0);
	MakeFunction    (0X1988E,0X198B6);
	SetFunctionFlags(0X1988E,0x400);
	MakeFrame(0X1988E, 0X18, 0, 0);
	MakeFunction    (0X198B6,0X198DE);
	SetFunctionFlags(0X198B6,0x400);
	MakeFrame(0X198B6, 0X18, 0, 0);
	MakeFunction    (0X198DE,0X19B22);
	SetFunctionFlags(0X198DE,0x400);
	MakeFunction    (0X19B24,0X19B46);
	SetFunctionFlags(0X19B24,0x405);
	SetType(0X19B24, "void OSStartHighRdy(void);");
	SetFunctionCmt(0X19B24,	"This function triggers a PendSV exception (essentially, causes a context switch) to cause the first task to start.", 1);
	MakeFrame(0X19B24, 0, 0, 0);
	MakeNameEx(0X19B44, "OSStartHang", SN_LOCAL);
	MakeFunction    (0X19B46,0X19B88);
	SetFunctionFlags(0X19B46,0x404);
	SetType(0X19B46, "void OS_CPU_PendSVHandler(void);");
	SetFunctionCmt(0X19B46,	"Handle PendSV Exception.\nPendSV is used to cause a context switch.", 1);
	MakeFrame(0X19B46, 0X4, 0, 0);
	MakeNameEx(0X19B5A, "OS_CPU_PendSVHandler_nosave", SN_LOCAL);
	MakeFunction    (0X19BB8,0X19C2E);
	SetFunctionFlags(0X19BB8,0x400);
	MakeFrame(0X19BB8, 0X8, 0, 0);
	MakeFunction    (0X19C40,0X19CB4);
	SetFunctionFlags(0X19C40,0x400);
	MakeFrame(0X19C40, 0X10, 0, 0);
	MakeFunction    (0X19CBC,0X19D70);
	SetFunctionFlags(0X19CBC,0x400);
	MakeFrame(0X19CBC, 0X10, 0, 0);
	MakeFunction    (0X19D7C,0X19EDC);
	SetFunctionFlags(0X19D7C,0x400);
	MakeFrame(0X19D7C, 0X28, 0, 0);
	MakeFunction    (0X19EE4,0X19FE8);
	SetFunctionFlags(0X19EE4,0x400);
	MakeFrame(0X19EE4, 0X28, 0, 0);
	MakeFunction    (0X19FF0,0X1A018);
	SetFunctionFlags(0X19FF0,0x400);
	MakeFunction    (0X1A018,0X1A354);
	SetFunctionFlags(0X1A018,0x400);
	MakeFrame(0X1A018, 0X80, 0, 0);
	MakeFunction    (0X1A3A0,0X1A486);
	SetFunctionFlags(0X1A3A0,0x400);
	MakeFrame(0X1A3A0, 0X30, 0, 0);
	MakeFunction    (0X1A49C,0X1A546);
	SetFunctionFlags(0X1A49C,0x400);
	MakeFrame(0X1A49C, 0X18, 0, 0);
	MakeFunction    (0X1A548,0X1A628);
	SetFunctionFlags(0X1A548,0x400);
	MakeFrame(0X1A548, 0X40, 0, 0);
	MakeFunction    (0X1A634,0X1A640);
	SetFunctionFlags(0X1A634,0x400);
	MakeFunction    (0X1A644,0X1A64A);
	SetFunctionFlags(0X1A644,0x400);
	MakeFunction    (0X1A64A,0X1A64E);
	SetFunctionFlags(0X1A64A,0x480);
	MakeFunction    (0X1A64E,0X1A65A);
	SetFunctionFlags(0X1A64E,0x400);
	MakeFunction    (0X1A65A,0X1A668);
	SetFunctionFlags(0X1A65A,0x400);
	MakeFunction    (0X1A668,0X1A672);
	SetFunctionFlags(0X1A668,0x400);
	MakeFunction    (0X1A678,0X1A682);
	SetFunctionFlags(0X1A678,0x400);
	MakeFunction    (0X1A682,0X1A688);
	SetFunctionFlags(0X1A682,0x400);
	MakeFunction    (0X1A688,0X1A690);
	SetFunctionFlags(0X1A688,0x400);
	MakeFunction    (0X1A690,0X1A6A0);
	SetFunctionFlags(0X1A690,0x400);
	MakeFrame(0X1A690, 0X8, 0, 0);
	MakeFunction    (0X1A6A0,0X1A724);
	SetFunctionFlags(0X1A6A0,0x400);
	MakeFrame(0X1A6A0, 0X18, 0, 0);
	MakeFunction    (0X1A728,0X1A73E);
	SetFunctionFlags(0X1A728,0x400);
	MakeFrame(0X1A728, 0X8, 0, 0);
	MakeFunction    (0X1A73E,0X1A74C);
	SetFunctionFlags(0X1A73E,0x400);
	MakeFunction    (0X1A74C,0X1A7E0);
	SetFunctionFlags(0X1A74C,0x400);
	MakeFrame(0X1A74C, 0X20, 0, 0);
	MakeFunction    (0X1A7E8,0X1A838);
	SetFunctionFlags(0X1A7E8,0x400);
	MakeFrame(0X1A7E8, 0X8, 0, 0);
	MakeFunction    (0X1A840,0X1A8B4);
	SetFunctionFlags(0X1A840,0x400);
	MakeFrame(0X1A840, 0X18, 0, 0);
	MakeFunction    (0X1A8B4,0X1ABDC);
	SetFunctionFlags(0X1A8B4,0x400);
	MakeFrame(0X1A8B4, 0X60, 0, 0);
	MakeFunction    (0X1AC10,0X1ACD6);
	SetFunctionFlags(0X1AC10,0x400);
	MakeFrame(0X1AC10, 0X18, 0, 0);
	MakeFunction    (0X1ACF4,0X1AE74);
	SetFunctionFlags(0X1ACF4,0x400);
	MakeFrame(0X1ACF4, 0X18, 0, 0);
	MakeFunction    (0X1AEA8,0X1B878);
	SetFunctionFlags(0X1AEA8,0x400);
	MakeFrame(0X1AEA8, 0X80, 0, 0);
	MakeFunction    (0X1B880,0X1B916);
	SetFunctionFlags(0X1B880,0x400);
	MakeFrame(0X1B880, 0X20, 0, 0);
	MakeFunction    (0X1B920,0X1B96C);
	SetFunctionFlags(0X1B920,0x400);
	MakeFrame(0X1B920, 0X18, 0, 0);
	MakeFunction    (0X1B96C,0X1B98E);
	SetFunctionFlags(0X1B96C,0x400);
	MakeFrame(0X1B96C, 0X8, 0, 0);
	MakeFunction    (0X1B998,0X1B9BA);
	SetFunctionFlags(0X1B998,0x400);
	MakeFrame(0X1B998, 0X8, 0, 0);
	MakeFunction    (0X1B9C4,0X1BA1C);
	SetFunctionFlags(0X1B9C4,0x400);
	MakeFunction    (0X1BA28,0X1BABC);
	SetFunctionFlags(0X1BA28,0x400);
	MakeFrame(0X1BA28, 0X8, 0, 0);
	MakeFunction    (0X1BABC,0X1BADC);
	SetFunctionFlags(0X1BABC,0x400);
	MakeFunction    (0X1BBA0,0X1BDC8);
	SetFunctionFlags(0X1BBA0,0x400);
	MakeFrame(0X1BBA0, 0X18, 0, 0);
	MakeFunction    (0X1BE50,0X1BEC8);
	SetFunctionFlags(0X1BE50,0x400);
	MakeFunction    (0X1BEC8,0X1BF24);
	SetFunctionFlags(0X1BEC8,0x400);
	MakeFrame(0X1BEC8, 0, 0, 0);
	MakeFunction    (0X1BF28,0X1BF80);
	SetFunctionFlags(0X1BF28,0x400);
	MakeFrame(0X1BF28, 0, 0, 0);
	MakeFunction    (0X1BF82,0X1BFB0);
	SetFunctionFlags(0X1BF82,0x400);
	MakeFunction    (0X1BFB0,0X1BFD6);
	SetFunctionFlags(0X1BFB0,0x400);
	MakeFunction    (0X1BFD8,0X1C03A);
	SetFunctionFlags(0X1BFD8,0x400);
	MakeFunction    (0X1C03A,0X1C050);
	SetFunctionFlags(0X1C03A,0x400);
	MakeFrame(0X1C03A, 0X10, 0, 0);
	MakeFunction    (0X1C050,0X1C19C);
	SetFunctionFlags(0X1C050,0x400);
	MakeFrame(0X1C050, 0X10, 0, 0);
	MakeFunction    (0X1C1A4,0X1C240);
	SetFunctionFlags(0X1C1A4,0x400);
	MakeFunction    (0X1C240,0X1C24C);
	SetFunctionFlags(0X1C240,0x400);
	MakeFunction    (0X1C24C,0X1C2B8);
	SetFunctionFlags(0X1C24C,0x400);
	MakeFunction    (0X1C2B8,0X1C2CE);
	SetFunctionFlags(0X1C2B8,0x400);
	MakeFrame(0X1C2B8, 0X8, 0, 0);
	MakeFunction    (0X1C2D0,0X1C498);
	SetFunctionFlags(0X1C2D0,0x400);
	MakeFrame(0X1C2D0, 0X18, 0, 0);
	MakeFunction    (0X1C49C,0X1C66C);
	SetFunctionFlags(0X1C49C,0x400);
	MakeFrame(0X1C49C, 0X8, 0, 0);
	MakeFunction    (0X1C670,0X1C6B8);
	SetFunctionFlags(0X1C670,0x400);
	MakeFrame(0X1C670, 0X8, 0, 0);
	MakeFunction    (0X1C6C8,0X1C6D6);
	SetFunctionFlags(0X1C6C8,0x400);
	MakeFunction    (0X1C7B0,0X1C930);
	SetFunctionFlags(0X1C7B0,0x400);
	MakeFrame(0X1C7B0, 0X4, 0, 0);
	MakeFunction    (0X1C934,0X1C960);
	SetFunctionFlags(0X1C934,0x400);
	MakeFrame(0X1C934, 0, 0, 0);
	MakeFunction    (0X1C96C,0X1C9A4);
	SetFunctionFlags(0X1C96C,0x400);
	MakeFrame(0X1C96C, 0, 0, 0);
	MakeFunction    (0X1C9AC,0X1C9DC);
	SetFunctionFlags(0X1C9AC,0x400);
	MakeFunction    (0X1C9DC,0X1CA02);
	SetFunctionFlags(0X1C9DC,0x400);
	MakeFunction    (0X1CA04,0X1CA6C);
	SetFunctionFlags(0X1CA04,0x400);
	MakeFunction    (0X1CA6C,0X1CB6E);
	SetFunctionFlags(0X1CA6C,0x400);
	MakeFunction    (0X1CB6E,0X1CBFA);
	SetFunctionFlags(0X1CB6E,0x400);
	MakeFunction    (0X1CC04,0X1CC18);
	SetFunctionFlags(0X1CC04,0x400);
	MakeFunction    (0X1CC18,0X1CD02);
	SetFunctionFlags(0X1CC18,0x400);
	MakeFunction    (0X1CD6A,0X1CDC6);
	SetFunctionFlags(0X1CD6A,0x400);
	MakeFunction    (0X1CDC6,0X1CE12);
	SetFunctionFlags(0X1CDC6,0x400);
	MakeFunction    (0X1CE12,0X1CE16);
	SetFunctionFlags(0X1CE12,0x480);
	MakeFunction    (0X1CE16,0X1CE1A);
	SetFunctionFlags(0X1CE16,0x480);
	MakeFunction    (0X1CE1A,0X1CE1E);
	SetFunctionFlags(0X1CE1A,0x480);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
	Functions_1();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	SetRegEx(0,"T",0,3);
	SetRegEx(0X180,"T",0X1,3);
	SetRegEx(0X210,"T",0X1,3);
	SetRegEx(0X230,"T",0X1,3);
	SetRegEx(0X248,"T",0X1,3);
	SetRegEx(0X254,"T",0X1,3);
	SetRegEx(0X27C,"T",0X1,3);
	SetRegEx(0X280,"T",0X1,3);
	SetRegEx(0X28A,"T",0X1,3);
	SetRegEx(0X33C,"T",0X1,3);
	SetRegEx(0X396,"T",0X1,3);
	SetRegEx(0X43E,"T",0X1,3);
	SetRegEx(0X478,"T",0X1,3);
	SetRegEx(0X4B0,"T",0X1,3);
	SetRegEx(0X4B4,"T",0X1,3);
	SetRegEx(0X4CC,"T",0X1,3);
	SetRegEx(0X4DA,"T",0X1,3);
	SetRegEx(0X4E6,"T",0X1,3);
	SetRegEx(0X4F2,"T",0X1,3);
	SetRegEx(0X4FE,"T",0X1,3);
	SetRegEx(0X50A,"T",0X1,3);
	SetRegEx(0X518,"T",0X1,3);
	SetRegEx(0X524,"T",0X1,3);
	SetRegEx(0X530,"T",0X1,3);
	SetRegEx(0X556,"T",0X1,3);
	SetRegEx(0X55C,"T",0X1,3);
	SetRegEx(0X574,"T",0X1,3);
	SetRegEx(0X5A0,"T",0X1,3);
	SetRegEx(0X5A8,"T",0X1,3);
	SetRegEx(0X5AE,"T",0X1,3);
	SetRegEx(0X5B0,"T",0X1,3);
	SetRegEx(0X622,"T",0X1,3);
	SetRegEx(0X634,"T",0X1,3);
	SetRegEx(0X636,"T",0X1,3);
	SetRegEx(0X674,"T",0X1,3);
	SetRegEx(0X694,"T",0X1,3);
	SetRegEx(0X6AA,"T",0X1,3);
	SetRegEx(0X6C0,"T",0X1,3);
	SetRegEx(0X6D6,"T",0X1,3);
	SetRegEx(0X6EC,"T",0X1,3);
	SetRegEx(0X702,"T",0X1,3);
	SetRegEx(0X718,"T",0X1,3);
	SetRegEx(0X738,"T",0X1,3);
	SetRegEx(0X74E,"T",0X1,3);
	SetRegEx(0X750,"T",0X1,3);
	SetRegEx(0X87A,"T",0X1,3);
	SetRegEx(0X892,"T",0X1,3);
	SetRegEx(0X926,"T",0X1,3);
	SetRegEx(0X948,"T",0X1,3);
	SetRegEx(0X98C,"T",0X1,3);
	SetRegEx(0X9DE,"T",0X1,3);
	SetRegEx(0XA04,"T",0X1,3);
	SetRegEx(0XA0C,"T",0X1,3);
	SetRegEx(0XA10,"T",0X1,3);
	SetRegEx(0XA2E,"T",0X1,3);
	SetRegEx(0XA32,"T",0X1,3);
	SetRegEx(0XA38,"T",0X1,3);
	SetRegEx(0XA42,"T",0X1,3);
	SetRegEx(0XA4A,"T",0X1,3);
	SetRegEx(0XA54,"T",0X1,3);
	SetRegEx(0XA56,"T",0X1,3);
	SetRegEx(0XA5A,"T",0X1,3);
	SetRegEx(0XA6C,"T",0X1,3);
	SetRegEx(0XBE0,"T",0X1,3);
	SetRegEx(0XC00,"T",0X1,3);
	SetRegEx(0XC5C,"T",0X1,3);
	SetRegEx(0XC60,"T",0X1,3);
	SetRegEx(0XC74,"T",0X1,3);
	SetRegEx(0XC78,"T",0X1,3);
	SetRegEx(0XC80,"T",0X1,3);
	SetRegEx(0XC88,"T",0X1,3);
	SetRegEx(0XC90,"T",0X1,3);
	SetRegEx(0XC9C,"T",0X1,3);
	SetRegEx(0XCB8,"T",0X1,3);
	SetRegEx(0XCCE,"T",0X1,3);
	SetRegEx(0XCE4,"T",0X1,3);
	SetRegEx(0XCFA,"T",0X1,3);
	SetRegEx(0XD9E,"T",0X1,3);
	SetRegEx(0XDA8,"T",0X1,3);
	SetRegEx(0XDB2,"T",0X1,3);
	SetRegEx(0XDBA,"T",0X1,3);
	SetRegEx(0XDBE,"T",0X1,3);
	SetRegEx(0XDC0,"T",0X1,3);
	SetRegEx(0XE12,"T",0X1,3);
	SetRegEx(0XE50,"T",0X1,3);
	SetRegEx(0XE7C,"T",0X1,3);
	SetRegEx(0XE84,"T",0X1,3);
	SetRegEx(0XEB0,"T",0X1,3);
	SetRegEx(0XEB8,"T",0X1,3);
	SetRegEx(0XEE4,"T",0X1,3);
	SetRegEx(0XEEC,"T",0X1,3);
	SetRegEx(0XEFE,"T",0X1,3);
	SetRegEx(0XF00,"T",0X1,3);
	SetRegEx(0XF12,"T",0X1,3);
	SetRegEx(0XF14,"T",0X1,3);
	SetRegEx(0XF26,"T",0X1,3);
	SetRegEx(0XF28,"T",0X1,3);
	SetRegEx(0XF68,"T",0X1,3);
	SetRegEx(0XF96,"T",0X1,3);
	SetRegEx(0XFBA,"T",0X1,3);
	SetRegEx(0XFC4,"T",0X1,3);
	SetRegEx(0XFDE,"T",0X1,3);
	SetRegEx(0XFF4,"T",0X1,3);
	SetRegEx(0X1038,"T",0X1,3);
	SetRegEx(0X1080,"T",0X1,3);
	SetRegEx(0X1084,"T",0X1,3);
	SetRegEx(0X1090,"T",0X1,3);
	SetRegEx(0X10EA,"T",0X1,3);
	SetRegEx(0X10F0,"T",0X1,3);
	SetRegEx(0X1162,"T",0X1,3);
	SetRegEx(0X1178,"T",0X1,3);
	SetRegEx(0X1182,"T",0X1,3);
	SetRegEx(0X1186,"T",0X1,3);
	SetRegEx(0X118E,"T",0X1,3);
	SetRegEx(0X1196,"T",0X1,3);
	SetRegEx(0X119C,"T",0X1,3);
	SetRegEx(0X11B4,"T",0X1,3);
	SetRegEx(0X11CE,"T",0X1,3);
	SetRegEx(0X11D0,"T",0X1,3);
	SetRegEx(0X11DA,"T",0X1,3);
	SetRegEx(0X11EE,"T",0X1,3);
	SetRegEx(0X1200,"T",0X1,3);
	SetRegEx(0X120A,"T",0X1,3);
	SetRegEx(0X1226,"T",0X1,3);
	SetRegEx(0X1274,"T",0X1,3);
	SetRegEx(0X1286,"T",0X1,3);
	SetRegEx(0X129E,"T",0X1,3);
	SetRegEx(0X12A0,"T",0X1,3);
	SetRegEx(0X12A2,"T",0X1,3);
	SetRegEx(0X12B2,"T",0X1,3);
	SetRegEx(0X12BC,"T",0X1,3);
	SetRegEx(0X12E4,"T",0X1,3);
	SetRegEx(0X12F8,"T",0X1,3);
	SetRegEx(0X131A,"T",0X1,3);
	SetRegEx(0X131C,"T",0X1,3);
	SetRegEx(0X1328,"T",0X1,3);
	SetRegEx(0X1332,"T",0X1,3);
	SetRegEx(0X134A,"T",0X1,3);
	SetRegEx(0X1352,"T",0X1,3);
	SetRegEx(0X1370,"T",0X1,3);
	SetRegEx(0X1374,"T",0X1,3);
	SetRegEx(0X1376,"T",0X1,3);
	SetRegEx(0X137C,"T",0X1,3);
	SetRegEx(0X13BE,"T",0X1,3);
	SetRegEx(0X13CC,"T",0X1,3);
	SetRegEx(0X13E6,"T",0X1,3);
	SetRegEx(0X1400,"T",0X1,3);
	SetRegEx(0X1402,"T",0X1,3);
	SetRegEx(0X1404,"T",0X1,3);
	SetRegEx(0X1414,"T",0X1,3);
	SetRegEx(0X1440,"T",0X1,3);
	SetRegEx(0X1462,"T",0X1,3);
	SetRegEx(0X1484,"T",0X1,3);
	SetRegEx(0X149A,"T",0X1,3);
	SetRegEx(0X149C,"T",0X1,3);
	SetRegEx(0X14B8,"T",0X1,3);
	SetRegEx(0X14D8,"T",0X1,3);
	SetRegEx(0X14F0,"T",0X1,3);
	SetRegEx(0X14F2,"T",0X1,3);
	SetRegEx(0X1514,"T",0X1,3);
	SetRegEx(0X151C,"T",0X1,3);
	SetRegEx(0X152C,"T",0X1,3);
	SetRegEx(0X153A,"T",0X1,3);
	SetRegEx(0X1548,"T",0X1,3);
	SetRegEx(0X154E,"T",0X1,3);
	SetRegEx(0X1566,"T",0X1,3);
	SetRegEx(0X1572,"T",0X1,3);
	SetRegEx(0X157C,"T",0X1,3);
	SetRegEx(0X1582,"T",0X1,3);
	SetRegEx(0X1594,"T",0X1,3);
	SetRegEx(0X1598,"T",0X1,3);
	SetRegEx(0X15AC,"T",0X1,3);
	SetRegEx(0X15B2,"T",0X1,3);
	SetRegEx(0X15BE,"T",0X1,3);
	SetRegEx(0X15C4,"T",0X1,3);
	SetRegEx(0X15C6,"T",0X1,3);
	SetRegEx(0X15D8,"T",0X1,3);
	SetRegEx(0X15E2,"T",0X1,3);
	SetRegEx(0X15E6,"T",0X1,3);
	SetRegEx(0X15EA,"T",0X1,3);
	SetRegEx(0X15EC,"T",0X1,3);
	SetRegEx(0X15F6,"T",0X1,3);
	SetRegEx(0X161C,"T",0X1,3);
	SetRegEx(0X1622,"T",0X1,3);
	SetRegEx(0X1644,"T",0X1,3);
	SetRegEx(0X164A,"T",0X1,3);
	SetRegEx(0X1654,"T",0X1,3);
	SetRegEx(0X1656,"T",0X1,3);
	SetRegEx(0X1666,"T",0X1,3);
	SetRegEx(0X1672,"T",0X1,3);
	SetRegEx(0X1694,"T",0X1,3);
	SetRegEx(0X16A2,"T",0X1,3);
	SetRegEx(0X16B4,"T",0X1,3);
	SetRegEx(0X16B6,"T",0X1,3);
	SetRegEx(0X16E6,"T",0X1,3);
	SetRegEx(0X16EA,"T",0X1,3);
	SetRegEx(0X16F0,"T",0X1,3);
	SetRegEx(0X16F6,"T",0X1,3);
	SetRegEx(0X1700,"T",0X1,3);
	SetRegEx(0X1710,"T",0X1,3);
	SetRegEx(0X1720,"T",0X1,3);
	SetRegEx(0X1726,"T",0X1,3);
	SetRegEx(0X172A,"T",0X1,3);
	SetRegEx(0X172C,"T",0X1,3);
	SetRegEx(0X1736,"T",0X1,3);
	SetRegEx(0X173A,"T",0X1,3);
	SetRegEx(0X173E,"T",0X1,3);
	SetRegEx(0X174A,"T",0X1,3);
	SetRegEx(0X1768,"T",0X1,3);
	SetRegEx(0X1780,"T",0X1,3);
	SetRegEx(0X179E,"T",0X1,3);
	SetRegEx(0X17AC,"T",0X1,3);
	SetRegEx(0X17B2,"T",0X1,3);
	SetRegEx(0X17C0,"T",0X1,3);
	SetRegEx(0X17C4,"T",0X1,3);
	SetRegEx(0X17CC,"T",0X1,3);
	SetRegEx(0X17DA,"T",0X1,3);
	SetRegEx(0X17E2,"T",0X1,3);
	SetRegEx(0X17E6,"T",0X1,3);
	SetRegEx(0X1800,"T",0X1,3);
	SetRegEx(0X180A,"T",0X1,3);
	SetRegEx(0X1810,"T",0X1,3);
	SetRegEx(0X1818,"T",0X1,3);
	SetRegEx(0X181E,"T",0X1,3);
	SetRegEx(0X1824,"T",0X1,3);
	SetRegEx(0X182A,"T",0X1,3);
	SetRegEx(0X1830,"T",0X1,3);
	SetRegEx(0X183C,"T",0X1,3);
	SetRegEx(0X1842,"T",0X1,3);
	SetRegEx(0X1848,"T",0X1,3);
	SetRegEx(0X184E,"T",0X1,3);
	SetRegEx(0X1854,"T",0X1,3);
	SetRegEx(0X185A,"T",0X1,3);
	SetRegEx(0X1860,"T",0X1,3);
	SetRegEx(0X186C,"T",0X1,3);
	SetRegEx(0X1878,"T",0X1,3);
	SetRegEx(0X188E,"T",0X1,3);
	SetRegEx(0X18AC,"T",0X1,3);
	SetRegEx(0X18AE,"T",0X1,3);
	SetRegEx(0X18B2,"T",0X1,3);
	SetRegEx(0X18D2,"T",0X1,3);
	SetRegEx(0X18F2,"T",0X1,3);
	SetRegEx(0X18FA,"T",0X1,3);
	SetRegEx(0X1900,"T",0X1,3);
	SetRegEx(0X1916,"T",0X1,3);
	SetRegEx(0X1920,"T",0X1,3);
	SetRegEx(0X1926,"T",0X1,3);
	SetRegEx(0X192E,"T",0X1,3);
	SetRegEx(0X1936,"T",0X1,3);
	SetRegEx(0X193E,"T",0X1,3);
	SetRegEx(0X1948,"T",0X1,3);
	SetRegEx(0X1950,"T",0X1,3);
	SetRegEx(0X1958,"T",0X1,3);
	SetRegEx(0X1960,"T",0X1,3);
	SetRegEx(0X1968,"T",0X1,3);
	SetRegEx(0X1976,"T",0X1,3);
	SetRegEx(0X1980,"T",0X1,3);
	SetRegEx(0X198A,"T",0X1,3);
	SetRegEx(0X1996,"T",0X1,3);
	SetRegEx(0X19A2,"T",0X1,3);
	SetRegEx(0X19AE,"T",0X1,3);
	SetRegEx(0X19B4,"T",0X1,3);
	SetRegEx(0X19B6,"T",0X1,3);
	SetRegEx(0X19B8,"T",0X1,3);
	SetRegEx(0X19BA,"T",0X1,3);
	SetRegEx(0X19BC,"T",0X1,3);
	SetRegEx(0X19BE,"T",0X1,3);
	SetRegEx(0X19C0,"T",0X1,3);
	SetRegEx(0X19C2,"T",0X1,3);
	SetRegEx(0X19CA,"T",0X1,3);
	SetRegEx(0X19EA,"T",0X1,3);
	SetRegEx(0X19EC,"T",0X1,3);
	SetRegEx(0X19EE,"T",0X1,3);
	SetRegEx(0X19F0,"T",0X1,3);
	SetRegEx(0X19FC,"T",0X1,3);
	SetRegEx(0X1A08,"T",0X1,3);
	SetRegEx(0X1A14,"T",0X1,3);
	SetRegEx(0X1A20,"T",0X1,3);
	SetRegEx(0X1A2C,"T",0X1,3);
	SetRegEx(0X1A38,"T",0X1,3);
	SetRegEx(0X1A44,"T",0X1,3);
	SetRegEx(0X1A72,"T",0X1,3);
	SetRegEx(0X1A92,"T",0X1,3);
	SetRegEx(0X1A94,"T",0X1,3);
	SetRegEx(0X1A96,"T",0X1,3);
	SetRegEx(0X1A98,"T",0X1,3);
	SetRegEx(0X1A9A,"T",0X1,3);
	SetRegEx(0X1AAA,"T",0X1,3);
	SetRegEx(0X1AD8,"T",0X1,3);
	SetRegEx(0X1B06,"T",0X1,3);
	SetRegEx(0X1B34,"T",0X1,3);
	SetRegEx(0X1B78,"T",0X1,3);
	SetRegEx(0X1BA6,"T",0X1,3);
	SetRegEx(0X1BBE,"T",0X1,3);
	SetRegEx(0X1BDE,"T",0X1,3);
	SetRegEx(0X1BFC,"T",0X1,3);
	SetRegEx(0X1C12,"T",0X1,3);
	SetRegEx(0X1C18,"T",0X1,3);
	SetRegEx(0X1C20,"T",0X1,3);
	SetRegEx(0X1C22,"T",0X1,3);
	SetRegEx(0X1C28,"T",0X1,3);
	SetRegEx(0X1C2A,"T",0X1,3);
	SetRegEx(0X1C44,"T",0X1,3);
	SetRegEx(0X1C68,"T",0X1,3);
	SetRegEx(0X1C8E,"T",0X1,3);
	SetRegEx(0X1CAA,"T",0X1,3);
	SetRegEx(0X1CB0,"T",0X1,3);
	SetRegEx(0X1CB4,"T",0X1,3);
	SetRegEx(0X1CB8,"T",0X1,3);
	SetRegEx(0X1CBE,"T",0X1,3);
	SetRegEx(0X1CC4,"T",0X1,3);
	SetRegEx(0X1CC8,"T",0X1,3);
	SetRegEx(0X1CE4,"T",0X1,3);
	SetRegEx(0X1CEA,"T",0X1,3);
	SetRegEx(0X1CEE,"T",0X1,3);
	SetRegEx(0X1CF2,"T",0X1,3);
	SetRegEx(0X1CFA,"T",0X1,3);
	SetRegEx(0X1D1E,"T",0X1,3);
	SetRegEx(0X1D3A,"T",0X1,3);
	SetRegEx(0X1D44,"T",0X1,3);
	SetRegEx(0X1D48,"T",0X1,3);
	SetRegEx(0X1D4A,"T",0X1,3);
	SetRegEx(0X1D70,"T",0X1,3);
	SetRegEx(0X1D78,"T",0X1,3);
	SetRegEx(0X1D7E,"T",0X1,3);
	SetRegEx(0X1DD8,"T",0X1,3);
	SetRegEx(0X1DF6,"T",0X1,3);
	SetRegEx(0X1EC6,"T",0X1,3);
	SetRegEx(0X1ECE,"T",0X1,3);
	SetRegEx(0X1ED2,"T",0X1,3);
	SetRegEx(0X1ED4,"T",0X1,3);
	SetRegEx(0X1F4C,"T",0X1,3);
	SetRegEx(0X1F5E,"T",0X1,3);
	SetRegEx(0X1F6C,"T",0X1,3);
	SetRegEx(0X1F9A,"T",0X1,3);
	SetRegEx(0X1FC4,"T",0X1,3);
	SetRegEx(0X1FD6,"T",0X1,3);
	SetRegEx(0X1FF0,"T",0X1,3);
	SetRegEx(0X2000,"T",0X1,3);
	SetRegEx(0X2008,"T",0X1,3);
	SetRegEx(0X2024,"T",0X1,3);
	SetRegEx(0X202E,"T",0X1,3);
	SetRegEx(0X2036,"T",0X1,3);
	SetRegEx(0X2052,"T",0X1,3);
	SetRegEx(0X205C,"T",0X1,3);
	SetRegEx(0X2064,"T",0X1,3);
	SetRegEx(0X2078,"T",0X1,3);
	SetRegEx(0X20A6,"T",0X1,3);
	SetRegEx(0X20A8,"T",0X1,3);
	SetRegEx(0X20C0,"T",0X1,3);
	SetRegEx(0X20C2,"T",0X1,3);
	SetRegEx(0X20C4,"T",0X1,3);
	SetRegEx(0X20D6,"T",0X1,3);
	SetRegEx(0X20DA,"T",0X1,3);
	SetRegEx(0X20DE,"T",0X1,3);
	SetRegEx(0X20E2,"T",0X1,3);
	SetRegEx(0X20E4,"T",0X1,3);
	SetRegEx(0X20EC,"T",0X1,3);
	SetRegEx(0X2104,"T",0X1,3);
	SetRegEx(0X210C,"T",0X1,3);
	SetRegEx(0X2110,"T",0X1,3);
	SetRegEx(0X2158,"T",0X1,3);
	SetRegEx(0X215A,"T",0X1,3);
	SetRegEx(0X215C,"T",0X1,3);
	SetRegEx(0X217E,"T",0X1,3);
	SetRegEx(0X21A6,"T",0X1,3);
	SetRegEx(0X21B4,"T",0X1,3);
	SetRegEx(0X21C8,"T",0X1,3);
	SetRegEx(0X21D0,"T",0X1,3);
	SetRegEx(0X21DA,"T",0X1,3);
	SetRegEx(0X21E6,"T",0X1,3);
	SetRegEx(0X21EA,"T",0X1,3);
	SetRegEx(0X21EE,"T",0X1,3);
	SetRegEx(0X21F2,"T",0X1,3);
	SetRegEx(0X21F8,"T",0X1,3);
	SetRegEx(0X220C,"T",0X1,3);
	SetRegEx(0X2228,"T",0X1,3);
	SetRegEx(0X2242,"T",0X1,3);
	SetRegEx(0X2244,"T",0X1,3);
	SetRegEx(0X224A,"T",0X1,3);
	SetRegEx(0X2264,"T",0X1,3);
	SetRegEx(0X2266,"T",0X1,3);
	SetRegEx(0X22F2,"T",0X1,3);
	SetRegEx(0X22F4,"T",0X1,3);
	SetRegEx(0X22FA,"T",0X1,3);
	SetRegEx(0X22FC,"T",0X1,3);
	SetRegEx(0X2316,"T",0X1,3);
	SetRegEx(0X2360,"T",0X1,3);
	SetRegEx(0X2384,"T",0X1,3);
	SetRegEx(0X238A,"T",0X1,3);
	SetRegEx(0X239C,"T",0X1,3);
	SetRegEx(0X23AE,"T",0X1,3);
	SetRegEx(0X23CA,"T",0X1,3);
	SetRegEx(0X23D4,"T",0X1,3);
	SetRegEx(0X23DA,"T",0X1,3);
	SetRegEx(0X23DC,"T",0X1,3);
	SetRegEx(0X23EA,"T",0X1,3);
	SetRegEx(0X23EC,"T",0X1,3);
	SetRegEx(0X240C,"T",0X1,3);
	SetRegEx(0X2410,"T",0X1,3);
	SetRegEx(0X2412,"T",0X1,3);
	SetRegEx(0X2428,"T",0X1,3);
	SetRegEx(0X2494,"T",0X1,3);
	SetRegEx(0X24B4,"T",0X1,3);
	SetRegEx(0X24C4,"T",0X1,3);
	SetRegEx(0X24CE,"T",0X1,3);
	SetRegEx(0X24E6,"T",0X1,3);
	SetRegEx(0X2510,"T",0X1,3);
	SetRegEx(0X2522,"T",0X1,3);
	SetRegEx(0X252E,"T",0X1,3);
	SetRegEx(0X2570,"T",0X1,3);
	SetRegEx(0X2576,"T",0X1,3);
	SetRegEx(0X2584,"T",0X1,3);
	SetRegEx(0X258E,"T",0X1,3);
	SetRegEx(0X25D8,"T",0X1,3);
	SetRegEx(0X25FC,"T",0X1,3);
	SetRegEx(0X2618,"T",0X1,3);
	SetRegEx(0X2630,"T",0X1,3);
	SetRegEx(0X2640,"T",0X1,3);
	SetRegEx(0X264A,"T",0X1,3);
	SetRegEx(0X2654,"T",0X1,3);
	SetRegEx(0X2684,"T",0X1,3);
	SetRegEx(0X268A,"T",0X1,3);
	SetRegEx(0X2698,"T",0X1,3);
	SetRegEx(0X26A2,"T",0X1,3);
	SetRegEx(0X26D2,"T",0X1,3);
	SetRegEx(0X26D8,"T",0X1,3);
	SetRegEx(0X26E6,"T",0X1,3);
	SetRegEx(0X26FE,"T",0X1,3);
	SetRegEx(0X2718,"T",0X1,3);
	SetRegEx(0X276A,"T",0X1,3);
	SetRegEx(0X2786,"T",0X1,3);
	SetRegEx(0X2788,"T",0X1,3);
	SetRegEx(0X2794,"T",0X1,3);
	SetRegEx(0X27B6,"T",0X1,3);
	SetRegEx(0X27C2,"T",0X1,3);
	SetRegEx(0X27DA,"T",0X1,3);
	SetRegEx(0X27DC,"T",0X1,3);
	SetRegEx(0X27DE,"T",0X1,3);
	SetRegEx(0X282E,"T",0X1,3);
	SetRegEx(0X2830,"T",0X1,3);
	SetRegEx(0X2832,"T",0X1,3);
	SetRegEx(0X28C2,"T",0X1,3);
	SetRegEx(0X28E6,"T",0X1,3);
	SetRegEx(0X2904,"T",0X1,3);
	SetRegEx(0X2912,"T",0X1,3);
	SetRegEx(0X291E,"T",0X1,3);
	SetRegEx(0X2922,"T",0X1,3);
	SetRegEx(0X2934,"T",0X1,3);
	SetRegEx(0X2952,"T",0X1,3);
	SetRegEx(0X2956,"T",0X1,3);
	SetRegEx(0X296E,"T",0X1,3);
	SetRegEx(0X297A,"T",0X1,3);
	SetRegEx(0X29A6,"T",0X1,3);
	SetRegEx(0X29AC,"T",0X1,3);
	SetRegEx(0X29B4,"T",0X1,3);
	SetRegEx(0X2A00,"T",0X1,3);
	SetRegEx(0X2A04,"T",0X1,3);
	SetRegEx(0X2A68,"T",0X1,3);
	SetRegEx(0X2A6C,"T",0X1,3);
	SetRegEx(0X2A8A,"T",0X1,3);
	SetRegEx(0X2A9A,"T",0X1,3);
	SetRegEx(0X2AD8,"T",0X1,3);
	SetRegEx(0X2ADC,"T",0X1,3);
	SetRegEx(0X2B0C,"T",0X1,3);
	SetRegEx(0X2B10,"T",0X1,3);
	SetRegEx(0X2B20,"T",0X1,3);
	SetRegEx(0X2B36,"T",0X1,3);
	SetRegEx(0X2B3E,"T",0X1,3);
	SetRegEx(0X2B44,"T",0X1,3);
	SetRegEx(0X2B4A,"T",0X1,3);
	SetRegEx(0X2B80,"T",0X1,3);
	SetRegEx(0X2B84,"T",0X1,3);
	SetRegEx(0X2B9A,"T",0X1,3);
	SetRegEx(0X2BA0,"T",0X1,3);
	SetRegEx(0X2BA8,"T",0X1,3);
	SetRegEx(0X2BB0,"T",0X1,3);
	SetRegEx(0X2BB8,"T",0X1,3);
	SetRegEx(0X2BC2,"T",0X1,3);
	SetRegEx(0X2BCA,"T",0X1,3);
	SetRegEx(0X2C1E,"T",0X1,3);
	SetRegEx(0X2C22,"T",0X1,3);
	SetRegEx(0X2C52,"T",0X1,3);
	SetRegEx(0X2C54,"T",0X1,3);
	SetRegEx(0X2C90,"T",0X1,3);
	SetRegEx(0X2C94,"T",0X1,3);
	SetRegEx(0X2CD0,"T",0X1,3);
	SetRegEx(0X2D0A,"T",0X1,3);
	SetRegEx(0X2D44,"T",0X1,3);
	SetRegEx(0X2D46,"T",0X1,3);
	SetRegEx(0X2D76,"T",0X1,3);
	SetRegEx(0X2DF6,"T",0X1,3);
	SetRegEx(0X2DFA,"T",0X1,3);
	SetRegEx(0X2E24,"T",0X1,3);
	SetRegEx(0X2E36,"T",0X1,3);
	SetRegEx(0X2E38,"T",0X1,3);
	SetRegEx(0X2E4C,"T",0X1,3);
	SetRegEx(0X2E4E,"T",0X1,3);
	SetRegEx(0X2E64,"T",0X1,3);
	SetRegEx(0X2E90,"T",0X1,3);
	SetRegEx(0X2E94,"T",0X1,3);
	SetRegEx(0X2F86,"T",0X1,3);
	SetRegEx(0X2F8A,"T",0X1,3);
	SetRegEx(0X2FA4,"T",0X1,3);
	SetRegEx(0X2FB8,"T",0X1,3);
	SetRegEx(0X2FDE,"T",0X1,3);
	SetRegEx(0X2FE0,"T",0X1,3);
	SetRegEx(0X3012,"T",0X1,3);
	SetRegEx(0X302C,"T",0X1,3);
	SetRegEx(0X303C,"T",0X1,3);
	SetRegEx(0X3048,"T",0X1,3);
	SetRegEx(0X3050,"T",0X1,3);
	SetRegEx(0X308C,"T",0X1,3);
	SetRegEx(0X309C,"T",0X1,3);
	SetRegEx(0X30A6,"T",0X1,3);
	SetRegEx(0X30A8,"T",0X1,3);
	SetRegEx(0X30C8,"T",0X1,3);
	SetRegEx(0X30D8,"T",0X1,3);
	SetRegEx(0X30E4,"T",0X1,3);
	SetRegEx(0X3108,"T",0X1,3);
	SetRegEx(0X3110,"T",0X1,3);
	SetRegEx(0X312A,"T",0X1,3);
	SetRegEx(0X312E,"T",0X1,3);
	SetRegEx(0X3132,"T",0X1,3);
	SetRegEx(0X313A,"T",0X1,3);
	SetRegEx(0X313E,"T",0X1,3);
	SetRegEx(0X3150,"T",0X1,3);
	SetRegEx(0X3152,"T",0X1,3);
	SetRegEx(0X3156,"T",0X1,3);
	SetRegEx(0X3164,"T",0X1,3);
	SetRegEx(0X3166,"T",0X1,3);
	SetRegEx(0X317C,"T",0X1,3);
	SetRegEx(0X31A4,"T",0X1,3);
	SetRegEx(0X31A6,"T",0X1,3);
	SetRegEx(0X31B6,"T",0X1,3);
	SetRegEx(0X31BC,"T",0X1,3);
	SetRegEx(0X31BE,"T",0X1,3);
	SetRegEx(0X31E2,"T",0X1,3);
	SetRegEx(0X31EA,"T",0X1,3);
	SetRegEx(0X3202,"T",0X1,3);
	SetRegEx(0X3206,"T",0X1,3);
	SetRegEx(0X320A,"T",0X1,3);
	SetRegEx(0X320E,"T",0X1,3);
	SetRegEx(0X3212,"T",0X1,3);
	SetRegEx(0X3216,"T",0X1,3);
	SetRegEx(0X3236,"T",0X1,3);
	SetRegEx(0X3238,"T",0X1,3);
	SetRegEx(0X3280,"T",0X1,3);
	SetRegEx(0X3286,"T",0X1,3);
	SetRegEx(0X32EC,"T",0X1,3);
	SetRegEx(0X32F2,"T",0X1,3);
	SetRegEx(0X3310,"T",0X1,3);
	SetRegEx(0X3336,"T",0X1,3);
	SetRegEx(0X3338,"T",0X1,3);
	SetRegEx(0X333E,"T",0X1,3);
	SetRegEx(0X334A,"T",0X1,3);
	SetRegEx(0X3386,"T",0X1,3);
	SetRegEx(0X3388,"T",0X1,3);
	SetRegEx(0X33F4,"T",0X1,3);
	SetRegEx(0X33F8,"T",0X1,3);
	SetRegEx(0X342C,"T",0X1,3);
	SetRegEx(0X342E,"T",0X1,3);
	SetRegEx(0X3444,"T",0X1,3);
	SetRegEx(0X344A,"T",0X1,3);
	SetRegEx(0X346A,"T",0X1,3);
	SetRegEx(0X346C,"T",0X1,3);
	SetRegEx(0X34A2,"T",0X1,3);
	SetRegEx(0X34A4,"T",0X1,3);
	SetRegEx(0X34BC,"T",0X1,3);
	SetRegEx(0X34C2,"T",0X1,3);
	SetRegEx(0X34E2,"T",0X1,3);
	SetRegEx(0X34E4,"T",0X1,3);
	SetRegEx(0X353E,"T",0X1,3);
	SetRegEx(0X3542,"T",0X1,3);
	SetRegEx(0X3560,"T",0X1,3);
	SetRegEx(0X35A2,"T",0X1,3);
	SetRegEx(0X35E0,"T",0X1,3);
	SetRegEx(0X35E4,"T",0X1,3);
	SetRegEx(0X360A,"T",0X1,3);
	SetRegEx(0X3614,"T",0X1,3);
	SetRegEx(0X3650,"T",0X1,3);
	SetRegEx(0X3654,"T",0X1,3);
	SetRegEx(0X366C,"T",0X1,3);
	SetRegEx(0X3672,"T",0X1,3);
	SetRegEx(0X367A,"T",0X1,3);
	SetRegEx(0X3682,"T",0X1,3);
	SetRegEx(0X3684,"T",0X1,3);
	SetRegEx(0X3688,"T",0X1,3);
	SetRegEx(0X36AA,"T",0X1,3);
	SetRegEx(0X36AC,"T",0X1,3);
	SetRegEx(0X36E8,"T",0X1,3);
	SetRegEx(0X370C,"T",0X1,3);
	SetRegEx(0X3742,"T",0X1,3);
	SetRegEx(0X3744,"T",0X1,3);
	SetRegEx(0X3786,"T",0X1,3);
	SetRegEx(0X378A,"T",0X1,3);
	SetRegEx(0X37B2,"T",0X1,3);
	SetRegEx(0X37DA,"T",0X1,3);
	SetRegEx(0X37DC,"T",0X1,3);
	SetRegEx(0X3818,"T",0X1,3);
	SetRegEx(0X381A,"T",0X1,3);
	SetRegEx(0X3852,"T",0X1,3);
	SetRegEx(0X3854,"T",0X1,3);
	SetRegEx(0X387C,"T",0X1,3);
	SetRegEx(0X387E,"T",0X1,3);
	SetRegEx(0X3892,"T",0X1,3);
	SetRegEx(0X3894,"T",0X1,3);
	SetRegEx(0X38AE,"T",0X1,3);
	SetRegEx(0X38BE,"T",0X1,3);
	SetRegEx(0X38D6,"T",0X1,3);
	SetRegEx(0X38DA,"T",0X1,3);
	SetRegEx(0X38E4,"T",0X1,3);
	SetRegEx(0X38F0,"T",0X1,3);
	SetRegEx(0X3902,"T",0X1,3);
	SetRegEx(0X3906,"T",0X1,3);
	SetRegEx(0X3910,"T",0X1,3);
	SetRegEx(0X391A,"T",0X1,3);
	SetRegEx(0X3928,"T",0X1,3);
	SetRegEx(0X392C,"T",0X1,3);
	SetRegEx(0X3936,"T",0X1,3);
	SetRegEx(0X3940,"T",0X1,3);
	SetRegEx(0X394E,"T",0X1,3);
	SetRegEx(0X3952,"T",0X1,3);
	SetRegEx(0X395C,"T",0X1,3);
	SetRegEx(0X3966,"T",0X1,3);
	SetRegEx(0X3974,"T",0X1,3);
	SetRegEx(0X3978,"T",0X1,3);
	SetRegEx(0X3982,"T",0X1,3);
	SetRegEx(0X398C,"T",0X1,3);
	SetRegEx(0X399A,"T",0X1,3);
	SetRegEx(0X399E,"T",0X1,3);
	SetRegEx(0X39B4,"T",0X1,3);
	SetRegEx(0X39B8,"T",0X1,3);
	SetRegEx(0X39D0,"T",0X1,3);
	SetRegEx(0X39D4,"T",0X1,3);
	SetRegEx(0X39EA,"T",0X1,3);
	SetRegEx(0X39EE,"T",0X1,3);
	SetRegEx(0X39F8,"T",0X1,3);
	SetRegEx(0X39FC,"T",0X1,3);
	SetRegEx(0X3A46,"T",0X1,3);
	SetRegEx(0X3A68,"T",0X1,3);
	SetRegEx(0X3A70,"T",0X1,3);
	SetRegEx(0X3A88,"T",0X1,3);
	SetRegEx(0X3A8C,"T",0X1,3);
	SetRegEx(0X3AA0,"T",0X1,3);
	SetRegEx(0X3AA4,"T",0X1,3);
	SetRegEx(0X3AE4,"T",0X1,3);
	SetRegEx(0X3B18,"T",0X1,3);
	SetRegEx(0X3B1C,"T",0X1,3);
	SetRegEx(0X3B34,"T",0X1,3);
	SetRegEx(0X3B38,"T",0X1,3);
	SetRegEx(0X3B4E,"T",0X1,3);
	SetRegEx(0X3B52,"T",0X1,3);
	SetRegEx(0X3B66,"T",0X1,3);
	SetRegEx(0X3B6A,"T",0X1,3);
	SetRegEx(0X3B7E,"T",0X1,3);
	SetRegEx(0X3B82,"T",0X1,3);
	SetRegEx(0X3B96,"T",0X1,3);
	SetRegEx(0X3B9A,"T",0X1,3);
	SetRegEx(0X3BAE,"T",0X1,3);
	SetRegEx(0X3BB2,"T",0X1,3);
	SetRegEx(0X3BC8,"T",0X1,3);
	SetRegEx(0X3BCC,"T",0X1,3);
	SetRegEx(0X3BE2,"T",0X1,3);
	SetRegEx(0X3BF4,"T",0X1,3);
	SetRegEx(0X3BF6,"T",0X1,3);
	SetRegEx(0X3D16,"T",0X1,3);
	SetRegEx(0X3D18,"T",0X1,3);
	SetRegEx(0X3D2E,"T",0X1,3);
	SetRegEx(0X3D32,"T",0X1,3);
	SetRegEx(0X3D5E,"T",0X1,3);
	SetRegEx(0X3D60,"T",0X1,3);
	SetRegEx(0X3D78,"T",0X1,3);
	SetRegEx(0X3D88,"T",0X1,3);
	SetRegEx(0X3D8C,"T",0X1,3);
	SetRegEx(0X3D8E,"T",0X1,3);
	SetRegEx(0X3D92,"T",0X1,3);
	SetRegEx(0X3DB4,"T",0X1,3);
	SetRegEx(0X3DB8,"T",0X1,3);
	SetRegEx(0X3DFC,"T",0X1,3);
	SetRegEx(0X3E00,"T",0X1,3);
	SetRegEx(0X3E2A,"T",0X1,3);
	SetRegEx(0X3EA6,"T",0X1,3);
	SetRegEx(0X3EAA,"T",0X1,3);
	SetRegEx(0X3EBA,"T",0X1,3);
	SetRegEx(0X3EE6,"T",0X1,3);
	SetRegEx(0X3EE8,"T",0X1,3);
	SetRegEx(0X3F18,"T",0X1,3);
	SetRegEx(0X3F50,"T",0X1,3);
	SetRegEx(0X3F8A,"T",0X1,3);
	SetRegEx(0X3F8C,"T",0X1,3);
	SetRegEx(0X3FAC,"T",0X1,3);
	SetRegEx(0X3FB8,"T",0X1,3);
	SetRegEx(0X3FBA,"T",0X1,3);
	SetRegEx(0X3FE2,"T",0X1,3);
	SetRegEx(0X3FF2,"T",0X1,3);
	SetRegEx(0X3FF6,"T",0X1,3);
	SetRegEx(0X401C,"T",0X1,3);
	SetRegEx(0X402A,"T",0X1,3);
	SetRegEx(0X4048,"T",0X1,3);
	SetRegEx(0X4070,"T",0X1,3);
	SetRegEx(0X4074,"T",0X1,3);
	SetRegEx(0X4086,"T",0X1,3);
	SetRegEx(0X40A8,"T",0X1,3);
	SetRegEx(0X40D0,"T",0X1,3);
	SetRegEx(0X40E6,"T",0X1,3);
	SetRegEx(0X4118,"T",0X1,3);
	SetRegEx(0X4146,"T",0X1,3);
	SetRegEx(0X414C,"T",0X1,3);
	SetRegEx(0X416E,"T",0X1,3);
	SetRegEx(0X41B0,"T",0X1,3);
	SetRegEx(0X41D0,"T",0X1,3);
	SetRegEx(0X41D6,"T",0X1,3);
	SetRegEx(0X41DE,"T",0X1,3);
	SetRegEx(0X420A,"T",0X1,3);
	SetRegEx(0X420C,"T",0X1,3);
	SetRegEx(0X423C,"T",0X1,3);
	SetRegEx(0X423E,"T",0X1,3);
	SetRegEx(0X426A,"T",0X1,3);
	SetRegEx(0X426C,"T",0X1,3);
	SetRegEx(0X42A8,"T",0X1,3);
	SetRegEx(0X42AC,"T",0X1,3);
	SetRegEx(0X42CC,"T",0X1,3);
	SetRegEx(0X42FC,"T",0X1,3);
	SetRegEx(0X4318,"T",0X1,3);
	SetRegEx(0X431C,"T",0X1,3);
	SetRegEx(0X435E,"T",0X1,3);
	SetRegEx(0X4360,"T",0X1,3);
	SetRegEx(0X4378,"T",0X1,3);
	SetRegEx(0X4398,"T",0X1,3);
	SetRegEx(0X43B4,"T",0X1,3);
	SetRegEx(0X43BC,"T",0X1,3);
	SetRegEx(0X43DE,"T",0X1,3);
	SetRegEx(0X43E0,"T",0X1,3);
	SetRegEx(0X4410,"T",0X1,3);
	SetRegEx(0X441E,"T",0X1,3);
	SetRegEx(0X4424,"T",0X1,3);
	SetRegEx(0X443E,"T",0X1,3);
	SetRegEx(0X444E,"T",0X1,3);
	SetRegEx(0X4458,"T",0X1,3);
	SetRegEx(0X445E,"T",0X1,3);
	SetRegEx(0X448A,"T",0X1,3);
	SetRegEx(0X448C,"T",0X1,3);
	SetRegEx(0X44C0,"T",0X1,3);
	SetRegEx(0X44C2,"T",0X1,3);
	SetRegEx(0X44F4,"T",0X1,3);
	SetRegEx(0X44F6,"T",0X1,3);
	SetRegEx(0X4530,"T",0X1,3);
	SetRegEx(0X4532,"T",0X1,3);
	SetRegEx(0X4562,"T",0X1,3);
	SetRegEx(0X457A,"T",0X1,3);
	SetRegEx(0X457C,"T",0X1,3);
	SetRegEx(0X4584,"T",0X1,3);
	SetRegEx(0X45B6,"T",0X1,3);
	SetRegEx(0X45B8,"T",0X1,3);
	SetRegEx(0X4612,"T",0X1,3);
	SetRegEx(0X4616,"T",0X1,3);
	SetRegEx(0X464C,"T",0X1,3);
	SetRegEx(0X464E,"T",0X1,3);
	SetRegEx(0X4678,"T",0X1,3);
	SetRegEx(0X467A,"T",0X1,3);
	SetRegEx(0X4704,"T",0X1,3);
	SetRegEx(0X4708,"T",0X1,3);
	SetRegEx(0X471E,"T",0X1,3);
	SetRegEx(0X473A,"T",0X1,3);
	SetRegEx(0X4764,"T",0X1,3);
	SetRegEx(0X47AC,"T",0X1,3);
	SetRegEx(0X47B0,"T",0X1,3);
	SetRegEx(0X47B4,"T",0X1,3);
	SetRegEx(0X47E6,"T",0X1,3);
	SetRegEx(0X47EA,"T",0X1,3);
	SetRegEx(0X481E,"T",0X1,3);
	SetRegEx(0X4824,"T",0X1,3);
	SetRegEx(0X485A,"T",0X1,3);
	SetRegEx(0X4868,"T",0X1,3);
	SetRegEx(0X486C,"T",0X1,3);
	SetRegEx(0X4896,"T",0X1,3);
	SetRegEx(0X48A8,"T",0X1,3);
	SetRegEx(0X4920,"T",0X1,3);
	SetRegEx(0X4924,"T",0X1,3);
	SetRegEx(0X49CA,"T",0X1,3);
	SetRegEx(0X4A0E,"T",0X1,3);
	SetRegEx(0X4A28,"T",0X1,3);
	SetRegEx(0X4A32,"T",0X1,3);
	SetRegEx(0X4A42,"T",0X1,3);
	SetRegEx(0X4A44,"T",0X1,3);
	SetRegEx(0X4A46,"T",0X1,3);
	SetRegEx(0X4A50,"T",0X1,3);
	SetRegEx(0X4A52,"T",0X1,3);
	SetRegEx(0X4A56,"T",0X1,3);
	SetRegEx(0X4A9E,"T",0X1,3);
	SetRegEx(0X4AB0,"T",0X1,3);
	SetRegEx(0X4B26,"T",0X1,3);
	SetRegEx(0X4B4A,"T",0X1,3);
	SetRegEx(0X4B4E,"T",0X1,3);
	SetRegEx(0X4B7C,"T",0X1,3);
	SetRegEx(0X4BE4,"T",0X1,3);
	SetRegEx(0X4C2E,"T",0X1,3);
	SetRegEx(0X4C30,"T",0X1,3);
	SetRegEx(0X4C98,"T",0X1,3);
	SetRegEx(0X4C9A,"T",0X1,3);
	SetRegEx(0X4C9E,"T",0X1,3);
	SetRegEx(0X4CE4,"T",0X1,3);
	SetRegEx(0X4D16,"T",0X1,3);
	SetRegEx(0X4D44,"T",0X1,3);
	SetRegEx(0X4D50,"T",0X1,3);
	SetRegEx(0X4D6C,"T",0X1,3);
	SetRegEx(0X4D72,"T",0X1,3);
	SetRegEx(0X4DB4,"T",0X1,3);
	SetRegEx(0X4DC2,"T",0X1,3);
	SetRegEx(0X4DFC,"T",0X1,3);
	SetRegEx(0X4E18,"T",0X1,3);
	SetRegEx(0X4E3A,"T",0X1,3);
	SetRegEx(0X4E3E,"T",0X1,3);
	SetRegEx(0X4E7C,"T",0X1,3);
	SetRegEx(0X4E96,"T",0X1,3);
	SetRegEx(0X4EB0,"T",0X1,3);
	SetRegEx(0X4ED2,"T",0X1,3);
	SetRegEx(0X4ED4,"T",0X1,3);
	SetRegEx(0X4EF0,"T",0X1,3);
	SetRegEx(0X4EFE,"T",0X1,3);
	SetRegEx(0X4F02,"T",0X1,3);
	SetRegEx(0X4F4A,"T",0X1,3);
	SetRegEx(0X4F64,"T",0X1,3);
	SetRegEx(0X4F7E,"T",0X1,3);
	SetRegEx(0X4FA2,"T",0X1,3);
	SetRegEx(0X4FA4,"T",0X1,3);
	SetRegEx(0X4FC0,"T",0X1,3);
	SetRegEx(0X4FCE,"T",0X1,3);
	SetRegEx(0X4FD2,"T",0X1,3);
	SetRegEx(0X500C,"T",0X1,3);
	SetRegEx(0X5030,"T",0X1,3);
	SetRegEx(0X5032,"T",0X1,3);
	SetRegEx(0X5038,"T",0X1,3);
	SetRegEx(0X503E,"T",0X1,3);
	SetRegEx(0X5044,"T",0X1,3);
	SetRegEx(0X504A,"T",0X1,3);
	SetRegEx(0X5050,"T",0X1,3);
	SetRegEx(0X5056,"T",0X1,3);
	SetRegEx(0X505C,"T",0X1,3);
	SetRegEx(0X5062,"T",0X1,3);
	SetRegEx(0X5088,"T",0X1,3);
	SetRegEx(0X50B4,"T",0X1,3);
	SetRegEx(0X50B8,"T",0X1,3);
	SetRegEx(0X50C0,"T",0X1,3);
	SetRegEx(0X50D6,"T",0X1,3);
	SetRegEx(0X50F2,"T",0X1,3);
	SetRegEx(0X5102,"T",0X1,3);
	SetRegEx(0X5106,"T",0X1,3);
	SetRegEx(0X511E,"T",0X1,3);
	SetRegEx(0X5124,"T",0X1,3);
	SetRegEx(0X5150,"T",0X1,3);
	SetRegEx(0X5164,"T",0X1,3);
	SetRegEx(0X5184,"T",0X1,3);
	SetRegEx(0X5186,"T",0X1,3);
	SetRegEx(0X518A,"T",0X1,3);
	SetRegEx(0X51B4,"T",0X1,3);
	SetRegEx(0X51E6,"T",0X1,3);
	SetRegEx(0X5208,"T",0X1,3);
	SetRegEx(0X520C,"T",0X1,3);
	SetRegEx(0X5212,"T",0X1,3);
	SetRegEx(0X5216,"T",0X1,3);
	SetRegEx(0X5218,"T",0X1,3);
	SetRegEx(0X5236,"T",0X1,3);
	SetRegEx(0X5264,"T",0X1,3);
	SetRegEx(0X5266,"T",0X1,3);
	SetRegEx(0X5284,"T",0X1,3);
	SetRegEx(0X5294,"T",0X1,3);
	SetRegEx(0X52A6,"T",0X1,3);
	SetRegEx(0X52AA,"T",0X1,3);
	SetRegEx(0X52C2,"T",0X1,3);
	SetRegEx(0X52E6,"T",0X1,3);
	SetRegEx(0X52E8,"T",0X1,3);
	SetRegEx(0X52EA,"T",0X1,3);
	SetRegEx(0X5346,"T",0X1,3);
	SetRegEx(0X5358,"T",0X1,3);
	SetRegEx(0X535E,"T",0X1,3);
	SetRegEx(0X5368,"T",0X1,3);
	SetRegEx(0X5376,"T",0X1,3);
	SetRegEx(0X538C,"T",0X1,3);
	SetRegEx(0X5390,"T",0X1,3);
	SetRegEx(0X539C,"T",0X1,3);
	SetRegEx(0X53B6,"T",0X1,3);
	SetRegEx(0X53BA,"T",0X1,3);
	SetRegEx(0X53C8,"T",0X1,3);
	SetRegEx(0X5406,"T",0X1,3);
	SetRegEx(0X5408,"T",0X1,3);
	SetRegEx(0X5414,"T",0X1,3);
	SetRegEx(0X5416,"T",0X1,3);
	SetRegEx(0X5428,"T",0X1,3);
	SetRegEx(0X542A,"T",0X1,3);
	SetRegEx(0X5438,"T",0X1,3);
	SetRegEx(0X543E,"T",0X1,3);
	SetRegEx(0X5444,"T",0X1,3);
	SetRegEx(0X544A,"T",0X1,3);
	SetRegEx(0X5450,"T",0X1,3);
	SetRegEx(0X5456,"T",0X1,3);
	SetRegEx(0X545A,"T",0X1,3);
	SetRegEx(0X5470,"T",0X1,3);
	SetRegEx(0X54A6,"T",0X1,3);
	SetRegEx(0X54C8,"T",0X1,3);
	SetRegEx(0X54E0,"T",0X1,3);
	SetRegEx(0X54F2,"T",0X1,3);
	SetRegEx(0X54F4,"T",0X1,3);
	SetRegEx(0X5500,"T",0X1,3);
	SetRegEx(0X5532,"T",0X1,3);
	SetRegEx(0X555C,"T",0X1,3);
	SetRegEx(0X558E,"T",0X1,3);
	SetRegEx(0X55B0,"T",0X1,3);
	SetRegEx(0X55B6,"T",0X1,3);
	SetRegEx(0X55D0,"T",0X1,3);
	SetRegEx(0X55D2,"T",0X1,3);
	SetRegEx(0X55FA,"T",0X1,3);
	SetRegEx(0X5614,"T",0X1,3);
	SetRegEx(0X5622,"T",0X1,3);
	SetRegEx(0X5624,"T",0X1,3);
	SetRegEx(0X5630,"T",0X1,3);
	SetRegEx(0X5692,"T",0X1,3);
	SetRegEx(0X5696,"T",0X1,3);
	SetRegEx(0X56BC,"T",0X1,3);
	SetRegEx(0X56C4,"T",0X1,3);
	SetRegEx(0X56CC,"T",0X1,3);
	SetRegEx(0X56D2,"T",0X1,3);
	SetRegEx(0X56D8,"T",0X1,3);
	SetRegEx(0X56DE,"T",0X1,3);
	SetRegEx(0X56E4,"T",0X1,3);
	SetRegEx(0X5704,"T",0X1,3);
	SetRegEx(0X571C,"T",0X1,3);
	SetRegEx(0X5762,"T",0X1,3);
	SetRegEx(0X5768,"T",0X1,3);
	SetRegEx(0X576E,"T",0X1,3);
	SetRegEx(0X5774,"T",0X1,3);
	SetRegEx(0X577A,"T",0X1,3);
	SetRegEx(0X5780,"T",0X1,3);
	SetRegEx(0X5792,"T",0X1,3);
	SetRegEx(0X579A,"T",0X1,3);
	SetRegEx(0X57B8,"T",0X1,3);
	SetRegEx(0X57BA,"T",0X1,3);
	SetRegEx(0X57BC,"T",0X1,3);
	SetRegEx(0X57C0,"T",0X1,3);
	SetRegEx(0X57D0,"T",0X1,3);
	SetRegEx(0X57E2,"T",0X1,3);
	SetRegEx(0X580A,"T",0X1,3);
	SetRegEx(0X5836,"T",0X1,3);
	SetRegEx(0X5848,"T",0X1,3);
	SetRegEx(0X584A,"T",0X1,3);
	SetRegEx(0X584E,"T",0X1,3);
	SetRegEx(0X58BC,"T",0X1,3);
	SetRegEx(0X58C0,"T",0X1,3);
	SetRegEx(0X593C,"T",0X1,3);
	SetRegEx(0X5952,"T",0X1,3);
	SetRegEx(0X5958,"T",0X1,3);
	SetRegEx(0X596E,"T",0X1,3);
	SetRegEx(0X59A2,"T",0X1,3);
	SetRegEx(0X59AC,"T",0X1,3);
	SetRegEx(0X59B4,"T",0X1,3);
	SetRegEx(0X59BC,"T",0X1,3);
	SetRegEx(0X59C4,"T",0X1,3);
	SetRegEx(0X5A34,"T",0X1,3);
	SetRegEx(0X5A36,"T",0X1,3);
	SetRegEx(0X5A3C,"T",0X1,3);
	SetRegEx(0X5A78,"T",0X1,3);
	SetRegEx(0X5A80,"T",0X1,3);
	SetRegEx(0X5A8C,"T",0X1,3);
	SetRegEx(0X5A8E,"T",0X1,3);
	SetRegEx(0X5A96,"T",0X1,3);
	SetRegEx(0X5ABC,"T",0X1,3);
	SetRegEx(0X5ADC,"T",0X1,3);
	SetRegEx(0X5B14,"T",0X1,3);
	SetRegEx(0X5B18,"T",0X1,3);
	SetRegEx(0X5B54,"T",0X1,3);
	SetRegEx(0X5B58,"T",0X1,3);
	SetRegEx(0X5BAA,"T",0X1,3);
	SetRegEx(0X5BB0,"T",0X1,3);
	SetRegEx(0X5BCC,"T",0X1,3);
	SetRegEx(0X5BE2,"T",0X1,3);
	SetRegEx(0X5BE6,"T",0X1,3);
	SetRegEx(0X5BF4,"T",0X1,3);
	SetRegEx(0X5BFA,"T",0X1,3);
	SetRegEx(0X5BFE,"T",0X1,3);
	SetRegEx(0X5C22,"T",0X1,3);
	SetRegEx(0X5C30,"T",0X1,3);
	SetRegEx(0X5C42,"T",0X1,3);
	SetRegEx(0X5C5A,"T",0X1,3);
	SetRegEx(0X5C66,"T",0X1,3);
	SetRegEx(0X5C82,"T",0X1,3);
	SetRegEx(0X5CB6,"T",0X1,3);
	SetRegEx(0X5CBE,"T",0X1,3);
	SetRegEx(0X5CCA,"T",0X1,3);
	SetRegEx(0X5CDA,"T",0X1,3);
	SetRegEx(0X5D18,"T",0X1,3);
	SetRegEx(0X5D28,"T",0X1,3);
	SetRegEx(0X5D2A,"T",0X1,3);
	SetRegEx(0X5D68,"T",0X1,3);
	SetRegEx(0X5D6C,"T",0X1,3);
	SetRegEx(0X5DC2,"T",0X1,3);
	SetRegEx(0X5DC8,"T",0X1,3);
	SetRegEx(0X5E60,"T",0X1,3);
	SetRegEx(0X5E96,"T",0X1,3);
	SetRegEx(0X5EAC,"T",0X1,3);
	SetRegEx(0X5EB0,"T",0X1,3);
	SetRegEx(0X5F0C,"T",0X1,3);
	SetRegEx(0X5F9E,"T",0X1,3);
	SetRegEx(0X5FCA,"T",0X1,3);
	SetRegEx(0X6048,"T",0X1,3);
	SetRegEx(0X604C,"T",0X1,3);
	SetRegEx(0X609A,"T",0X1,3);
	SetRegEx(0X60B2,"T",0X1,3);
	SetRegEx(0X60B6,"T",0X1,3);
	SetRegEx(0X60D6,"T",0X1,3);
	SetRegEx(0X6104,"T",0X1,3);
	SetRegEx(0X6138,"T",0X1,3);
	SetRegEx(0X614E,"T",0X1,3);
	SetRegEx(0X6160,"T",0X1,3);
	SetRegEx(0X6172,"T",0X1,3);
	SetRegEx(0X6184,"T",0X1,3);
	SetRegEx(0X6196,"T",0X1,3);
	SetRegEx(0X61A8,"T",0X1,3);
	SetRegEx(0X61BC,"T",0X1,3);
	SetRegEx(0X61FE,"T",0X1,3);
	SetRegEx(0X6226,"T",0X1,3);
	SetRegEx(0X6256,"T",0X1,3);
	SetRegEx(0X62AE,"T",0X1,3);
	SetRegEx(0X62C4,"T",0X1,3);
	SetRegEx(0X62D6,"T",0X1,3);
	SetRegEx(0X62EC,"T",0X1,3);
	SetRegEx(0X6304,"T",0X1,3);
	SetRegEx(0X631E,"T",0X1,3);
	SetRegEx(0X6368,"T",0X1,3);
	SetRegEx(0X63AA,"T",0X1,3);
	SetRegEx(0X63AC,"T",0X1,3);
	SetRegEx(0X63E6,"T",0X1,3);
	SetRegEx(0X640A,"T",0X1,3);
	SetRegEx(0X642E,"T",0X1,3);
	SetRegEx(0X6436,"T",0X1,3);
	SetRegEx(0X6438,"T",0X1,3);
	SetRegEx(0X643C,"T",0X1,3);
	SetRegEx(0X6452,"T",0X1,3);
	SetRegEx(0X6482,"T",0X1,3);
	SetRegEx(0X6490,"T",0X1,3);
	SetRegEx(0X64A4,"T",0X1,3);
	SetRegEx(0X64AC,"T",0X1,3);
	SetRegEx(0X64C2,"T",0X1,3);
	SetRegEx(0X64CA,"T",0X1,3);
	SetRegEx(0X64FE,"T",0X1,3);
	SetRegEx(0X6510,"T",0X1,3);
	SetRegEx(0X652C,"T",0X1,3);
	SetRegEx(0X6538,"T",0X1,3);
	SetRegEx(0X654E,"T",0X1,3);
	SetRegEx(0X6552,"T",0X1,3);
	SetRegEx(0X6588,"T",0X1,3);
	SetRegEx(0X659E,"T",0X1,3);
	SetRegEx(0X65BA,"T",0X1,3);
	SetRegEx(0X65C6,"T",0X1,3);
	SetRegEx(0X65DC,"T",0X1,3);
	SetRegEx(0X65E2,"T",0X1,3);
	SetRegEx(0X6612,"T",0X1,3);
	SetRegEx(0X6624,"T",0X1,3);
	SetRegEx(0X663C,"T",0X1,3);
	SetRegEx(0X6644,"T",0X1,3);
	SetRegEx(0X665A,"T",0X1,3);
	SetRegEx(0X665C,"T",0X1,3);
	SetRegEx(0X6672,"T",0X1,3);
	SetRegEx(0X668C,"T",0X1,3);
	SetRegEx(0X66C6,"T",0X1,3);
	SetRegEx(0X66D8,"T",0X1,3);
	SetRegEx(0X6724,"T",0X1,3);
	SetRegEx(0X672E,"T",0X1,3);
	SetRegEx(0X673A,"T",0X1,3);
	SetRegEx(0X6750,"T",0X1,3);
	SetRegEx(0X6754,"T",0X1,3);
	SetRegEx(0X676C,"T",0X1,3);
	SetRegEx(0X677E,"T",0X1,3);
	SetRegEx(0X67A8,"T",0X1,3);
	SetRegEx(0X67B0,"T",0X1,3);
	SetRegEx(0X67BA,"T",0X1,3);
	SetRegEx(0X67C0,"T",0X1,3);
	SetRegEx(0X67C6,"T",0X1,3);
	SetRegEx(0X67CC,"T",0X1,3);
	SetRegEx(0X67DC,"T",0X1,3);
	SetRegEx(0X67EC,"T",0X1,3);
	SetRegEx(0X6804,"T",0X1,3);
	SetRegEx(0X6806,"T",0X1,3);
	SetRegEx(0X6816,"T",0X1,3);
	SetRegEx(0X6820,"T",0X1,3);
	SetRegEx(0X684E,"T",0X1,3);
	SetRegEx(0X6852,"T",0X1,3);
	SetRegEx(0X6870,"T",0X1,3);
	SetRegEx(0X6874,"T",0X1,3);
	SetRegEx(0X68CA,"T",0X1,3);
	SetRegEx(0X68F4,"T",0X1,3);
	SetRegEx(0X6910,"T",0X1,3);
	SetRegEx(0X695C,"T",0X1,3);
	SetRegEx(0X6962,"T",0X1,3);
	SetRegEx(0X697C,"T",0X1,3);
	SetRegEx(0X699A,"T",0X1,3);
	SetRegEx(0X69A4,"T",0X1,3);
	SetRegEx(0X69A8,"T",0X1,3);
	SetRegEx(0X69E2,"T",0X1,3);
	SetRegEx(0X69F8,"T",0X1,3);
	SetRegEx(0X6A14,"T",0X1,3);
	SetRegEx(0X6A20,"T",0X1,3);
	SetRegEx(0X6A36,"T",0X1,3);
	SetRegEx(0X6A38,"T",0X1,3);
	SetRegEx(0X6A66,"T",0X1,3);
	SetRegEx(0X6A8E,"T",0X1,3);
	SetRegEx(0X6AA4,"T",0X1,3);
	SetRegEx(0X6AC0,"T",0X1,3);
	SetRegEx(0X6AE6,"T",0X1,3);
	SetRegEx(0X6AFA,"T",0X1,3);
	SetRegEx(0X6B04,"T",0X1,3);
	SetRegEx(0X6B0E,"T",0X1,3);
	SetRegEx(0X6B12,"T",0X1,3);
	SetRegEx(0X6B14,"T",0X1,3);
	SetRegEx(0X6B1C,"T",0X1,3);
	SetRegEx(0X6B7C,"T",0X1,3);
	SetRegEx(0X6B7E,"T",0X1,3);
	SetRegEx(0X6B8E,"T",0X1,3);
	SetRegEx(0X6BA2,"T",0X1,3);
	SetRegEx(0X6BAE,"T",0X1,3);
	SetRegEx(0X6BBE,"T",0X1,3);
	SetRegEx(0X6BF4,"T",0X1,3);
	SetRegEx(0X6C06,"T",0X1,3);
	SetRegEx(0X6C08,"T",0X1,3);
	SetRegEx(0X6C12,"T",0X1,3);
	SetRegEx(0X6C1C,"T",0X1,3);
	SetRegEx(0X6C2E,"T",0X1,3);
	SetRegEx(0X6C30,"T",0X1,3);
	SetRegEx(0X6C3A,"T",0X1,3);
	SetRegEx(0X6C44,"T",0X1,3);
	SetRegEx(0X6C56,"T",0X1,3);
	SetRegEx(0X6C58,"T",0X1,3);
	SetRegEx(0X6C62,"T",0X1,3);
	SetRegEx(0X6C6C,"T",0X1,3);
	SetRegEx(0X6C7E,"T",0X1,3);
	SetRegEx(0X6C88,"T",0X1,3);
	SetRegEx(0X6C98,"T",0X1,3);
	SetRegEx(0X6CA0,"T",0X1,3);
	SetRegEx(0X6CC8,"T",0X1,3);
	SetRegEx(0X6CD6,"T",0X1,3);
	SetRegEx(0X6CDA,"T",0X1,3);
	SetRegEx(0X6CF6,"T",0X1,3);
	SetRegEx(0X6D20,"T",0X1,3);
	SetRegEx(0X6D32,"T",0X1,3);
	SetRegEx(0X6D46,"T",0X1,3);
	SetRegEx(0X6D66,"T",0X1,3);
	SetRegEx(0X6D82,"T",0X1,3);
	SetRegEx(0X6DC0,"T",0X1,3);
	SetRegEx(0X6DC8,"T",0X1,3);
	SetRegEx(0X6DCC,"T",0X1,3);
	SetRegEx(0X6DF2,"T",0X1,3);
	SetRegEx(0X6DFA,"T",0X1,3);
	SetRegEx(0X6DFE,"T",0X1,3);
	SetRegEx(0X6E00,"T",0X1,3);
	SetRegEx(0X6E0E,"T",0X1,3);
	SetRegEx(0X6E12,"T",0X1,3);
	SetRegEx(0X6E8C,"T",0X1,3);
	SetRegEx(0X6EE2,"T",0X1,3);
	SetRegEx(0X6EE8,"T",0X1,3);
	SetRegEx(0X6EF2,"T",0X1,3);
	SetRegEx(0X6EFA,"T",0X1,3);
	SetRegEx(0X6F00,"T",0X1,3);
	SetRegEx(0X6F1A,"T",0X1,3);
	SetRegEx(0X6F1E,"T",0X1,3);
	SetRegEx(0X6F20,"T",0X1,3);
	SetRegEx(0X6F3A,"T",0X1,3);
	SetRegEx(0X6F3E,"T",0X1,3);
	SetRegEx(0X6F40,"T",0X1,3);
	SetRegEx(0X6F5C,"T",0X1,3);
	SetRegEx(0X6F60,"T",0X1,3);
	SetRegEx(0X6F62,"T",0X1,3);
	SetRegEx(0X6F7C,"T",0X1,3);
	SetRegEx(0X6F7E,"T",0X1,3);
	SetRegEx(0X6F80,"T",0X1,3);
	SetRegEx(0X6F84,"T",0X1,3);
	SetRegEx(0X6F86,"T",0X1,3);
	SetRegEx(0X6F8A,"T",0X1,3);
	SetRegEx(0X6F8C,"T",0X1,3);
	SetRegEx(0X6F92,"T",0X1,3);
	SetRegEx(0X6F9A,"T",0X1,3);
	SetRegEx(0X6FA0,"T",0X1,3);
	SetRegEx(0X6FB4,"T",0X1,3);
	SetRegEx(0X6FB8,"T",0X1,3);
	SetRegEx(0X6FBE,"T",0X1,3);
	SetRegEx(0X6FC4,"T",0X1,3);
	SetRegEx(0X6FEC,"T",0X1,3);
	SetRegEx(0X6FF6,"T",0X1,3);
	SetRegEx(0X6FFE,"T",0X1,3);
	SetRegEx(0X7008,"T",0X1,3);
	SetRegEx(0X700C,"T",0X1,3);
	SetRegEx(0X7014,"T",0X1,3);
	SetRegEx(0X7032,"T",0X1,3);
	SetRegEx(0X706C,"T",0X1,3);
	SetRegEx(0X7078,"T",0X1,3);
	SetRegEx(0X707A,"T",0X1,3);
	SetRegEx(0X707C,"T",0X1,3);
	SetRegEx(0X7082,"T",0X1,3);
	SetRegEx(0X7090,"T",0X1,3);
	SetRegEx(0X70B4,"T",0X1,3);
	SetRegEx(0X70BA,"T",0X1,3);
	SetRegEx(0X70C4,"T",0X1,3);
	SetRegEx(0X70CA,"T",0X1,3);
	SetRegEx(0X70D6,"T",0X1,3);
	SetRegEx(0X70D8,"T",0X1,3);
	SetRegEx(0X70DC,"T",0X1,3);
	SetRegEx(0X70E2,"T",0X1,3);
	SetRegEx(0X7104,"T",0X1,3);
	SetRegEx(0X7106,"T",0X1,3);
	SetRegEx(0X710E,"T",0X1,3);
	SetRegEx(0X7116,"T",0X1,3);
	SetRegEx(0X7122,"T",0X1,3);
	SetRegEx(0X712E,"T",0X1,3);
	SetRegEx(0X713A,"T",0X1,3);
	SetRegEx(0X7146,"T",0X1,3);
	SetRegEx(0X714C,"T",0X1,3);
	SetRegEx(0X7170,"T",0X1,3);
	SetRegEx(0X7172,"T",0X1,3);
	SetRegEx(0X717C,"T",0X1,3);
	SetRegEx(0X7184,"T",0X1,3);
	SetRegEx(0X7192,"T",0X1,3);
	SetRegEx(0X71A0,"T",0X1,3);
	SetRegEx(0X71AE,"T",0X1,3);
	SetRegEx(0X71BA,"T",0X1,3);
	SetRegEx(0X71D8,"T",0X1,3);
	SetRegEx(0X71E0,"T",0X1,3);
	SetRegEx(0X71FE,"T",0X1,3);
	SetRegEx(0X7204,"T",0X1,3);
	SetRegEx(0X7206,"T",0X1,3);
	SetRegEx(0X720C,"T",0X1,3);
	SetRegEx(0X720E,"T",0X1,3);
	SetRegEx(0X734A,"T",0X1,3);
	SetRegEx(0X73B8,"T",0X1,3);
	SetRegEx(0X73BA,"T",0X1,3);
	SetRegEx(0X73DE,"T",0X1,3);
	SetRegEx(0X73E0,"T",0X1,3);
	SetRegEx(0X7400,"T",0X1,3);
	SetRegEx(0X742C,"T",0X1,3);
	SetRegEx(0X7430,"T",0X1,3);
	SetRegEx(0X743A,"T",0X1,3);
	SetRegEx(0X7456,"T",0X1,3);
	SetRegEx(0X746C,"T",0X1,3);
	SetRegEx(0X747E,"T",0X1,3);
	SetRegEx(0X7484,"T",0X1,3);
	SetRegEx(0X7486,"T",0X1,3);
	SetRegEx(0X748A,"T",0X1,3);
	SetRegEx(0X7498,"T",0X1,3);
	SetRegEx(0X74A8,"T",0X1,3);
	SetRegEx(0X74BC,"T",0X1,3);
	SetRegEx(0X74D0,"T",0X1,3);
	SetRegEx(0X74D2,"T",0X1,3);
	SetRegEx(0X7506,"T",0X1,3);
	SetRegEx(0X7562,"T",0X1,3);
	SetRegEx(0X7590,"T",0X1,3);
	SetRegEx(0X7596,"T",0X1,3);
	SetRegEx(0X7598,"T",0X1,3);
	SetRegEx(0X75B4,"T",0X1,3);
	SetRegEx(0X75F2,"T",0X1,3);
	SetRegEx(0X769E,"T",0X1,3);
	SetRegEx(0X76A0,"T",0X1,3);
	SetRegEx(0X76C0,"T",0X1,3);
	SetRegEx(0X772E,"T",0X1,3);
	SetRegEx(0X773A,"T",0X1,3);
	SetRegEx(0X774E,"T",0X1,3);
	SetRegEx(0X7764,"T",0X1,3);
	SetRegEx(0X7776,"T",0X1,3);
	SetRegEx(0X7786,"T",0X1,3);
	SetRegEx(0X778C,"T",0X1,3);
	SetRegEx(0X77DE,"T",0X1,3);
	SetRegEx(0X77F6,"T",0X1,3);
	SetRegEx(0X780E,"T",0X1,3);
	SetRegEx(0X783C,"T",0X1,3);
	SetRegEx(0X783E,"T",0X1,3);
	SetRegEx(0X7842,"T",0X1,3);
	SetRegEx(0X786A,"T",0X1,3);
	SetRegEx(0X7886,"T",0X1,3);
	SetRegEx(0X78BA,"T",0X1,3);
	SetRegEx(0X78CE,"T",0X1,3);
	SetRegEx(0X78D8,"T",0X1,3);
	SetRegEx(0X78DA,"T",0X1,3);
	SetRegEx(0X78DC,"T",0X1,3);
	SetRegEx(0X78DE,"T",0X1,3);
	SetRegEx(0X7920,"T",0X1,3);
	SetRegEx(0X7924,"T",0X1,3);
	SetRegEx(0X7926,"T",0X1,3);
	SetRegEx(0X7930,"T",0X1,3);
	SetRegEx(0X7948,"T",0X1,3);
	SetRegEx(0X795C,"T",0X1,3);
	SetRegEx(0X795E,"T",0X1,3);
	SetRegEx(0X7966,"T",0X1,3);
	SetRegEx(0X796A,"T",0X1,3);
	SetRegEx(0X7982,"T",0X1,3);
	SetRegEx(0X7996,"T",0X1,3);
	SetRegEx(0X7998,"T",0X1,3);
	SetRegEx(0X79A4,"T",0X1,3);
	SetRegEx(0X79B6,"T",0X1,3);
	SetRegEx(0X79C4,"T",0X1,3);
	SetRegEx(0X79E2,"T",0X1,3);
	SetRegEx(0X79FE,"T",0X1,3);
	SetRegEx(0X7A02,"T",0X1,3);
	SetRegEx(0X7A20,"T",0X1,3);
	SetRegEx(0X7A2A,"T",0X1,3);
	SetRegEx(0X7A30,"T",0X1,3);
	SetRegEx(0X7A3A,"T",0X1,3);
	SetRegEx(0X7A4A,"T",0X1,3);
	SetRegEx(0X7A72,"T",0X1,3);
	SetRegEx(0X7AA2,"T",0X1,3);
	SetRegEx(0X7ABE,"T",0X1,3);
	SetRegEx(0X7AD0,"T",0X1,3);
	SetRegEx(0X7AE0,"T",0X1,3);
	SetRegEx(0X7AE6,"T",0X1,3);
	SetRegEx(0X7B04,"T",0X1,3);
	SetRegEx(0X7B1C,"T",0X1,3);
	SetRegEx(0X7B1E,"T",0X1,3);
	SetRegEx(0X7B46,"T",0X1,3);
	SetRegEx(0X7B5C,"T",0X1,3);
	SetRegEx(0X7B6E,"T",0X1,3);
	SetRegEx(0X7BC6,"T",0X1,3);
	SetRegEx(0X7BC8,"T",0X1,3);
	SetRegEx(0X7BCA,"T",0X1,3);
	SetRegEx(0X7C44,"T",0X1,3);
	SetRegEx(0X7C56,"T",0X1,3);
	SetRegEx(0X7C66,"T",0X1,3);
	SetRegEx(0X7CC4,"T",0X1,3);
	SetRegEx(0X7CC6,"T",0X1,3);
	SetRegEx(0X7D20,"T",0X1,3);
	SetRegEx(0X7D4A,"T",0X1,3);
	SetRegEx(0X7D4C,"T",0X1,3);
	SetRegEx(0X7D58,"T",0X1,3);
	SetRegEx(0X7DCA,"T",0X1,3);
	SetRegEx(0X7DD4,"T",0X1,3);
	SetRegEx(0X7E02,"T",0X1,3);
	SetRegEx(0X7E70,"T",0X1,3);
	SetRegEx(0X7E74,"T",0X1,3);
	SetRegEx(0X7E76,"T",0X1,3);
	SetRegEx(0X7E94,"T",0X1,3);
	SetRegEx(0X7E9C,"T",0X1,3);
	SetRegEx(0X7E9E,"T",0X1,3);
	SetRegEx(0X7EA8,"T",0X1,3);
	SetRegEx(0X7F2E,"T",0X1,3);
	SetRegEx(0X7F32,"T",0X1,3);
	SetRegEx(0X7F36,"T",0X1,3);
	SetRegEx(0X7F38,"T",0X1,3);
	SetRegEx(0X7F3E,"T",0X1,3);
	SetRegEx(0X7F42,"T",0X1,3);
	SetRegEx(0X7F58,"T",0X1,3);
	SetRegEx(0X7F64,"T",0X1,3);
	SetRegEx(0X7F7E,"T",0X1,3);
	SetRegEx(0X7F86,"T",0X1,3);
	SetRegEx(0X7F8C,"T",0X1,3);
	SetRegEx(0X7F92,"T",0X1,3);
	SetRegEx(0X7F96,"T",0X1,3);
	SetRegEx(0X7F9E,"T",0X1,3);
	SetRegEx(0X7FAC,"T",0X1,3);
	SetRegEx(0X7FB8,"T",0X1,3);
	SetRegEx(0X7FDE,"T",0X1,3);
	SetRegEx(0X8004,"T",0X1,3);
	SetRegEx(0X800E,"T",0X1,3);
	SetRegEx(0X8030,"T",0X1,3);
	SetRegEx(0X8034,"T",0X1,3);
	SetRegEx(0X803E,"T",0X1,3);
	SetRegEx(0X8064,"T",0X1,3);
	SetRegEx(0X8070,"T",0X1,3);
	SetRegEx(0X8072,"T",0X1,3);
	SetRegEx(0X8086,"T",0X1,3);
	SetRegEx(0X8108,"T",0X1,3);
	SetRegEx(0X810E,"T",0X1,3);
	SetRegEx(0X811E,"T",0X1,3);
	SetRegEx(0X812A,"T",0X1,3);
	SetRegEx(0X8134,"T",0X1,3);
	SetRegEx(0X8144,"T",0X1,3);
	SetRegEx(0X815C,"T",0X1,3);
	SetRegEx(0X81A6,"T",0X1,3);
	SetRegEx(0X81BA,"T",0X1,3);
	SetRegEx(0X81C2,"T",0X1,3);
	SetRegEx(0X81C8,"T",0X1,3);
	SetRegEx(0X81F0,"T",0X1,3);
	SetRegEx(0X81FC,"T",0X1,3);
	SetRegEx(0X8260,"T",0X1,3);
	SetRegEx(0X8266,"T",0X1,3);
	SetRegEx(0X826E,"T",0X1,3);
	SetRegEx(0X8276,"T",0X1,3);
	SetRegEx(0X82BA,"T",0X1,3);
	SetRegEx(0X82F4,"T",0X1,3);
	SetRegEx(0X82FC,"T",0X1,3);
	SetRegEx(0X830C,"T",0X1,3);
	SetRegEx(0X8314,"T",0X1,3);
	SetRegEx(0X831C,"T",0X1,3);
	SetRegEx(0X8336,"T",0X1,3);
	SetRegEx(0X833A,"T",0X1,3);
	SetRegEx(0X8342,"T",0X1,3);
	SetRegEx(0X834E,"T",0X1,3);
	SetRegEx(0X8374,"T",0X1,3);
	SetRegEx(0X8394,"T",0X1,3);
	SetRegEx(0X83A2,"T",0X1,3);
	SetRegEx(0X83A8,"T",0X1,3);
	SetRegEx(0X83AA,"T",0X1,3);
	SetRegEx(0X83B0,"T",0X1,3);
	SetRegEx(0X83BE,"T",0X1,3);
	SetRegEx(0X83E6,"T",0X1,3);
	SetRegEx(0X8400,"T",0X1,3);
	SetRegEx(0X8418,"T",0X1,3);
	SetRegEx(0X8432,"T",0X1,3);
	SetRegEx(0X8464,"T",0X1,3);
	SetRegEx(0X84DC,"T",0X1,3);
	SetRegEx(0X84DE,"T",0X1,3);
	SetRegEx(0X84E2,"T",0X1,3);
	SetRegEx(0X84F4,"T",0X1,3);
	SetRegEx(0X855C,"T",0X1,3);
	SetRegEx(0X8560,"T",0X1,3);
	SetRegEx(0X85BA,"T",0X1,3);
	SetRegEx(0X85BC,"T",0X1,3);
	SetRegEx(0X85C4,"T",0X1,3);
	SetRegEx(0X85D0,"T",0X1,3);
	SetRegEx(0X8612,"T",0X1,3);
	SetRegEx(0X8640,"T",0X1,3);
	SetRegEx(0X8660,"T",0X1,3);
	SetRegEx(0X867C,"T",0X1,3);
	SetRegEx(0X8688,"T",0X1,3);
	SetRegEx(0X8696,"T",0X1,3);
	SetRegEx(0X869A,"T",0X1,3);
	SetRegEx(0X86D8,"T",0X1,3);
	SetRegEx(0X8716,"T",0X1,3);
	SetRegEx(0X871C,"T",0X1,3);
	SetRegEx(0X872E,"T",0X1,3);
	SetRegEx(0X8730,"T",0X1,3);
	SetRegEx(0X8734,"T",0X1,3);
	SetRegEx(0X873E,"T",0X1,3);
	SetRegEx(0X874A,"T",0X1,3);
	SetRegEx(0X876A,"T",0X1,3);
	SetRegEx(0X8790,"T",0X1,3);
	SetRegEx(0X8796,"T",0X1,3);
	SetRegEx(0X87BA,"T",0X1,3);
	SetRegEx(0X87C0,"T",0X1,3);
	SetRegEx(0X87FA,"T",0X1,3);
	SetRegEx(0X8820,"T",0X1,3);
	SetRegEx(0X8848,"T",0X1,3);
	SetRegEx(0X884A,"T",0X1,3);
	SetRegEx(0X886C,"T",0X1,3);
	SetRegEx(0X889A,"T",0X1,3);
	SetRegEx(0X88A6,"T",0X1,3);
	SetRegEx(0X88D0,"T",0X1,3);
	SetRegEx(0X88FC,"T",0X1,3);
	SetRegEx(0X890E,"T",0X1,3);
	SetRegEx(0X8926,"T",0X1,3);
	SetRegEx(0X8940,"T",0X1,3);
	SetRegEx(0X8942,"T",0X1,3);
	SetRegEx(0X8954,"T",0X1,3);
	SetRegEx(0X8964,"T",0X1,3);
	SetRegEx(0X896E,"T",0X1,3);
	SetRegEx(0X8976,"T",0X1,3);
	SetRegEx(0X8988,"T",0X1,3);
	SetRegEx(0X8994,"T",0X1,3);
	SetRegEx(0X89C8,"T",0X1,3);
	SetRegEx(0X89D0,"T",0X1,3);
	SetRegEx(0X89DA,"T",0X1,3);
	SetRegEx(0X89F2,"T",0X1,3);
	SetRegEx(0X8A58,"T",0X1,3);
	SetRegEx(0X8AC0,"T",0X1,3);
	SetRegEx(0X8AC4,"T",0X1,3);
	SetRegEx(0X8AC8,"T",0X1,3);
	SetRegEx(0X8ACC,"T",0X1,3);
	SetRegEx(0X8ACE,"T",0X1,3);
	SetRegEx(0X8AD0,"T",0X1,3);
	SetRegEx(0X8AEE,"T",0X1,3);
	SetRegEx(0X8B2A,"T",0X1,3);
	SetRegEx(0X8B74,"T",0X1,3);
	SetRegEx(0X8B76,"T",0X1,3);
	SetRegEx(0X8B7A,"T",0X1,3);
	SetRegEx(0X8B7C,"T",0X1,3);
	SetRegEx(0X8BAE,"T",0X1,3);
	SetRegEx(0X8BC2,"T",0X1,3);
	SetRegEx(0X8BC8,"T",0X1,3);
	SetRegEx(0X8BD0,"T",0X1,3);
	SetRegEx(0X8BD2,"T",0X1,3);
	SetRegEx(0X8BEC,"T",0X1,3);
	SetRegEx(0X8C1A,"T",0X1,3);
	SetRegEx(0X8C2A,"T",0X1,3);
	SetRegEx(0X8C30,"T",0X1,3);
	SetRegEx(0X8C7C,"T",0X1,3);
	SetRegEx(0X8CEA,"T",0X1,3);
	SetRegEx(0X8D00,"T",0X1,3);
	SetRegEx(0X8D06,"T",0X1,3);
	SetRegEx(0X8D14,"T",0X1,3);
	SetRegEx(0X8D8A,"T",0X1,3);
	SetRegEx(0X8DF0,"T",0X1,3);
	SetRegEx(0X8DF2,"T",0X1,3);
	SetRegEx(0X8E38,"T",0X1,3);
	SetRegEx(0X8E3A,"T",0X1,3);
	SetRegEx(0X8E88,"T",0X1,3);
	SetRegEx(0X8F10,"T",0X1,3);
	SetRegEx(0X8F12,"T",0X1,3);
	SetRegEx(0X8F40,"T",0X1,3);
	SetRegEx(0X8F9E,"T",0X1,3);
	SetRegEx(0X8FA0,"T",0X1,3);
	SetRegEx(0X8FA8,"T",0X1,3);
	SetRegEx(0X8FCA,"T",0X1,3);
	SetRegEx(0X8FCE,"T",0X1,3);
	SetRegEx(0X9016,"T",0X1,3);
	SetRegEx(0X9058,"T",0X1,3);
	SetRegEx(0X906E,"T",0X1,3);
	SetRegEx(0X9088,"T",0X1,3);
	SetRegEx(0X90A8,"T",0X1,3);
	SetRegEx(0X90C8,"T",0X1,3);
	SetRegEx(0X90CE,"T",0X1,3);
	SetRegEx(0X90F2,"T",0X1,3);
	SetRegEx(0X9118,"T",0X1,3);
	SetRegEx(0X913C,"T",0X1,3);
	SetRegEx(0X91A8,"T",0X1,3);
	SetRegEx(0X91B8,"T",0X1,3);
	SetRegEx(0X91BE,"T",0X1,3);
	SetRegEx(0X9228,"T",0X1,3);
	SetRegEx(0X922E,"T",0X1,3);
	SetRegEx(0X926A,"T",0X1,3);
	SetRegEx(0X927A,"T",0X1,3);
	SetRegEx(0X9294,"T",0X1,3);
	SetRegEx(0X92B4,"T",0X1,3);
	SetRegEx(0X92B8,"T",0X1,3);
	SetRegEx(0X92D8,"T",0X1,3);
	SetRegEx(0X92DA,"T",0X1,3);
	SetRegEx(0X92DE,"T",0X1,3);
	SetRegEx(0X9302,"T",0X1,3);
	SetRegEx(0X9328,"T",0X1,3);
	SetRegEx(0X934C,"T",0X1,3);
	SetRegEx(0X93D8,"T",0X1,3);
	SetRegEx(0X944E,"T",0X1,3);
	SetRegEx(0X94C4,"T",0X1,3);
	SetRegEx(0X9560,"T",0X1,3);
	SetRegEx(0X9596,"T",0X1,3);
	SetRegEx(0X9598,"T",0X1,3);
	SetRegEx(0X95AE,"T",0X1,3);
	SetRegEx(0X95CA,"T",0X1,3);
	SetRegEx(0X95CE,"T",0X1,3);
	SetRegEx(0X95D4,"T",0X1,3);
	SetRegEx(0X95EE,"T",0X1,3);
	SetRegEx(0X95F2,"T",0X1,3);
	SetRegEx(0X960E,"T",0X1,3);
	SetRegEx(0X9612,"T",0X1,3);
	SetRegEx(0X9660,"T",0X1,3);
	SetRegEx(0X9662,"T",0X1,3);
	SetRegEx(0X9696,"T",0X1,3);
	SetRegEx(0X96B6,"T",0X1,3);
	SetRegEx(0X9702,"T",0X1,3);
	SetRegEx(0X9704,"T",0X1,3);
	SetRegEx(0X971A,"T",0X1,3);
	SetRegEx(0X9732,"T",0X1,3);
	SetRegEx(0X973A,"T",0X1,3);
	SetRegEx(0X9772,"T",0X1,3);
	SetRegEx(0X97B2,"T",0X1,3);
	SetRegEx(0X97BC,"T",0X1,3);
	SetRegEx(0X97CA,"T",0X1,3);
	SetRegEx(0X97DA,"T",0X1,3);
	SetRegEx(0X97E8,"T",0X1,3);
	SetRegEx(0X97FA,"T",0X1,3);
	SetRegEx(0X9806,"T",0X1,3);
	SetRegEx(0X980E,"T",0X1,3);
	SetRegEx(0X9810,"T",0X1,3);
	SetRegEx(0X981E,"T",0X1,3);
	SetRegEx(0X985A,"T",0X1,3);
	SetRegEx(0X985E,"T",0X1,3);
	SetRegEx(0X987C,"T",0X1,3);
	SetRegEx(0X98F2,"T",0X1,3);
	SetRegEx(0X98F4,"T",0X1,3);
	SetRegEx(0X991A,"T",0X1,3);
	SetRegEx(0X9964,"T",0X1,3);
	SetRegEx(0X9972,"T",0X1,3);
	SetRegEx(0X9982,"T",0X1,3);
	SetRegEx(0X9984,"T",0X1,3);
	SetRegEx(0X9986,"T",0X1,3);
	SetRegEx(0X999A,"T",0X1,3);
	SetRegEx(0X99A0,"T",0X1,3);
	SetRegEx(0X99A6,"T",0X1,3);
	SetRegEx(0X99AE,"T",0X1,3);
	SetRegEx(0X99B4,"T",0X1,3);
	SetRegEx(0X99BA,"T",0X1,3);
	SetRegEx(0X99C0,"T",0X1,3);
	SetRegEx(0X99C8,"T",0X1,3);
	SetRegEx(0X99D4,"T",0X1,3);
	SetRegEx(0X99DC,"T",0X1,3);
	SetRegEx(0X9A04,"T",0X1,3);
	SetRegEx(0X9A28,"T",0X1,3);
	SetRegEx(0X9A34,"T",0X1,3);
	SetRegEx(0X9A44,"T",0X1,3);
	SetRegEx(0X9A4E,"T",0X1,3);
	SetRegEx(0X9A52,"T",0X1,3);
	SetRegEx(0X9A68,"T",0X1,3);
	SetRegEx(0X9A7A,"T",0X1,3);
	SetRegEx(0X9A9A,"T",0X1,3);
	SetRegEx(0X9AA4,"T",0X1,3);
	SetRegEx(0X9AA6,"T",0X1,3);
	SetRegEx(0X9B00,"T",0X1,3);
	SetRegEx(0X9B08,"T",0X1,3);
	SetRegEx(0X9B1C,"T",0X1,3);
	SetRegEx(0X9B36,"T",0X1,3);
	SetRegEx(0X9B3A,"T",0X1,3);
	SetRegEx(0X9B46,"T",0X1,3);
	SetRegEx(0X9B7C,"T",0X1,3);
	SetRegEx(0X9B90,"T",0X1,3);
	SetRegEx(0X9B98,"T",0X1,3);
	SetRegEx(0X9B9E,"T",0X1,3);
	SetRegEx(0X9BA4,"T",0X1,3);
	SetRegEx(0X9BB4,"T",0X1,3);
	SetRegEx(0X9BB8,"T",0X1,3);
	SetRegEx(0X9BC8,"T",0X1,3);
	SetRegEx(0X9BE6,"T",0X1,3);
	SetRegEx(0X9C20,"T",0X1,3);
	SetRegEx(0X9C3C,"T",0X1,3);
	SetRegEx(0X9C42,"T",0X1,3);
	SetRegEx(0X9C4A,"T",0X1,3);
	SetRegEx(0X9C4C,"T",0X1,3);
	SetRegEx(0X9C4E,"T",0X1,3);
	SetRegEx(0X9C66,"T",0X1,3);
	SetRegEx(0X9C8E,"T",0X1,3);
	SetRegEx(0X9C94,"T",0X1,3);
	SetRegEx(0X9C9A,"T",0X1,3);
	SetRegEx(0X9C9E,"T",0X1,3);
	SetRegEx(0X9CA2,"T",0X1,3);
	SetRegEx(0X9CB2,"T",0X1,3);
	SetRegEx(0X9CB6,"T",0X1,3);
	SetRegEx(0X9CB8,"T",0X1,3);
	SetRegEx(0X9CBC,"T",0X1,3);
	SetRegEx(0X9CC0,"T",0X1,3);
	SetRegEx(0X9CDA,"T",0X1,3);
	SetRegEx(0X9CE0,"T",0X1,3);
	SetRegEx(0X9CE6,"T",0X1,3);
	SetRegEx(0X9CEA,"T",0X1,3);
	SetRegEx(0X9CEE,"T",0X1,3);
	SetRegEx(0X9D06,"T",0X1,3);
	SetRegEx(0X9D10,"T",0X1,3);
	SetRegEx(0X9D2C,"T",0X1,3);
	SetRegEx(0X9D30,"T",0X1,3);
	SetRegEx(0X9D4A,"T",0X1,3);
	SetRegEx(0X9D60,"T",0X1,3);
	SetRegEx(0X9D64,"T",0X1,3);
	SetRegEx(0X9D66,"T",0X1,3);
	SetRegEx(0X9D6C,"T",0X1,3);
	SetRegEx(0X9DC8,"T",0X1,3);
	SetRegEx(0X9DD0,"T",0X1,3);
	SetRegEx(0X9DDC,"T",0X1,3);
	SetRegEx(0X9E1E,"T",0X1,3);
	SetRegEx(0X9E26,"T",0X1,3);
	SetRegEx(0X9E32,"T",0X1,3);
	SetRegEx(0X9E3C,"T",0X1,3);
	SetRegEx(0X9E44,"T",0X1,3);
	SetRegEx(0X9E5A,"T",0X1,3);
	SetRegEx(0X9E70,"T",0X1,3);
	SetRegEx(0X9E7E,"T",0X1,3);
	SetRegEx(0X9E84,"T",0X1,3);
	SetRegEx(0X9E8E,"T",0X1,3);
	SetRegEx(0X9E96,"T",0X1,3);
	SetRegEx(0X9EA2,"T",0X1,3);
	SetRegEx(0X9EA8,"T",0X1,3);
	SetRegEx(0X9EB0,"T",0X1,3);
	SetRegEx(0X9EC2,"T",0X1,3);
	SetRegEx(0X9EE6,"T",0X1,3);
	SetRegEx(0X9EEA,"T",0X1,3);
	SetRegEx(0X9EFE,"T",0X1,3);
	SetRegEx(0X9F2C,"T",0X1,3);
	SetRegEx(0X9F3E,"T",0X1,3);
	SetRegEx(0X9F40,"T",0X1,3);
	SetRegEx(0X9F42,"T",0X1,3);
	SetRegEx(0X9F54,"T",0X1,3);
	SetRegEx(0X9F64,"T",0X1,3);
	SetRegEx(0X9F76,"T",0X1,3);
	SetRegEx(0X9F78,"T",0X1,3);
	SetRegEx(0X9F7A,"T",0X1,3);
	SetRegEx(0X9F8C,"T",0X1,3);
	SetRegEx(0X9F9C,"T",0X1,3);
	SetRegEx(0X9FA6,"T",0X1,3);
	SetRegEx(0X9FBC,"T",0X1,3);
	SetRegEx(0XA004,"T",0X1,3);
	SetRegEx(0XA064,"T",0X1,3);
	SetRegEx(0XA0CA,"T",0X1,3);
	SetRegEx(0XA0EE,"T",0X1,3);
	SetRegEx(0XA102,"T",0X1,3);
	SetRegEx(0XA13E,"T",0X1,3);
	SetRegEx(0XA19A,"T",0X1,3);
	SetRegEx(0XA19C,"T",0X1,3);
	SetRegEx(0XA1A2,"T",0X1,3);
	SetRegEx(0XA1A6,"T",0X1,3);
	SetRegEx(0XA1CC,"T",0X1,3);
	SetRegEx(0XA1DC,"T",0X1,3);
	SetRegEx(0XA1E0,"T",0X1,3);
	SetRegEx(0XA21E,"T",0X1,3);
	SetRegEx(0XA232,"T",0X1,3);
	SetRegEx(0XA23C,"T",0X1,3);
	SetRegEx(0XA272,"T",0X1,3);
	SetRegEx(0XA29C,"T",0X1,3);
	SetRegEx(0XA2A0,"T",0X1,3);
	SetRegEx(0XA2DE,"T",0X1,3);
	SetRegEx(0XA32A,"T",0X1,3);
	SetRegEx(0XA33A,"T",0X1,3);
	SetRegEx(0XA360,"T",0X1,3);
	SetRegEx(0XA366,"T",0X1,3);
	SetRegEx(0XA384,"T",0X1,3);
	SetRegEx(0XA390,"T",0X1,3);
	SetRegEx(0XA3D6,"T",0X1,3);
	SetRegEx(0XA3F0,"T",0X1,3);
	SetRegEx(0XA448,"T",0X1,3);
	SetRegEx(0XA44E,"T",0X1,3);
	SetRegEx(0XA452,"T",0X1,3);
	SetRegEx(0XA456,"T",0X1,3);
	SetRegEx(0XA458,"T",0X1,3);
	SetRegEx(0XA45A,"T",0X1,3);
	SetRegEx(0XA46C,"T",0X1,3);
	SetRegEx(0XA4A0,"T",0X1,3);
	SetRegEx(0XA4E4,"T",0X1,3);
	SetRegEx(0XA4E6,"T",0X1,3);
	SetRegEx(0XA504,"T",0X1,3);
	SetRegEx(0XA506,"T",0X1,3);
	SetRegEx(0XA512,"T",0X1,3);
	SetRegEx(0XA520,"T",0X1,3);
	SetRegEx(0XA558,"T",0X1,3);
	SetRegEx(0XA55A,"T",0X1,3);
	SetRegEx(0XA55E,"T",0X1,3);
	SetRegEx(0XA572,"T",0X1,3);
	SetRegEx(0XA586,"T",0X1,3);
	SetRegEx(0XA58E,"T",0X1,3);
	SetRegEx(0XA592,"T",0X1,3);
	SetRegEx(0XA634,"T",0X1,3);
	SetRegEx(0XA640,"T",0X1,3);
	SetRegEx(0XA650,"T",0X1,3);
	SetRegEx(0XA656,"T",0X1,3);
	SetRegEx(0XA67C,"T",0X1,3);
	SetRegEx(0XA696,"T",0X1,3);
	SetRegEx(0XA6B2,"T",0X1,3);
	SetRegEx(0XA6D0,"T",0X1,3);
	SetRegEx(0XA6F4,"T",0X1,3);
	SetRegEx(0XA702,"T",0X1,3);
	SetRegEx(0XA712,"T",0X1,3);
	SetRegEx(0XA714,"T",0X1,3);
	SetRegEx(0XA740,"T",0X1,3);
	SetRegEx(0XA7A2,"T",0X1,3);
	SetRegEx(0XA7A4,"T",0X1,3);
	SetRegEx(0XA7B8,"T",0X1,3);
	SetRegEx(0XA7BE,"T",0X1,3);
	SetRegEx(0XA838,"T",0X1,3);
	SetRegEx(0XA892,"T",0X1,3);
	SetRegEx(0XA8A2,"T",0X1,3);
	SetRegEx(0XA8A8,"T",0X1,3);
	SetRegEx(0XA8F0,"T",0X1,3);
	SetRegEx(0XA8FE,"T",0X1,3);
	SetRegEx(0XA910,"T",0X1,3);
	SetRegEx(0XA92A,"T",0X1,3);
	SetRegEx(0XA944,"T",0X1,3);
	SetRegEx(0XA946,"T",0X1,3);
	SetRegEx(0XA94A,"T",0X1,3);
	SetRegEx(0XA968,"T",0X1,3);
	SetRegEx(0XA9EE,"T",0X1,3);
	SetRegEx(0XAA56,"T",0X1,3);
	SetRegEx(0XAA9C,"T",0X1,3);
	SetRegEx(0XAB04,"T",0X1,3);
	SetRegEx(0XAB18,"T",0X1,3);
	SetRegEx(0XAB2A,"T",0X1,3);
	SetRegEx(0XAB38,"T",0X1,3);
	SetRegEx(0XAB40,"T",0X1,3);
	SetRegEx(0XAB48,"T",0X1,3);
	SetRegEx(0XAB4C,"T",0X1,3);
	SetRegEx(0XAB6A,"T",0X1,3);
	SetRegEx(0XAB8A,"T",0X1,3);
	SetRegEx(0XABB8,"T",0X1,3);
	SetRegEx(0XABCE,"T",0X1,3);
	SetRegEx(0XABD4,"T",0X1,3);
	SetRegEx(0XABDE,"T",0X1,3);
	SetRegEx(0XABE0,"T",0X1,3);
	SetRegEx(0XABE2,"T",0X1,3);
	SetRegEx(0XABFA,"T",0X1,3);
	SetRegEx(0XAC10,"T",0X1,3);
	SetRegEx(0XAC16,"T",0X1,3);
	SetRegEx(0XAC1C,"T",0X1,3);
	SetRegEx(0XAC20,"T",0X1,3);
	SetRegEx(0XAC24,"T",0X1,3);
	SetRegEx(0XAC3E,"T",0X1,3);
	SetRegEx(0XAC46,"T",0X1,3);
	SetRegEx(0XAC4C,"T",0X1,3);
	SetRegEx(0XAC52,"T",0X1,3);
	SetRegEx(0XAC56,"T",0X1,3);
	SetRegEx(0XAC6C,"T",0X1,3);
	SetRegEx(0XAC76,"T",0X1,3);
	SetRegEx(0XAC92,"T",0X1,3);
	SetRegEx(0XAC9A,"T",0X1,3);
	SetRegEx(0XAC9E,"T",0X1,3);
	SetRegEx(0XACB8,"T",0X1,3);
	SetRegEx(0XACD8,"T",0X1,3);
	SetRegEx(0XACDC,"T",0X1,3);
	SetRegEx(0XACDE,"T",0X1,3);
	SetRegEx(0XACE4,"T",0X1,3);
	SetRegEx(0XAD5C,"T",0X1,3);
	SetRegEx(0XAD70,"T",0X1,3);
	SetRegEx(0XAD82,"T",0X1,3);
	SetRegEx(0XAD9E,"T",0X1,3);
	SetRegEx(0XADA0,"T",0X1,3);
	SetRegEx(0XADB6,"T",0X1,3);
	SetRegEx(0XADD2,"T",0X1,3);
	SetRegEx(0XADDA,"T",0X1,3);
	SetRegEx(0XADEE,"T",0X1,3);
	SetRegEx(0XAE0A,"T",0X1,3);
	SetRegEx(0XAE0E,"T",0X1,3);
	SetRegEx(0XAE26,"T",0X1,3);
	SetRegEx(0XAE28,"T",0X1,3);
	SetRegEx(0XAE2C,"T",0X1,3);
	SetRegEx(0XAE3C,"T",0X1,3);
	SetRegEx(0XAE44,"T",0X1,3);
	SetRegEx(0XAE48,"T",0X1,3);
	SetRegEx(0XAE58,"T",0X1,3);
	SetRegEx(0XAE74,"T",0X1,3);
	SetRegEx(0XAE90,"T",0X1,3);
	SetRegEx(0XAEAC,"T",0X1,3);
	SetRegEx(0XAEC2,"T",0X1,3);
	SetRegEx(0XAED0,"T",0X1,3);
	SetRegEx(0XAED4,"T",0X1,3);
	SetRegEx(0XAEDC,"T",0X1,3);
	SetRegEx(0XAEE2,"T",0X1,3);
	SetRegEx(0XAEFA,"T",0X1,3);
	SetRegEx(0XAF02,"T",0X1,3);
	SetRegEx(0XAF04,"T",0X1,3);
	SetRegEx(0XAF08,"T",0X1,3);
	SetRegEx(0XAF12,"T",0X1,3);
	SetRegEx(0XAF1E,"T",0X1,3);
	SetRegEx(0XAF26,"T",0X1,3);
	SetRegEx(0XAF28,"T",0X1,3);
	SetRegEx(0XAF3C,"T",0X1,3);
	SetRegEx(0XAF60,"T",0X1,3);
	SetRegEx(0XAF7A,"T",0X1,3);
	SetRegEx(0XAF88,"T",0X1,3);
	SetRegEx(0XAF96,"T",0X1,3);
	SetRegEx(0XAFA8,"T",0X1,3);
	SetRegEx(0XAFB2,"T",0X1,3);
	SetRegEx(0XAFBA,"T",0X1,3);
	SetRegEx(0XAFD8,"T",0X1,3);
	SetRegEx(0XAFDC,"T",0X1,3);
	SetRegEx(0XAFF0,"T",0X1,3);
	SetRegEx(0XAFFA,"T",0X1,3);
	SetRegEx(0XB010,"T",0X1,3);
	SetRegEx(0XB038,"T",0X1,3);
	SetRegEx(0XB03C,"T",0X1,3);
	SetRegEx(0XB04A,"T",0X1,3);
	SetRegEx(0XB058,"T",0X1,3);
	SetRegEx(0XB05A,"T",0X1,3);
	SetRegEx(0XB064,"T",0X1,3);
	SetRegEx(0XB068,"T",0X1,3);
	SetRegEx(0XB088,"T",0X1,3);
	SetRegEx(0XB0B0,"T",0X1,3);
	SetRegEx(0XB0D4,"T",0X1,3);
	SetRegEx(0XB0EE,"T",0X1,3);
	SetRegEx(0XB0FC,"T",0X1,3);
	SetRegEx(0XB10A,"T",0X1,3);
	SetRegEx(0XB11C,"T",0X1,3);
	SetRegEx(0XB126,"T",0X1,3);
	SetRegEx(0XB12E,"T",0X1,3);
	SetRegEx(0XB14C,"T",0X1,3);
	SetRegEx(0XB150,"T",0X1,3);
	SetRegEx(0XB16C,"T",0X1,3);
	SetRegEx(0XB17E,"T",0X1,3);
	SetRegEx(0XB180,"T",0X1,3);
	SetRegEx(0XB184,"T",0X1,3);
	SetRegEx(0XB196,"T",0X1,3);
	SetRegEx(0XB1A4,"T",0X1,3);
	SetRegEx(0XB1A6,"T",0X1,3);
	SetRegEx(0XB1B8,"T",0X1,3);
	SetRegEx(0XB1BA,"T",0X1,3);
	SetRegEx(0XB1E0,"T",0X1,3);
	SetRegEx(0XB1F4,"T",0X1,3);
	SetRegEx(0XB210,"T",0X1,3);
	SetRegEx(0XB212,"T",0X1,3);
	SetRegEx(0XB214,"T",0X1,3);
	SetRegEx(0XB226,"T",0X1,3);
	SetRegEx(0XB228,"T",0X1,3);
	SetRegEx(0XB23E,"T",0X1,3);
	SetRegEx(0XB264,"T",0X1,3);
	SetRegEx(0XB26A,"T",0X1,3);
	SetRegEx(0XB27A,"T",0X1,3);
	SetRegEx(0XB27C,"T",0X1,3);
	SetRegEx(0XB290,"T",0X1,3);
	SetRegEx(0XB29A,"T",0X1,3);
	SetRegEx(0XB2A6,"T",0X1,3);
	SetRegEx(0XB2BA,"T",0X1,3);
	SetRegEx(0XB2BE,"T",0X1,3);
	SetRegEx(0XB2C8,"T",0X1,3);
	SetRegEx(0XB2DC,"T",0X1,3);
	SetRegEx(0XB2DE,"T",0X1,3);
	SetRegEx(0XB318,"T",0X1,3);
	SetRegEx(0XB32A,"T",0X1,3);
	SetRegEx(0XB32C,"T",0X1,3);
	SetRegEx(0XB34C,"T",0X1,3);
	SetRegEx(0XB370,"T",0X1,3);
	SetRegEx(0XB384,"T",0X1,3);
	SetRegEx(0XB3A8,"T",0X1,3);
	SetRegEx(0XB3AA,"T",0X1,3);
	SetRegEx(0XB3BC,"T",0X1,3);
	SetRegEx(0XB3BE,"T",0X1,3);
	SetRegEx(0XB3CC,"T",0X1,3);
	SetRegEx(0XB3CE,"T",0X1,3);
	SetRegEx(0XB3DC,"T",0X1,3);
	SetRegEx(0XB3DE,"T",0X1,3);
	SetRegEx(0XB3EA,"T",0X1,3);
	SetRegEx(0XB3EC,"T",0X1,3);
	SetRegEx(0XB428,"T",0X1,3);
	SetRegEx(0XB42C,"T",0X1,3);
	SetRegEx(0XB454,"T",0X1,3);
	SetRegEx(0XB456,"T",0X1,3);
	SetRegEx(0XB472,"T",0X1,3);
	SetRegEx(0XB496,"T",0X1,3);
	SetRegEx(0XB49A,"T",0X1,3);
	SetRegEx(0XB49E,"T",0X1,3);
	SetRegEx(0XB4F0,"T",0X1,3);
	SetRegEx(0XB504,"T",0X1,3);
	SetRegEx(0XB506,"T",0X1,3);
	SetRegEx(0XB556,"T",0X1,3);
	SetRegEx(0XB55A,"T",0X1,3);
	SetRegEx(0XB578,"T",0X1,3);
	SetRegEx(0XB57C,"T",0X1,3);
	SetRegEx(0XB590,"T",0X1,3);
	SetRegEx(0XB592,"T",0X1,3);
	SetRegEx(0XB594,"T",0X1,3);
	SetRegEx(0XB598,"T",0X1,3);
	SetRegEx(0XB5A4,"T",0X1,3);
	SetRegEx(0XB5C0,"T",0X1,3);
	SetRegEx(0XB5D4,"T",0X1,3);
	SetRegEx(0XB5EE,"T",0X1,3);
	SetRegEx(0XB5FA,"T",0X1,3);
	SetRegEx(0XB624,"T",0X1,3);
	SetRegEx(0XB62A,"T",0X1,3);
	SetRegEx(0XB62E,"T",0X1,3);
	SetRegEx(0XB63C,"T",0X1,3);
	SetRegEx(0XB650,"T",0X1,3);
	SetRegEx(0XB668,"T",0X1,3);
	SetRegEx(0XB67C,"T",0X1,3);
	SetRegEx(0XB6B4,"T",0X1,3);
	SetRegEx(0XB6BC,"T",0X1,3);
	SetRegEx(0XB6C0,"T",0X1,3);
	SetRegEx(0XB6DC,"T",0X1,3);
	SetRegEx(0XB6DE,"T",0X1,3);
	SetRegEx(0XB6FA,"T",0X1,3);
	SetRegEx(0XB6FC,"T",0X1,3);
	SetRegEx(0XB74A,"T",0X1,3);
	SetRegEx(0XB750,"T",0X1,3);
	SetRegEx(0XB786,"T",0X1,3);
	SetRegEx(0XB78A,"T",0X1,3);
	SetRegEx(0XB7C0,"T",0X1,3);
	SetRegEx(0XB7C4,"T",0X1,3);
	SetRegEx(0XB81C,"T",0X1,3);
	SetRegEx(0XB820,"T",0X1,3);
	SetRegEx(0XB868,"T",0X1,3);
	SetRegEx(0XB86C,"T",0X1,3);
	SetRegEx(0XB8B4,"T",0X1,3);
	SetRegEx(0XB8B8,"T",0X1,3);
	SetRegEx(0XB8CA,"T",0X1,3);
	SetRegEx(0XB906,"T",0X1,3);
	SetRegEx(0XB922,"T",0X1,3);
	SetRegEx(0XB958,"T",0X1,3);
	SetRegEx(0XB95C,"T",0X1,3);
	SetRegEx(0XB980,"T",0X1,3);
	SetRegEx(0XB994,"T",0X1,3);
	SetRegEx(0XB99E,"T",0X1,3);
	SetRegEx(0XB9B8,"T",0X1,3);
	SetRegEx(0XB9C4,"T",0X1,3);
	SetRegEx(0XB9D4,"T",0X1,3);
	SetRegEx(0XB9E2,"T",0X1,3);
	SetRegEx(0XBA18,"T",0X1,3);
	SetRegEx(0XBA1C,"T",0X1,3);
	SetRegEx(0XBA42,"T",0X1,3);
	SetRegEx(0XBA50,"T",0X1,3);
	SetRegEx(0XBA52,"T",0X1,3);
	SetRegEx(0XBA54,"T",0X1,3);
	SetRegEx(0XBA56,"T",0X1,3);
	SetRegEx(0XBA58,"T",0X1,3);
	SetRegEx(0XBA5A,"T",0X1,3);
	SetRegEx(0XBA5C,"T",0X1,3);
	SetRegEx(0XBA6C,"T",0X1,3);
	SetRegEx(0XBAA4,"T",0X1,3);
	SetRegEx(0XBAAE,"T",0X1,3);
	SetRegEx(0XBAE0,"T",0X1,3);
	SetRegEx(0XBB04,"T",0X1,3);
	SetRegEx(0XBB48,"T",0X1,3);
	SetRegEx(0XBB4C,"T",0X1,3);
	SetRegEx(0XBB50,"T",0X1,3);
	SetRegEx(0XBB52,"T",0X1,3);
	SetRegEx(0XBB56,"T",0X1,3);
	SetRegEx(0XBB5E,"T",0X1,3);
	SetRegEx(0XBB86,"T",0X1,3);
	SetRegEx(0XBB9C,"T",0X1,3);
	SetRegEx(0XBBBA,"T",0X1,3);
	SetRegEx(0XBBD0,"T",0X1,3);
	SetRegEx(0XBBEC,"T",0X1,3);
	SetRegEx(0XBBF6,"T",0X1,3);
	SetRegEx(0XBC00,"T",0X1,3);
	SetRegEx(0XBC08,"T",0X1,3);
	SetRegEx(0XBC10,"T",0X1,3);
	SetRegEx(0XBC28,"T",0X1,3);
	SetRegEx(0XBC34,"T",0X1,3);
	SetRegEx(0XBC4C,"T",0X1,3);
	SetRegEx(0XBC64,"T",0X1,3);
	SetRegEx(0XBC92,"T",0X1,3);
	SetRegEx(0XBC96,"T",0X1,3);
	SetRegEx(0XBCD6,"T",0X1,3);
	SetRegEx(0XBCE8,"T",0X1,3);
	SetRegEx(0XBCEC,"T",0X1,3);
	SetRegEx(0XBCFA,"T",0X1,3);
	SetRegEx(0XBD22,"T",0X1,3);
	SetRegEx(0XBD4A,"T",0X1,3);
	SetRegEx(0XBD56,"T",0X1,3);
	SetRegEx(0XBD66,"T",0X1,3);
	SetRegEx(0XBD72,"T",0X1,3);
	SetRegEx(0XBD78,"T",0X1,3);
	SetRegEx(0XBD7A,"T",0X1,3);
	SetRegEx(0XBD96,"T",0X1,3);
	SetRegEx(0XBDC4,"T",0X1,3);
	SetRegEx(0XBDCA,"T",0X1,3);
	SetRegEx(0XBDF6,"T",0X1,3);
	SetRegEx(0XBE24,"T",0X1,3);
	SetRegEx(0XBE50,"T",0X1,3);
	SetRegEx(0XBE70,"T",0X1,3);
	SetRegEx(0XBE74,"T",0X1,3);
	SetRegEx(0XBE86,"T",0X1,3);
	SetRegEx(0XBE8A,"T",0X1,3);
	SetRegEx(0XBEAE,"T",0X1,3);
	SetRegEx(0XBEB8,"T",0X1,3);
	SetRegEx(0XBEC8,"T",0X1,3);
	SetRegEx(0XBF0A,"T",0X1,3);
	SetRegEx(0XBF0C,"T",0X1,3);
	SetRegEx(0XBF16,"T",0X1,3);
	SetRegEx(0XBF54,"T",0X1,3);
	SetRegEx(0XBF56,"T",0X1,3);
	SetRegEx(0XBF74,"T",0X1,3);
	SetRegEx(0XBF88,"T",0X1,3);
	SetRegEx(0XBFB6,"T",0X1,3);
	SetRegEx(0XBFC6,"T",0X1,3);
	SetRegEx(0XBFD8,"T",0X1,3);
	SetRegEx(0XBFF0,"T",0X1,3);
	SetRegEx(0XC012,"T",0X1,3);
	SetRegEx(0XC01C,"T",0X1,3);
	SetRegEx(0XC042,"T",0X1,3);
	SetRegEx(0XC04A,"T",0X1,3);
	SetRegEx(0XC04C,"T",0X1,3);
	SetRegEx(0XC050,"T",0X1,3);
	SetRegEx(0XC054,"T",0X1,3);
	SetRegEx(0XC07E,"T",0X1,3);
	SetRegEx(0XC088,"T",0X1,3);
	SetRegEx(0XC090,"T",0X1,3);
	SetRegEx(0XC094,"T",0X1,3);
	SetRegEx(0XC09E,"T",0X1,3);
	SetRegEx(0XC0E0,"T",0X1,3);
	SetRegEx(0XC0E4,"T",0X1,3);
	SetRegEx(0XC124,"T",0X1,3);
	SetRegEx(0XC12A,"T",0X1,3);
	SetRegEx(0XC132,"T",0X1,3);
	SetRegEx(0XC136,"T",0X1,3);
	SetRegEx(0XC156,"T",0X1,3);
	SetRegEx(0XC160,"T",0X1,3);
	SetRegEx(0XC166,"T",0X1,3);
	SetRegEx(0XC18E,"T",0X1,3);
	SetRegEx(0XC1A8,"T",0X1,3);
	SetRegEx(0XC1CE,"T",0X1,3);
	SetRegEx(0XC1F4,"T",0X1,3);
	SetRegEx(0XC23E,"T",0X1,3);
	SetRegEx(0XC246,"T",0X1,3);
	SetRegEx(0XC25C,"T",0X1,3);
	SetRegEx(0XC25E,"T",0X1,3);
	SetRegEx(0XC288,"T",0X1,3);
	SetRegEx(0XC298,"T",0X1,3);
	SetRegEx(0XC29E,"T",0X1,3);
	SetRegEx(0XC2A6,"T",0X1,3);
	SetRegEx(0XC2DE,"T",0X1,3);
	SetRegEx(0XC326,"T",0X1,3);
	SetRegEx(0XC32A,"T",0X1,3);
	SetRegEx(0XC33A,"T",0X1,3);
	SetRegEx(0XC384,"T",0X1,3);
	SetRegEx(0XC388,"T",0X1,3);
	SetRegEx(0XC3CC,"T",0X1,3);
	SetRegEx(0XC3D2,"T",0X1,3);
	SetRegEx(0XC3D8,"T",0X1,3);
	SetRegEx(0XC408,"T",0X1,3);
	SetRegEx(0XC40A,"T",0X1,3);
	SetRegEx(0XC414,"T",0X1,3);
	SetRegEx(0XC43C,"T",0X1,3);
	SetRegEx(0XC4CE,"T",0X1,3);
	SetRegEx(0XC4E8,"T",0X1,3);
	SetRegEx(0XC538,"T",0X1,3);
	SetRegEx(0XC53A,"T",0X1,3);
	SetRegEx(0XC53C,"T",0X1,3);
	SetRegEx(0XC53E,"T",0X1,3);
	SetRegEx(0XC564,"T",0X1,3);
	SetRegEx(0XC5A2,"T",0X1,3);
	SetRegEx(0XC5B4,"T",0X1,3);
	SetRegEx(0XC5B6,"T",0X1,3);
	SetRegEx(0XC5D2,"T",0X1,3);
	SetRegEx(0XC638,"T",0X1,3);
	SetRegEx(0XC648,"T",0X1,3);
	SetRegEx(0XC64A,"T",0X1,3);
	SetRegEx(0XC6AA,"T",0X1,3);
	SetRegEx(0XC6C8,"T",0X1,3);
	SetRegEx(0XC6EC,"T",0X1,3);
	SetRegEx(0XC6F2,"T",0X1,3);
	SetRegEx(0XC6FA,"T",0X1,3);
	SetRegEx(0XC72E,"T",0X1,3);
	SetRegEx(0XC744,"T",0X1,3);
	SetRegEx(0XC754,"T",0X1,3);
	SetRegEx(0XC756,"T",0X1,3);
	SetRegEx(0XC780,"T",0X1,3);
	SetRegEx(0XC7C4,"T",0X1,3);
	SetRegEx(0XC7CA,"T",0X1,3);
	SetRegEx(0XC804,"T",0X1,3);
	SetRegEx(0XC82A,"T",0X1,3);
	SetRegEx(0XC83E,"T",0X1,3);
	SetRegEx(0XC846,"T",0X1,3);
	SetRegEx(0XC848,"T",0X1,3);
	SetRegEx(0XC850,"T",0X1,3);
	SetRegEx(0XC896,"T",0X1,3);
	SetRegEx(0XC916,"T",0X1,3);
	SetRegEx(0XC972,"T",0X1,3);
	SetRegEx(0XC974,"T",0X1,3);
	SetRegEx(0XC988,"T",0X1,3);
	SetRegEx(0XC98A,"T",0X1,3);
	SetRegEx(0XC9BC,"T",0X1,3);
	SetRegEx(0XC9F4,"T",0X1,3);
	SetRegEx(0XCA6C,"T",0X1,3);
	SetRegEx(0XCAA8,"T",0X1,3);
	SetRegEx(0XCAAA,"T",0X1,3);
	SetRegEx(0XCAAC,"T",0X1,3);
	SetRegEx(0XCAB0,"T",0X1,3);
	SetRegEx(0XCAB8,"T",0X1,3);
	SetRegEx(0XCAC6,"T",0X1,3);
	SetRegEx(0XCACC,"T",0X1,3);
	SetRegEx(0XCAD0,"T",0X1,3);
	SetRegEx(0XCAD8,"T",0X1,3);
	SetRegEx(0XCB32,"T",0X1,3);
	SetRegEx(0XCB54,"T",0X1,3);
	SetRegEx(0XCB6C,"T",0X1,3);
	SetRegEx(0XCB86,"T",0X1,3);
	SetRegEx(0XCB9E,"T",0X1,3);
	SetRegEx(0XCBAC,"T",0X1,3);
	SetRegEx(0XCBDC,"T",0X1,3);
	SetRegEx(0XCBE6,"T",0X1,3);
	SetRegEx(0XCBF0,"T",0X1,3);
	SetRegEx(0XCBF2,"T",0X1,3);
	SetRegEx(0XCC1A,"T",0X1,3);
	SetRegEx(0XCC2E,"T",0X1,3);
	SetRegEx(0XCC32,"T",0X1,3);
	SetRegEx(0XCC5C,"T",0X1,3);
	SetRegEx(0XCC74,"T",0X1,3);
	SetRegEx(0XCCAE,"T",0X1,3);
	SetRegEx(0XCCB6,"T",0X1,3);
	SetRegEx(0XCCC2,"T",0X1,3);
	SetRegEx(0XCCD0,"T",0X1,3);
	SetRegEx(0XCCFC,"T",0X1,3);
	SetRegEx(0XCCFE,"T",0X1,3);
	SetRegEx(0XCD08,"T",0X1,3);
	SetRegEx(0XCD18,"T",0X1,3);
	SetRegEx(0XCD20,"T",0X1,3);
	SetRegEx(0XCD2A,"T",0X1,3);
	SetRegEx(0XCD34,"T",0X1,3);
	SetRegEx(0XCD40,"T",0X1,3);
	SetRegEx(0XCD42,"T",0X1,3);
	SetRegEx(0XCD4C,"T",0X1,3);
	SetRegEx(0XCD54,"T",0X1,3);
	SetRegEx(0XCD9A,"T",0X1,3);
	SetRegEx(0XCDB6,"T",0X1,3);
	SetRegEx(0XCDD0,"T",0X1,3);
	SetRegEx(0XCDF2,"T",0X1,3);
	SetRegEx(0XCE14,"T",0X1,3);
	SetRegEx(0XCE2C,"T",0X1,3);
	SetRegEx(0XCE30,"T",0X1,3);
	SetRegEx(0XCE40,"T",0X1,3);
	SetRegEx(0XCE76,"T",0X1,3);
	SetRegEx(0XCE94,"T",0X1,3);
	SetRegEx(0XCEBC,"T",0X1,3);
	SetRegEx(0XCEC4,"T",0X1,3);
	SetRegEx(0XCECE,"T",0X1,3);
	SetRegEx(0XCEDC,"T",0X1,3);
	SetRegEx(0XCEDE,"T",0X1,3);
	SetRegEx(0XCEE2,"T",0X1,3);
	SetRegEx(0XCEEE,"T",0X1,3);
	SetRegEx(0XCEF4,"T",0X1,3);
	SetRegEx(0XCEF6,"T",0X1,3);
	SetRegEx(0XCFA2,"T",0X1,3);
	SetRegEx(0XCFC2,"T",0X1,3);
	SetRegEx(0XD004,"T",0X1,3);
	SetRegEx(0XD006,"T",0X1,3);
	SetRegEx(0XD060,"T",0X1,3);
	SetRegEx(0XD062,"T",0X1,3);
	SetRegEx(0XD070,"T",0X1,3);
	SetRegEx(0XD07A,"T",0X1,3);
	SetRegEx(0XD07E,"T",0X1,3);
	SetRegEx(0XD084,"T",0X1,3);
	SetRegEx(0XD0B8,"T",0X1,3);
	SetRegEx(0XD0BE,"T",0X1,3);
	SetRegEx(0XD0E8,"T",0X1,3);
	SetRegEx(0XD0EE,"T",0X1,3);
	SetRegEx(0XD0F6,"T",0X1,3);
	SetRegEx(0XD0FE,"T",0X1,3);
	SetRegEx(0XD102,"T",0X1,3);
	SetRegEx(0XD10A,"T",0X1,3);
	SetRegEx(0XD110,"T",0X1,3);
	SetRegEx(0XD118,"T",0X1,3);
	SetRegEx(0XD126,"T",0X1,3);
	SetRegEx(0XD156,"T",0X1,3);
	SetRegEx(0XD15A,"T",0X1,3);
	SetRegEx(0XD160,"T",0X1,3);
	SetRegEx(0XD17A,"T",0X1,3);
	SetRegEx(0XD180,"T",0X1,3);
	SetRegEx(0XD1A6,"T",0X1,3);
	SetRegEx(0XD20A,"T",0X1,3);
	SetRegEx(0XD254,"T",0X1,3);
	SetRegEx(0XD352,"T",0X1,3);
	SetRegEx(0XD354,"T",0X1,3);
	SetRegEx(0XD37A,"T",0X1,3);
	SetRegEx(0XD38A,"T",0X1,3);
	SetRegEx(0XD39A,"T",0X1,3);
	SetRegEx(0XD3BA,"T",0X1,3);
	SetRegEx(0XD3D8,"T",0X1,3);
	SetRegEx(0XD3DC,"T",0X1,3);
	SetRegEx(0XD3EA,"T",0X1,3);
	SetRegEx(0XD3F4,"T",0X1,3);
	SetRegEx(0XD404,"T",0X1,3);
	SetRegEx(0XD408,"T",0X1,3);
	SetRegEx(0XD416,"T",0X1,3);
	SetRegEx(0XD43C,"T",0X1,3);
	SetRegEx(0XD43E,"T",0X1,3);
	SetRegEx(0XD4AC,"T",0X1,3);
	SetRegEx(0XD4D4,"T",0X1,3);
	SetRegEx(0XD4EE,"T",0X1,3);
	SetRegEx(0XD508,"T",0X1,3);
	SetRegEx(0XD50A,"T",0X1,3);
	SetRegEx(0XD526,"T",0X1,3);
	SetRegEx(0XD550,"T",0X1,3);
	SetRegEx(0XD55C,"T",0X1,3);
	SetRegEx(0XD61E,"T",0X1,3);
	SetRegEx(0XD630,"T",0X1,3);
	SetRegEx(0XD63A,"T",0X1,3);
	SetRegEx(0XD65A,"T",0X1,3);
	SetRegEx(0XD6C8,"T",0X1,3);
	SetRegEx(0XD6E4,"T",0X1,3);
	SetRegEx(0XD6E8,"T",0X1,3);
	SetRegEx(0XD6EE,"T",0X1,3);
	SetRegEx(0XD6F8,"T",0X1,3);
	SetRegEx(0XD71C,"T",0X1,3);
	SetRegEx(0XD71E,"T",0X1,3);
	SetRegEx(0XD740,"T",0X1,3);
	SetRegEx(0XD742,"T",0X1,3);
	SetRegEx(0XD77A,"T",0X1,3);
	SetRegEx(0XD77E,"T",0X1,3);
	SetRegEx(0XD790,"T",0X1,3);
	SetRegEx(0XD7B4,"T",0X1,3);
	SetRegEx(0XD7B8,"T",0X1,3);
	SetRegEx(0XD7D0,"T",0X1,3);
	SetRegEx(0XD7E8,"T",0X1,3);
	SetRegEx(0XD806,"T",0X1,3);
	SetRegEx(0XD808,"T",0X1,3);
	SetRegEx(0XD856,"T",0X1,3);
	SetRegEx(0XD85A,"T",0X1,3);
	SetRegEx(0XD87C,"T",0X1,3);
	SetRegEx(0XD89A,"T",0X1,3);
	SetRegEx(0XD89E,"T",0X1,3);
	SetRegEx(0XD8B0,"T",0X1,3);
	SetRegEx(0XD8B4,"T",0X1,3);
	SetRegEx(0XD8B6,"T",0X1,3);
	SetRegEx(0XD8F0,"T",0X1,3);
	SetRegEx(0XD8FE,"T",0X1,3);
	SetRegEx(0XD902,"T",0X1,3);
	SetRegEx(0XD906,"T",0X1,3);
	SetRegEx(0XD91C,"T",0X1,3);
	SetRegEx(0XD936,"T",0X1,3);
	SetRegEx(0XD938,"T",0X1,3);
	SetRegEx(0XD942,"T",0X1,3);
	SetRegEx(0XD950,"T",0X1,3);
	SetRegEx(0XD952,"T",0X1,3);
	SetRegEx(0XD95C,"T",0X1,3);
	SetRegEx(0XD96E,"T",0X1,3);
	SetRegEx(0XD978,"T",0X1,3);
	SetRegEx(0XD980,"T",0X1,3);
	SetRegEx(0XD988,"T",0X1,3);
	SetRegEx(0XD996,"T",0X1,3);
	SetRegEx(0XD99A,"T",0X1,3);
	SetRegEx(0XD9AA,"T",0X1,3);
	SetRegEx(0XD9AE,"T",0X1,3);
	SetRegEx(0XD9D6,"T",0X1,3);
	SetRegEx(0XD9EA,"T",0X1,3);
	SetRegEx(0XD9EC,"T",0X1,3);
	SetRegEx(0XD9FC,"T",0X1,3);
	SetRegEx(0XDA0A,"T",0X1,3);
	SetRegEx(0XDA16,"T",0X1,3);
	SetRegEx(0XDA24,"T",0X1,3);
	SetRegEx(0XDA28,"T",0X1,3);
	SetRegEx(0XDA2C,"T",0X1,3);
	SetRegEx(0XDA38,"T",0X1,3);
	SetRegEx(0XDA3E,"T",0X1,3);
	SetRegEx(0XDA40,"T",0X1,3);
	SetRegEx(0XDA48,"T",0X1,3);
	SetRegEx(0XDA68,"T",0X1,3);
	SetRegEx(0XDA6A,"T",0X1,3);
	SetRegEx(0XDA7C,"T",0X1,3);
	SetRegEx(0XDA84,"T",0X1,3);
	SetRegEx(0XDA94,"T",0X1,3);
	SetRegEx(0XDAA4,"T",0X1,3);
	SetRegEx(0XDAE2,"T",0X1,3);
	SetRegEx(0XDAE4,"T",0X1,3);
	SetRegEx(0XDAEA,"T",0X1,3);
	SetRegEx(0XDAF2,"T",0X1,3);
	SetRegEx(0XDB02,"T",0X1,3);
	SetRegEx(0XDB06,"T",0X1,3);
	SetRegEx(0XDB12,"T",0X1,3);
	SetRegEx(0XDB20,"T",0X1,3);
	SetRegEx(0XDB38,"T",0X1,3);
	SetRegEx(0XDB3E,"T",0X1,3);
	SetRegEx(0XDB46,"T",0X1,3);
	SetRegEx(0XDB4E,"T",0X1,3);
	SetRegEx(0XDB58,"T",0X1,3);
	SetRegEx(0XDB60,"T",0X1,3);
	SetRegEx(0XDBBC,"T",0X1,3);
	SetRegEx(0XDBCE,"T",0X1,3);
	SetRegEx(0XDBE2,"T",0X1,3);
	SetRegEx(0XDBEA,"T",0X1,3);
	SetRegEx(0XDBF0,"T",0X1,3);
	SetRegEx(0XDC04,"T",0X1,3);
	SetRegEx(0XDC0A,"T",0X1,3);
	SetRegEx(0XDC14,"T",0X1,3);
	SetRegEx(0XDC1A,"T",0X1,3);
	SetRegEx(0XDC1E,"T",0X1,3);
	SetRegEx(0XDC24,"T",0X1,3);
	SetRegEx(0XDC30,"T",0X1,3);
	SetRegEx(0XDC82,"T",0X1,3);
	SetRegEx(0XDC94,"T",0X1,3);
	SetRegEx(0XDCA6,"T",0X1,3);
	SetRegEx(0XDCAE,"T",0X1,3);
	SetRegEx(0XDCB4,"T",0X1,3);
	SetRegEx(0XDCC6,"T",0X1,3);
	SetRegEx(0XDCCC,"T",0X1,3);
	SetRegEx(0XDCE0,"T",0X1,3);
	SetRegEx(0XDCE6,"T",0X1,3);
	SetRegEx(0XDCEA,"T",0X1,3);
	SetRegEx(0XDCEE,"T",0X1,3);
	SetRegEx(0XDCF6,"T",0X1,3);
	SetRegEx(0XDCFA,"T",0X1,3);
	SetRegEx(0XDD14,"T",0X1,3);
	SetRegEx(0XDD28,"T",0X1,3);
	SetRegEx(0XDD36,"T",0X1,3);
	SetRegEx(0XDD46,"T",0X1,3);
	SetRegEx(0XDD54,"T",0X1,3);
	SetRegEx(0XDDB8,"T",0X1,3);
	SetRegEx(0XDDC4,"T",0X1,3);
	SetRegEx(0XDDD2,"T",0X1,3);
	SetRegEx(0XDDD6,"T",0X1,3);
	SetRegEx(0XDDDC,"T",0X1,3);
	SetRegEx(0XDDE2,"T",0X1,3);
	SetRegEx(0XDDFC,"T",0X1,3);
	SetRegEx(0XDE42,"T",0X1,3);
	SetRegEx(0XDE5C,"T",0X1,3);
	SetRegEx(0XDE96,"T",0X1,3);
	SetRegEx(0XDEC0,"T",0X1,3);
	SetRegEx(0XDED0,"T",0X1,3);
	SetRegEx(0XDED4,"T",0X1,3);
	SetRegEx(0XDED6,"T",0X1,3);
	SetRegEx(0XDEDA,"T",0X1,3);
	SetRegEx(0XDEDC,"T",0X1,3);
	SetRegEx(0XDEF2,"T",0X1,3);
	SetRegEx(0XDEF6,"T",0X1,3);
	SetRegEx(0XDEFE,"T",0X1,3);
	SetRegEx(0XDF1C,"T",0X1,3);
	SetRegEx(0XDF24,"T",0X1,3);
	SetRegEx(0XDF3C,"T",0X1,3);
	SetRegEx(0XDF40,"T",0X1,3);
	SetRegEx(0XDF48,"T",0X1,3);
	SetRegEx(0XDF4C,"T",0X1,3);
	SetRegEx(0XDF4E,"T",0X1,3);
	SetRegEx(0XDF52,"T",0X1,3);
	SetRegEx(0XDF5A,"T",0X1,3);
	SetRegEx(0XDF62,"T",0X1,3);
	SetRegEx(0XDF78,"T",0X1,3);
	SetRegEx(0XDF7C,"T",0X1,3);
	SetRegEx(0XDF84,"T",0X1,3);
	SetRegEx(0XDF86,"T",0X1,3);
	SetRegEx(0XDF8A,"T",0X1,3);
	SetRegEx(0XDF8E,"T",0X1,3);
	SetRegEx(0XDF90,"T",0X1,3);
	SetRegEx(0XDFB2,"T",0X1,3);
	SetRegEx(0XDFDE,"T",0X1,3);
	SetRegEx(0XDFEA,"T",0X1,3);
	SetRegEx(0XDFF6,"T",0X1,3);
	SetRegEx(0XE000,"T",0X1,3);
	SetRegEx(0XE022,"T",0X1,3);
	SetRegEx(0XE032,"T",0X1,3);
	SetRegEx(0XE036,"T",0X1,3);
	SetRegEx(0XE038,"T",0X1,3);
	SetRegEx(0XE03C,"T",0X1,3);
	SetRegEx(0XE03E,"T",0X1,3);
	SetRegEx(0XE054,"T",0X1,3);
	SetRegEx(0XE058,"T",0X1,3);
	SetRegEx(0XE060,"T",0X1,3);
	SetRegEx(0XE064,"T",0X1,3);
	SetRegEx(0XE068,"T",0X1,3);
	SetRegEx(0XE06E,"T",0X1,3);
	SetRegEx(0XE076,"T",0X1,3);
	SetRegEx(0XE08E,"T",0X1,3);
	SetRegEx(0XE092,"T",0X1,3);
	SetRegEx(0XE09A,"T",0X1,3);
	SetRegEx(0XE09E,"T",0X1,3);
	SetRegEx(0XE0A2,"T",0X1,3);
	SetRegEx(0XE0A4,"T",0X1,3);
	SetRegEx(0XE0AC,"T",0X1,3);
	SetRegEx(0XE0C8,"T",0X1,3);
	SetRegEx(0XE0D8,"T",0X1,3);
	SetRegEx(0XE0EA,"T",0X1,3);
	SetRegEx(0XE0F4,"T",0X1,3);
	SetRegEx(0XE12A,"T",0X1,3);
	SetRegEx(0XE12E,"T",0X1,3);
	SetRegEx(0XE132,"T",0X1,3);
	SetRegEx(0XE13A,"T",0X1,3);
	SetRegEx(0XE150,"T",0X1,3);
	SetRegEx(0XE154,"T",0X1,3);
	SetRegEx(0XE15C,"T",0X1,3);
	SetRegEx(0XE160,"T",0X1,3);
	SetRegEx(0XE164,"T",0X1,3);
	SetRegEx(0XE16E,"T",0X1,3);
	SetRegEx(0XE190,"T",0X1,3);
	SetRegEx(0XE1BC,"T",0X1,3);
	SetRegEx(0XE1C0,"T",0X1,3);
	SetRegEx(0XE1C4,"T",0X1,3);
	SetRegEx(0XE1D0,"T",0X1,3);
	SetRegEx(0XE1D8,"T",0X1,3);
	SetRegEx(0XE1E0,"T",0X1,3);
	SetRegEx(0XE208,"T",0X1,3);
	SetRegEx(0XE20E,"T",0X1,3);
	SetRegEx(0XE214,"T",0X1,3);
	SetRegEx(0XE228,"T",0X1,3);
	SetRegEx(0XE232,"T",0X1,3);
	SetRegEx(0XE234,"T",0X1,3);
	SetRegEx(0XE246,"T",0X1,3);
	SetRegEx(0XE254,"T",0X1,3);
	SetRegEx(0XE256,"T",0X1,3);
	SetRegEx(0XE25E,"T",0X1,3);
	SetRegEx(0XE262,"T",0X1,3);
	SetRegEx(0XE278,"T",0X1,3);
	SetRegEx(0XE27A,"T",0X1,3);
	SetRegEx(0XE27E,"T",0X1,3);
	SetRegEx(0XE28A,"T",0X1,3);
	SetRegEx(0XE2C2,"T",0X1,3);
	SetRegEx(0XE300,"T",0X1,3);
	SetRegEx(0XE3EA,"T",0X1,3);
	SetRegEx(0XE3EC,"T",0X1,3);
	SetRegEx(0XE46C,"T",0X1,3);
	SetRegEx(0XE474,"T",0X1,3);
	SetRegEx(0XE47E,"T",0X1,3);
	SetRegEx(0XE49A,"T",0X1,3);
	SetRegEx(0XE4A8,"T",0X1,3);
	SetRegEx(0XE5C2,"T",0X1,3);
	SetRegEx(0XE5DC,"T",0X1,3);
	SetRegEx(0XE5DE,"T",0X1,3);
	SetRegEx(0XE5E0,"T",0X1,3);
	SetRegEx(0XE654,"T",0X1,3);
	SetRegEx(0XE65A,"T",0X1,3);
	SetRegEx(0XE6A8,"T",0X1,3);
	SetRegEx(0XE6EA,"T",0X1,3);
	SetRegEx(0XE6EC,"T",0X1,3);
	SetRegEx(0XE744,"T",0X1,3);
	SetRegEx(0XE746,"T",0X1,3);
	SetRegEx(0XE78A,"T",0X1,3);
	SetRegEx(0XE78E,"T",0X1,3);
	SetRegEx(0XE794,"T",0X1,3);
	SetRegEx(0XE798,"T",0X1,3);
	SetRegEx(0XE79C,"T",0X1,3);
	SetRegEx(0XE7A6,"T",0X1,3);
	SetRegEx(0XE7B0,"T",0X1,3);
	SetRegEx(0XE84E,"T",0X1,3);
	SetRegEx(0XE850,"T",0X1,3);
	SetRegEx(0XE890,"T",0X1,3);
	SetRegEx(0XE89E,"T",0X1,3);
	SetRegEx(0XE8AA,"T",0X1,3);
	SetRegEx(0XE8AE,"T",0X1,3);
	SetRegEx(0XE8B8,"T",0X1,3);
	SetRegEx(0XE8F4,"T",0X1,3);
	SetRegEx(0XE934,"T",0X1,3);
	SetRegEx(0XE970,"T",0X1,3);
	SetRegEx(0XE9AC,"T",0X1,3);
	SetRegEx(0XE9CC,"T",0X1,3);
	SetRegEx(0XE9CE,"T",0X1,3);
	SetRegEx(0XE9EC,"T",0X1,3);
	SetRegEx(0XE9EE,"T",0X1,3);
	SetRegEx(0XEA1E,"T",0X1,3);
	SetRegEx(0XEA58,"T",0X1,3);
	SetRegEx(0XEA5A,"T",0X1,3);
	SetRegEx(0XEA62,"T",0X1,3);
	SetRegEx(0XEB10,"T",0X1,3);
	SetRegEx(0XEB16,"T",0X1,3);
	SetRegEx(0XEB1E,"T",0X1,3);
	SetRegEx(0XEB24,"T",0X1,3);
	SetRegEx(0XEB30,"T",0X1,3);
	SetRegEx(0XEB32,"T",0X1,3);
	SetRegEx(0XEB7C,"T",0X1,3);
	SetRegEx(0XEB82,"T",0X1,3);
	SetRegEx(0XEB92,"T",0X1,3);
	SetRegEx(0XEBAA,"T",0X1,3);
	SetRegEx(0XEBD2,"T",0X1,3);
	SetRegEx(0XEBD8,"T",0X1,3);
	SetRegEx(0XEBDA,"T",0X1,3);
	SetRegEx(0XEBDE,"T",0X1,3);
	SetRegEx(0XEBF2,"T",0X1,3);
	SetRegEx(0XEBF4,"T",0X1,3);
	SetRegEx(0XEC04,"T",0X1,3);
	SetRegEx(0XEC12,"T",0X1,3);
	SetRegEx(0XEC46,"T",0X1,3);
	SetRegEx(0XEC4C,"T",0X1,3);
	SetRegEx(0XEC5A,"T",0X1,3);
	SetRegEx(0XEC66,"T",0X1,3);
	SetRegEx(0XEC6C,"T",0X1,3);
	SetRegEx(0XEC70,"T",0X1,3);
	SetRegEx(0XEC72,"T",0X1,3);
	SetRegEx(0XEC78,"T",0X1,3);
	SetRegEx(0XEC82,"T",0X1,3);
	SetRegEx(0XEC8A,"T",0X1,3);
	SetRegEx(0XEC90,"T",0X1,3);
	SetRegEx(0XECAA,"T",0X1,3);
	SetRegEx(0XECC4,"T",0X1,3);
	SetRegEx(0XECEC,"T",0X1,3);
	SetRegEx(0XECF4,"T",0X1,3);
	SetRegEx(0XECFC,"T",0X1,3);
	SetRegEx(0XED02,"T",0X1,3);
	SetRegEx(0XED44,"T",0X1,3);
	SetRegEx(0XED7C,"T",0X1,3);
	SetRegEx(0XED8C,"T",0X1,3);
	SetRegEx(0XED9E,"T",0X1,3);
	SetRegEx(0XEDA6,"T",0X1,3);
	SetRegEx(0XEDCE,"T",0X1,3);
	SetRegEx(0XEDDE,"T",0X1,3);
	SetRegEx(0XEDE2,"T",0X1,3);
	SetRegEx(0XEDF2,"T",0X1,3);
	SetRegEx(0XEDF6,"T",0X1,3);
	SetRegEx(0XEE14,"T",0X1,3);
	SetRegEx(0XEE1C,"T",0X1,3);
	SetRegEx(0XEE32,"T",0X1,3);
	SetRegEx(0XEE4A,"T",0X1,3);
	SetRegEx(0XEE56,"T",0X1,3);
	SetRegEx(0XEE6A,"T",0X1,3);
	SetRegEx(0XEE7C,"T",0X1,3);
	SetRegEx(0XEE82,"T",0X1,3);
	SetRegEx(0XEE96,"T",0X1,3);
	SetRegEx(0XEE9C,"T",0X1,3);
	SetRegEx(0XEEA6,"T",0X1,3);
	SetRegEx(0XEEB4,"T",0X1,3);
	SetRegEx(0XEECC,"T",0X1,3);
	SetRegEx(0XEED6,"T",0X1,3);
	SetRegEx(0XEEE2,"T",0X1,3);
	SetRegEx(0XEEEE,"T",0X1,3);
	SetRegEx(0XEEF2,"T",0X1,3);
	SetRegEx(0XEF36,"T",0X1,3);
	SetRegEx(0XEF70,"T",0X1,3);
	SetRegEx(0XEF84,"T",0X1,3);
	SetRegEx(0XEFA0,"T",0X1,3);
	SetRegEx(0XEFA4,"T",0X1,3);
	SetRegEx(0XEFA8,"T",0X1,3);
	SetRegEx(0XEFAC,"T",0X1,3);
	SetRegEx(0XEFCC,"T",0X1,3);
	SetRegEx(0XEFD0,"T",0X1,3);
	SetRegEx(0XEFE6,"T",0X1,3);
	SetRegEx(0XEFEA,"T",0X1,3);
	SetRegEx(0XEFF8,"T",0X1,3);
	SetRegEx(0XF01A,"T",0X1,3);
	SetRegEx(0XF01E,"T",0X1,3);
	SetRegEx(0XF02A,"T",0X1,3);
	SetRegEx(0XF03E,"T",0X1,3);
	SetRegEx(0XF044,"T",0X1,3);
	SetRegEx(0XF04C,"T",0X1,3);
	SetRegEx(0XF04E,"T",0X1,3);
	SetRegEx(0XF05C,"T",0X1,3);
	SetRegEx(0XF068,"T",0X1,3);
	SetRegEx(0XF072,"T",0X1,3);
	SetRegEx(0XF0A4,"T",0X1,3);
	SetRegEx(0XF0CA,"T",0X1,3);
	SetRegEx(0XF0CE,"T",0X1,3);
	SetRegEx(0XF0D4,"T",0X1,3);
	SetRegEx(0XF0EE,"T",0X1,3);
	SetRegEx(0XF0F8,"T",0X1,3);
	SetRegEx(0XF104,"T",0X1,3);
	SetRegEx(0XF106,"T",0X1,3);
	SetRegEx(0XF10C,"T",0X1,3);
	SetRegEx(0XF10E,"T",0X1,3);
	SetRegEx(0XF110,"T",0X1,3);
	SetRegEx(0XF13A,"T",0X1,3);
	SetRegEx(0XF152,"T",0X1,3);
	SetRegEx(0XF158,"T",0X1,3);
	SetRegEx(0XF15E,"T",0X1,3);
	SetRegEx(0XF166,"T",0X1,3);
	SetRegEx(0XF18C,"T",0X1,3);
	SetRegEx(0XF190,"T",0X1,3);
	SetRegEx(0XF1BE,"T",0X1,3);
	SetRegEx(0XF1CC,"T",0X1,3);
	SetRegEx(0XF1DC,"T",0X1,3);
	SetRegEx(0XF1DE,"T",0X1,3);
	SetRegEx(0XF1F8,"T",0X1,3);
	SetRegEx(0XF1FA,"T",0X1,3);
	SetRegEx(0XF1FC,"T",0X1,3);
	SetRegEx(0XF200,"T",0X1,3);
	SetRegEx(0XF204,"T",0X1,3);
	SetRegEx(0XF208,"T",0X1,3);
	SetRegEx(0XF20E,"T",0X1,3);
	SetRegEx(0XF218,"T",0X1,3);
	SetRegEx(0XF21C,"T",0X1,3);
	SetRegEx(0XF258,"T",0X1,3);
	SetRegEx(0XF260,"T",0X1,3);
	SetRegEx(0XF268,"T",0X1,3);
	SetRegEx(0XF282,"T",0X1,3);
	SetRegEx(0XF290,"T",0X1,3);
	SetRegEx(0XF2A4,"T",0X1,3);
	SetRegEx(0XF2AE,"T",0X1,3);
	SetRegEx(0XF2B6,"T",0X1,3);
	SetRegEx(0XF2BE,"T",0X1,3);
	SetRegEx(0XF2C0,"T",0X1,3);
	SetRegEx(0XF2C6,"T",0X1,3);
	SetRegEx(0XF2D0,"T",0X1,3);
	SetRegEx(0XF2D6,"T",0X1,3);
	SetRegEx(0XF2E4,"T",0X1,3);
	SetRegEx(0XF2F4,"T",0X1,3);
	SetRegEx(0XF300,"T",0X1,3);
	SetRegEx(0XF306,"T",0X1,3);
	SetRegEx(0XF316,"T",0X1,3);
	SetRegEx(0XF31C,"T",0X1,3);
	SetRegEx(0XF31E,"T",0X1,3);
	SetRegEx(0XF322,"T",0X1,3);
	SetRegEx(0XF326,"T",0X1,3);
	SetRegEx(0XF386,"T",0X1,3);
	SetRegEx(0XF394,"T",0X1,3);
	SetRegEx(0XF3A8,"T",0X1,3);
	SetRegEx(0XF3B0,"T",0X1,3);
	SetRegEx(0XF3B4,"T",0X1,3);
	SetRegEx(0XF3F2,"T",0X1,3);
	SetRegEx(0XF404,"T",0X1,3);
	SetRegEx(0XF416,"T",0X1,3);
	SetRegEx(0XF432,"T",0X1,3);
	SetRegEx(0XF436,"T",0X1,3);
	SetRegEx(0XF43C,"T",0X1,3);
	SetRegEx(0XF442,"T",0X1,3);
	SetRegEx(0XF448,"T",0X1,3);
	SetRegEx(0XF452,"T",0X1,3);
	SetRegEx(0XF454,"T",0X1,3);
	SetRegEx(0XF456,"T",0X1,3);
	SetRegEx(0XF45C,"T",0X1,3);
	SetRegEx(0XF462,"T",0X1,3);
	SetRegEx(0XF468,"T",0X1,3);
	SetRegEx(0XF472,"T",0X1,3);
	SetRegEx(0XF476,"T",0X1,3);
	SetRegEx(0XF478,"T",0X1,3);
	SetRegEx(0XF47E,"T",0X1,3);
	SetRegEx(0XF484,"T",0X1,3);
	SetRegEx(0XF48A,"T",0X1,3);
	SetRegEx(0XF494,"T",0X1,3);
	SetRegEx(0XF498,"T",0X1,3);
	SetRegEx(0XF49C,"T",0X1,3);
	SetRegEx(0XF4A2,"T",0X1,3);
	SetRegEx(0XF4A8,"T",0X1,3);
	SetRegEx(0XF4AE,"T",0X1,3);
	SetRegEx(0XF4CA,"T",0X1,3);
	SetRegEx(0XF4D6,"T",0X1,3);
	SetRegEx(0XF4E0,"T",0X1,3);
	SetRegEx(0XF4E6,"T",0X1,3);
	SetRegEx(0XF518,"T",0X1,3);
	SetRegEx(0XF51A,"T",0X1,3);
	SetRegEx(0XF51E,"T",0X1,3);
	SetRegEx(0XF52C,"T",0X1,3);
	SetRegEx(0XF548,"T",0X1,3);
	SetRegEx(0XF552,"T",0X1,3);
	SetRegEx(0XF566,"T",0X1,3);
	SetRegEx(0XF59A,"T",0X1,3);
	SetRegEx(0XF59C,"T",0X1,3);
	SetRegEx(0XF5A0,"T",0X1,3);
	SetRegEx(0XF5B0,"T",0X1,3);
	SetRegEx(0XF5C4,"T",0X1,3);
	SetRegEx(0XF5F6,"T",0X1,3);
	SetRegEx(0XF5F8,"T",0X1,3);
	SetRegEx(0XF5FC,"T",0X1,3);
	SetRegEx(0XF60C,"T",0X1,3);
	SetRegEx(0XF620,"T",0X1,3);
	SetRegEx(0XF656,"T",0X1,3);
	SetRegEx(0XF65C,"T",0X1,3);
	SetRegEx(0XF66A,"T",0X1,3);
	SetRegEx(0XF670,"T",0X1,3);
	SetRegEx(0XF682,"T",0X1,3);
	SetRegEx(0XF688,"T",0X1,3);
	SetRegEx(0XF68E,"T",0X1,3);
	SetRegEx(0XF6A0,"T",0X1,3);
	SetRegEx(0XF6A6,"T",0X1,3);
	SetRegEx(0XF6D6,"T",0X1,3);
	SetRegEx(0XF6D8,"T",0X1,3);
	SetRegEx(0XF6DC,"T",0X1,3);
	SetRegEx(0XF70E,"T",0X1,3);
	SetRegEx(0XF710,"T",0X1,3);
	SetRegEx(0XF714,"T",0X1,3);
	SetRegEx(0XF79E,"T",0X1,3);
	SetRegEx(0XF7A2,"T",0X1,3);
	SetRegEx(0XF7D2,"T",0X1,3);
	SetRegEx(0XF7DC,"T",0X1,3);
	SetRegEx(0XF7E0,"T",0X1,3);
	SetRegEx(0XF7E4,"T",0X1,3);
	SetRegEx(0XF8BC,"T",0X1,3);
	SetRegEx(0XF8C4,"T",0X1,3);
	SetRegEx(0XF8D2,"T",0X1,3);
	SetRegEx(0XF8FC,"T",0X1,3);
	SetRegEx(0XF902,"T",0X1,3);
	SetRegEx(0XF906,"T",0X1,3);
	SetRegEx(0XF924,"T",0X1,3);
	SetRegEx(0XF92C,"T",0X1,3);
	SetRegEx(0XF93C,"T",0X1,3);
	SetRegEx(0XF940,"T",0X1,3);
	SetRegEx(0XF954,"T",0X1,3);
	SetRegEx(0XF95E,"T",0X1,3);
	SetRegEx(0XF972,"T",0X1,3);
	SetRegEx(0XF976,"T",0X1,3);
	SetRegEx(0XF9AE,"T",0X1,3);
	SetRegEx(0XF9B2,"T",0X1,3);
	SetRegEx(0XF9B6,"T",0X1,3);
	SetRegEx(0XF9DE,"T",0X1,3);
	SetRegEx(0XF9F4,"T",0X1,3);
	SetRegEx(0XFA00,"T",0X1,3);
	SetRegEx(0XFA1C,"T",0X1,3);
	SetRegEx(0XFA20,"T",0X1,3);
	SetRegEx(0XFA24,"T",0X1,3);
	SetRegEx(0XFA26,"T",0X1,3);
	SetRegEx(0XFA2C,"T",0X1,3);
	SetRegEx(0XFA48,"T",0X1,3);
	SetRegEx(0XFA4C,"T",0X1,3);
	SetRegEx(0XFA50,"T",0X1,3);
	SetRegEx(0XFA52,"T",0X1,3);
	SetRegEx(0XFA58,"T",0X1,3);
	SetRegEx(0XFA76,"T",0X1,3);
	SetRegEx(0XFA78,"T",0X1,3);
	SetRegEx(0XFA7C,"T",0X1,3);
	SetRegEx(0XFA8C,"T",0X1,3);
	SetRegEx(0XFAAC,"T",0X1,3);
	SetRegEx(0XFAB4,"T",0X1,3);
	SetRegEx(0XFBA0,"T",0X1,3);
	SetRegEx(0XFBB2,"T",0X1,3);
	SetRegEx(0XFBB8,"T",0X1,3);
	SetRegEx(0XFBC8,"T",0X1,3);
	SetRegEx(0XFBD8,"T",0X1,3);
	SetRegEx(0XFBF6,"T",0X1,3);
	SetRegEx(0XFBFA,"T",0X1,3);
	SetRegEx(0XFC06,"T",0X1,3);
	SetRegEx(0XFC1C,"T",0X1,3);
	SetRegEx(0XFC32,"T",0X1,3);
	SetRegEx(0XFC58,"T",0X1,3);
	SetRegEx(0XFC5E,"T",0X1,3);
	SetRegEx(0XFC60,"T",0X1,3);
	SetRegEx(0XFC68,"T",0X1,3);
	SetRegEx(0XFC72,"T",0X1,3);
	SetRegEx(0XFC76,"T",0X1,3);
	SetRegEx(0XFC8A,"T",0X1,3);
	SetRegEx(0XFC8C,"T",0X1,3);
	SetRegEx(0XFCA0,"T",0X1,3);
	SetRegEx(0XFCA2,"T",0X1,3);
	SetRegEx(0XFCB6,"T",0X1,3);
	SetRegEx(0XFCB8,"T",0X1,3);
	SetRegEx(0XFCCC,"T",0X1,3);
	SetRegEx(0XFCCE,"T",0X1,3);
	SetRegEx(0XFCDC,"T",0X1,3);
	SetRegEx(0XFCDE,"T",0X1,3);
	SetRegEx(0XFCE8,"T",0X1,3);
	SetRegEx(0XFCF6,"T",0X1,3);
	SetRegEx(0XFCFA,"T",0X1,3);
	SetRegEx(0XFD02,"T",0X1,3);
	SetRegEx(0XFD24,"T",0X1,3);
	SetRegEx(0XFD26,"T",0X1,3);
	SetRegEx(0XFD28,"T",0X1,3);
	SetRegEx(0XFD32,"T",0X1,3);
	SetRegEx(0XFD4E,"T",0X1,3);
	SetRegEx(0XFD54,"T",0X1,3);
	SetRegEx(0XFD66,"T",0X1,3);
	SetRegEx(0XFD6C,"T",0X1,3);
	SetRegEx(0XFD8E,"T",0X1,3);
	SetRegEx(0XFDCC,"T",0X1,3);
	SetRegEx(0XFDE4,"T",0X1,3);
	SetRegEx(0XFE5C,"T",0X1,3);
	SetRegEx(0XFE74,"T",0X1,3);
	SetRegEx(0XFE7C,"T",0X1,3);
	SetRegEx(0XFE80,"T",0X1,3);
	SetRegEx(0XFE96,"T",0X1,3);
	SetRegEx(0XFE98,"T",0X1,3);
	SetRegEx(0XFED6,"T",0X1,3);
	SetRegEx(0XFF00,"T",0X1,3);
	SetRegEx(0XFF16,"T",0X1,3);
	SetRegEx(0XFF32,"T",0X1,3);
	SetRegEx(0XFF6C,"T",0X1,3);
	SetRegEx(0XFF74,"T",0X1,3);
	SetRegEx(0XFF8E,"T",0X1,3);
	SetRegEx(0XFFB4,"T",0X1,3);
	SetRegEx(0XFFB8,"T",0X1,3);
	SetRegEx(0XFFE8,"T",0X1,3);
	SetRegEx(0X1020C,"T",0X1,3);
	SetRegEx(0X1040E,"T",0X1,3);
	SetRegEx(0X1072A,"T",0X1,3);
	SetRegEx(0X1072E,"T",0X1,3);
	SetRegEx(0X10770,"T",0X1,3);
	SetRegEx(0X1079C,"T",0X1,3);
	SetRegEx(0X107CA,"T",0X1,3);
	SetRegEx(0X107F2,"T",0X1,3);
	SetRegEx(0X107FE,"T",0X1,3);
	SetRegEx(0X10808,"T",0X1,3);
	SetRegEx(0X10836,"T",0X1,3);
	SetRegEx(0X1083C,"T",0X1,3);
	SetRegEx(0X10864,"T",0X1,3);
	SetRegEx(0X10872,"T",0X1,3);
	SetRegEx(0X10882,"T",0X1,3);
	SetRegEx(0X108B8,"T",0X1,3);
	SetRegEx(0X108E8,"T",0X1,3);
	SetRegEx(0X108EE,"T",0X1,3);
	SetRegEx(0X10908,"T",0X1,3);
	SetRegEx(0X10938,"T",0X1,3);
	SetRegEx(0X1095E,"T",0X1,3);
	SetRegEx(0X1098A,"T",0X1,3);
	SetRegEx(0X109B0,"T",0X1,3);
	SetRegEx(0X109BA,"T",0X1,3);
	SetRegEx(0X109C0,"T",0X1,3);
	SetRegEx(0X109C8,"T",0X1,3);
	SetRegEx(0X109E2,"T",0X1,3);
	SetRegEx(0X10A14,"T",0X1,3);
	SetRegEx(0X10A40,"T",0X1,3);
	SetRegEx(0X10A42,"T",0X1,3);
	SetRegEx(0X10A44,"T",0X1,3);
	SetRegEx(0X10A68,"T",0X1,3);
	SetRegEx(0X10A72,"T",0X1,3);
	SetRegEx(0X10A78,"T",0X1,3);
	SetRegEx(0X10A80,"T",0X1,3);
	SetRegEx(0X10A82,"T",0X1,3);
	SetRegEx(0X10A9C,"T",0X1,3);
	SetRegEx(0X10ACA,"T",0X1,3);
	SetRegEx(0X10AF6,"T",0X1,3);
	SetRegEx(0X10AF8,"T",0X1,3);
	SetRegEx(0X10B18,"T",0X1,3);
	SetRegEx(0X10B4A,"T",0X1,3);
	SetRegEx(0X10B50,"T",0X1,3);
	SetRegEx(0X10B58,"T",0X1,3);
	SetRegEx(0X10B7E,"T",0X1,3);
	SetRegEx(0X10B94,"T",0X1,3);
	SetRegEx(0X10B98,"T",0X1,3);
	SetRegEx(0X10B9A,"T",0X1,3);
	SetRegEx(0X10B9E,"T",0X1,3);
	SetRegEx(0X10BA6,"T",0X1,3);
	SetRegEx(0X10BAE,"T",0X1,3);
	SetRegEx(0X10BB0,"T",0X1,3);
	SetRegEx(0X10BB4,"T",0X1,3);
	SetRegEx(0X10BE0,"T",0X1,3);
	SetRegEx(0X10BE4,"T",0X1,3);
	SetRegEx(0X10C0E,"T",0X1,3);
	SetRegEx(0X10C16,"T",0X1,3);
	SetRegEx(0X10C5E,"T",0X1,3);
	SetRegEx(0X10C64,"T",0X1,3);
	SetRegEx(0X10CA6,"T",0X1,3);
	SetRegEx(0X10CBA,"T",0X1,3);
	SetRegEx(0X10CD6,"T",0X1,3);
	SetRegEx(0X10D16,"T",0X1,3);
	SetRegEx(0X10D54,"T",0X1,3);
	SetRegEx(0X10D80,"T",0X1,3);
	SetRegEx(0X10D8C,"T",0X1,3);
	SetRegEx(0X10D9C,"T",0X1,3);
	SetRegEx(0X10DB2,"T",0X1,3);
	SetRegEx(0X10DC0,"T",0X1,3);
	SetRegEx(0X10DC6,"T",0X1,3);
	SetRegEx(0X10DE4,"T",0X1,3);
	SetRegEx(0X10DEE,"T",0X1,3);
	SetRegEx(0X10E00,"T",0X1,3);
	SetRegEx(0X10E04,"T",0X1,3);
	SetRegEx(0X10E10,"T",0X1,3);
	SetRegEx(0X10E22,"T",0X1,3);
	SetRegEx(0X10E32,"T",0X1,3);
	SetRegEx(0X10E36,"T",0X1,3);
	SetRegEx(0X10E3A,"T",0X1,3);
	SetRegEx(0X10E3E,"T",0X1,3);
	SetRegEx(0X10E4C,"T",0X1,3);
	SetRegEx(0X10E5A,"T",0X1,3);
	SetRegEx(0X10E6C,"T",0X1,3);
	SetRegEx(0X10E76,"T",0X1,3);
	SetRegEx(0X10E78,"T",0X1,3);
	SetRegEx(0X10E80,"T",0X1,3);
	SetRegEx(0X10E96,"T",0X1,3);
	SetRegEx(0X10EAC,"T",0X1,3);
	SetRegEx(0X10ECA,"T",0X1,3);
	SetRegEx(0X10EDA,"T",0X1,3);
	SetRegEx(0X10EDE,"T",0X1,3);
	SetRegEx(0X10EEE,"T",0X1,3);
	SetRegEx(0X10F00,"T",0X1,3);
	SetRegEx(0X10F04,"T",0X1,3);
	SetRegEx(0X10F18,"T",0X1,3);
	SetRegEx(0X10F20,"T",0X1,3);
	SetRegEx(0X10F28,"T",0X1,3);
	SetRegEx(0X10F2C,"T",0X1,3);
	SetRegEx(0X10F42,"T",0X1,3);
	SetRegEx(0X10F74,"T",0X1,3);
	SetRegEx(0X10F76,"T",0X1,3);
	SetRegEx(0X10F7A,"T",0X1,3);
	SetRegEx(0X10FAA,"T",0X1,3);
	SetRegEx(0X10FBA,"T",0X1,3);
	SetRegEx(0X10FC0,"T",0X1,3);
	SetRegEx(0X10FDE,"T",0X1,3);
	SetRegEx(0X10FE8,"T",0X1,3);
	SetRegEx(0X11002,"T",0X1,3);
	SetRegEx(0X1100E,"T",0X1,3);
	SetRegEx(0X11022,"T",0X1,3);
	SetRegEx(0X11036,"T",0X1,3);
	SetRegEx(0X1103A,"T",0X1,3);
	SetRegEx(0X1103E,"T",0X1,3);
	SetRegEx(0X11042,"T",0X1,3);
	SetRegEx(0X11050,"T",0X1,3);
	SetRegEx(0X1105A,"T",0X1,3);
	SetRegEx(0X1106E,"T",0X1,3);
	SetRegEx(0X11076,"T",0X1,3);
	SetRegEx(0X1107E,"T",0X1,3);
	SetRegEx(0X11094,"T",0X1,3);
	SetRegEx(0X110A6,"T",0X1,3);
	SetRegEx(0X110A8,"T",0X1,3);
	SetRegEx(0X110DA,"T",0X1,3);
	SetRegEx(0X110F6,"T",0X1,3);
	SetRegEx(0X11128,"T",0X1,3);
	SetRegEx(0X1113A,"T",0X1,3);
	SetRegEx(0X11182,"T",0X1,3);
	SetRegEx(0X11184,"T",0X1,3);
	SetRegEx(0X11188,"T",0X1,3);
	SetRegEx(0X111CC,"T",0X1,3);
	SetRegEx(0X111D4,"T",0X1,3);
	SetRegEx(0X111DA,"T",0X1,3);
	SetRegEx(0X111DC,"T",0X1,3);
	SetRegEx(0X1120C,"T",0X1,3);
	SetRegEx(0X11212,"T",0X1,3);
	SetRegEx(0X11214,"T",0X1,3);
	SetRegEx(0X1121C,"T",0X1,3);
	SetRegEx(0X11220,"T",0X1,3);
	SetRegEx(0X1122C,"T",0X1,3);
	SetRegEx(0X11234,"T",0X1,3);
	SetRegEx(0X11242,"T",0X1,3);
	SetRegEx(0X11248,"T",0X1,3);
	SetRegEx(0X11264,"T",0X1,3);
	SetRegEx(0X11290,"T",0X1,3);
	SetRegEx(0X1129C,"T",0X1,3);
	SetRegEx(0X112A2,"T",0X1,3);
	SetRegEx(0X112A4,"T",0X1,3);
	SetRegEx(0X112CE,"T",0X1,3);
	SetRegEx(0X112DE,"T",0X1,3);
	SetRegEx(0X112E6,"T",0X1,3);
	SetRegEx(0X112EA,"T",0X1,3);
	SetRegEx(0X11304,"T",0X1,3);
	SetRegEx(0X11312,"T",0X1,3);
	SetRegEx(0X11314,"T",0X1,3);
	SetRegEx(0X11318,"T",0X1,3);
	SetRegEx(0X11332,"T",0X1,3);
	SetRegEx(0X11336,"T",0X1,3);
	SetRegEx(0X11346,"T",0X1,3);
	SetRegEx(0X1134E,"T",0X1,3);
	SetRegEx(0X11356,"T",0X1,3);
	SetRegEx(0X1135A,"T",0X1,3);
	SetRegEx(0X113BA,"T",0X1,3);
	SetRegEx(0X113BE,"T",0X1,3);
	SetRegEx(0X113DC,"T",0X1,3);
	SetRegEx(0X113F8,"T",0X1,3);
	SetRegEx(0X11400,"T",0X1,3);
	SetRegEx(0X11426,"T",0X1,3);
	SetRegEx(0X1142C,"T",0X1,3);
	SetRegEx(0X1143E,"T",0X1,3);
	SetRegEx(0X1144E,"T",0X1,3);
	SetRegEx(0X11458,"T",0X1,3);
	SetRegEx(0X11468,"T",0X1,3);
	SetRegEx(0X11492,"T",0X1,3);
	SetRegEx(0X114A6,"T",0X1,3);
	SetRegEx(0X114A8,"T",0X1,3);
	SetRegEx(0X114AA,"T",0X1,3);
	SetRegEx(0X114AC,"T",0X1,3);
	SetRegEx(0X114AE,"T",0X1,3);
	SetRegEx(0X114B8,"T",0X1,3);
	SetRegEx(0X114D0,"T",0X1,3);
	SetRegEx(0X114D6,"T",0X1,3);
	SetRegEx(0X11500,"T",0X1,3);
	SetRegEx(0X1151C,"T",0X1,3);
	SetRegEx(0X11524,"T",0X1,3);
	SetRegEx(0X1154A,"T",0X1,3);
	SetRegEx(0X11550,"T",0X1,3);
	SetRegEx(0X11566,"T",0X1,3);
	SetRegEx(0X11576,"T",0X1,3);
	SetRegEx(0X11580,"T",0X1,3);
	SetRegEx(0X11590,"T",0X1,3);
	SetRegEx(0X115B4,"T",0X1,3);
	SetRegEx(0X115CC,"T",0X1,3);
	SetRegEx(0X115D2,"T",0X1,3);
	SetRegEx(0X115D8,"T",0X1,3);
	SetRegEx(0X115EE,"T",0X1,3);
	SetRegEx(0X115FC,"T",0X1,3);
	SetRegEx(0X11618,"T",0X1,3);
	SetRegEx(0X11634,"T",0X1,3);
	SetRegEx(0X11642,"T",0X1,3);
	SetRegEx(0X11656,"T",0X1,3);
	SetRegEx(0X11660,"T",0X1,3);
	SetRegEx(0X11662,"T",0X1,3);
	SetRegEx(0X1166A,"T",0X1,3);
	SetRegEx(0X11670,"T",0X1,3);
	SetRegEx(0X11682,"T",0X1,3);
	SetRegEx(0X11692,"T",0X1,3);
	SetRegEx(0X116A2,"T",0X1,3);
	SetRegEx(0X116AC,"T",0X1,3);
	SetRegEx(0X116D0,"T",0X1,3);
	SetRegEx(0X116D2,"T",0X1,3);
	SetRegEx(0X116FC,"T",0X1,3);
	SetRegEx(0X11700,"T",0X1,3);
	SetRegEx(0X11712,"T",0X1,3);
	SetRegEx(0X1171A,"T",0X1,3);
	SetRegEx(0X1171E,"T",0X1,3);
	SetRegEx(0X11722,"T",0X1,3);
	SetRegEx(0X11726,"T",0X1,3);
	SetRegEx(0X11728,"T",0X1,3);
	SetRegEx(0X11730,"T",0X1,3);
	SetRegEx(0X11732,"T",0X1,3);
	SetRegEx(0X11780,"T",0X1,3);
	SetRegEx(0X11786,"T",0X1,3);
	SetRegEx(0X117CA,"T",0X1,3);
	SetRegEx(0X117D8,"T",0X1,3);
	SetRegEx(0X117E6,"T",0X1,3);
	SetRegEx(0X117F4,"T",0X1,3);
	SetRegEx(0X11810,"T",0X1,3);
	SetRegEx(0X1181A,"T",0X1,3);
	SetRegEx(0X11828,"T",0X1,3);
	SetRegEx(0X1182A,"T",0X1,3);
	SetRegEx(0X11860,"T",0X1,3);
	SetRegEx(0X1186A,"T",0X1,3);
	SetRegEx(0X1186E,"T",0X1,3);
	SetRegEx(0X1187C,"T",0X1,3);
	SetRegEx(0X1188A,"T",0X1,3);
	SetRegEx(0X118AA,"T",0X1,3);
	SetRegEx(0X118B4,"T",0X1,3);
	SetRegEx(0X118BA,"T",0X1,3);
	SetRegEx(0X118F6,"T",0X1,3);
	SetRegEx(0X11938,"T",0X1,3);
	SetRegEx(0X11972,"T",0X1,3);
	SetRegEx(0X11974,"T",0X1,3);
	SetRegEx(0X1197A,"T",0X1,3);
	SetRegEx(0X1198A,"T",0X1,3);
	SetRegEx(0X11998,"T",0X1,3);
	SetRegEx(0X119A8,"T",0X1,3);
	SetRegEx(0X119C0,"T",0X1,3);
	SetRegEx(0X119CE,"T",0X1,3);
	SetRegEx(0X119D0,"T",0X1,3);
	SetRegEx(0X119F8,"T",0X1,3);
	SetRegEx(0X11A18,"T",0X1,3);
	SetRegEx(0X11A34,"T",0X1,3);
	SetRegEx(0X11A70,"T",0X1,3);
	SetRegEx(0X11B06,"T",0X1,3);
	SetRegEx(0X11B0A,"T",0X1,3);
	SetRegEx(0X11B1C,"T",0X1,3);
	SetRegEx(0X11B20,"T",0X1,3);
	SetRegEx(0X11B34,"T",0X1,3);
	SetRegEx(0X11B4C,"T",0X1,3);
	SetRegEx(0X11B50,"T",0X1,3);
	SetRegEx(0X11B64,"T",0X1,3);
	SetRegEx(0X11B6C,"T",0X1,3);
	SetRegEx(0X11B80,"T",0X1,3);
	SetRegEx(0X11B84,"T",0X1,3);
	SetRegEx(0X11B98,"T",0X1,3);
	SetRegEx(0X11BA0,"T",0X1,3);
	SetRegEx(0X11BDA,"T",0X1,3);
	SetRegEx(0X11BE6,"T",0X1,3);
	SetRegEx(0X11BF2,"T",0X1,3);
	SetRegEx(0X11BFA,"T",0X1,3);
	SetRegEx(0X11C06,"T",0X1,3);
	SetRegEx(0X11C08,"T",0X1,3);
	SetRegEx(0X11C26,"T",0X1,3);
	SetRegEx(0X11C40,"T",0X1,3);
	SetRegEx(0X11C68,"T",0X1,3);
	SetRegEx(0X11C8A,"T",0X1,3);
	SetRegEx(0X11CA0,"T",0X1,3);
	SetRegEx(0X11CA2,"T",0X1,3);
	SetRegEx(0X11CAE,"T",0X1,3);
	SetRegEx(0X11CB4,"T",0X1,3);
	SetRegEx(0X11CC0,"T",0X1,3);
	SetRegEx(0X11CC2,"T",0X1,3);
	SetRegEx(0X11CEA,"T",0X1,3);
	SetRegEx(0X11CEC,"T",0X1,3);
	SetRegEx(0X11D18,"T",0X1,3);
	SetRegEx(0X11D1A,"T",0X1,3);
	SetRegEx(0X11D1C,"T",0X1,3);
	SetRegEx(0X11D20,"T",0X1,3);
	SetRegEx(0X11D30,"T",0X1,3);
	SetRegEx(0X11D32,"T",0X1,3);
	SetRegEx(0X11D34,"T",0X1,3);
	SetRegEx(0X11D36,"T",0X1,3);
	SetRegEx(0X11D38,"T",0X1,3);
	SetRegEx(0X11D3A,"T",0X1,3);
	SetRegEx(0X11D3C,"T",0X1,3);
	SetRegEx(0X11D3E,"T",0X1,3);
	SetRegEx(0X11D68,"T",0X1,3);
	SetRegEx(0X11D70,"T",0,3);
	SetRegEx(0X11F90,"T",0X1,3);
	SetRegEx(0X11F96,"T",0X1,3);
	SetRegEx(0X11FA2,"T",0X1,3);
	SetRegEx(0X11FE0,"T",0X1,3);
	SetRegEx(0X11FE6,"T",0X1,3);
	SetRegEx(0X11FFE,"T",0X1,3);
	SetRegEx(0X1202E,"T",0X1,3);
	SetRegEx(0X12034,"T",0X1,3);
	SetRegEx(0X12084,"T",0X1,3);
	SetRegEx(0X12086,"T",0X1,3);
	SetRegEx(0X1209A,"T",0X1,3);
	SetRegEx(0X1209C,"T",0X1,3);
	SetRegEx(0X120F8,"T",0X1,3);
	SetRegEx(0X12102,"T",0X1,3);
	SetRegEx(0X12104,"T",0X1,3);
	SetRegEx(0X12152,"T",0X1,3);
	SetRegEx(0X1215C,"T",0X1,3);
	SetRegEx(0X1215E,"T",0X1,3);
	SetRegEx(0X12170,"T",0X1,3);
	SetRegEx(0X12172,"T",0X1,3);
	SetRegEx(0X12184,"T",0X1,3);
	SetRegEx(0X12192,"T",0X1,3);
	SetRegEx(0X121B2,"T",0X1,3);
	SetRegEx(0X121B6,"T",0X1,3);
	SetRegEx(0X121D4,"T",0X1,3);
	SetRegEx(0X121DE,"T",0X1,3);
	SetRegEx(0X121E0,"T",0X1,3);
	SetRegEx(0X121F2,"T",0X1,3);
	SetRegEx(0X1221E,"T",0X1,3);
	SetRegEx(0X12224,"T",0X1,3);
	SetRegEx(0X12238,"T",0X1,3);
	SetRegEx(0X1223C,"T",0X1,3);
	SetRegEx(0X1224A,"T",0X1,3);
	SetRegEx(0X1224E,"T",0X1,3);
	SetRegEx(0X12284,"T",0X1,3);
	SetRegEx(0X12296,"T",0X1,3);
	SetRegEx(0X122A6,"T",0X1,3);
	SetRegEx(0X122AA,"T",0X1,3);
	SetRegEx(0X122AC,"T",0X1,3);
	SetRegEx(0X122B2,"T",0X1,3);
	SetRegEx(0X122C8,"T",0X1,3);
	SetRegEx(0X122D4,"T",0X1,3);
	SetRegEx(0X122E0,"T",0X1,3);
	SetRegEx(0X122E6,"T",0X1,3);
	SetRegEx(0X122F6,"T",0X1,3);
	SetRegEx(0X122FE,"T",0X1,3);
	SetRegEx(0X12302,"T",0X1,3);
	SetRegEx(0X1230C,"T",0X1,3);
	SetRegEx(0X12318,"T",0X1,3);
	SetRegEx(0X12336,"T",0X1,3);
	SetRegEx(0X1233C,"T",0X1,3);
	SetRegEx(0X12362,"T",0X1,3);
	SetRegEx(0X12368,"T",0X1,3);
	SetRegEx(0X12376,"T",0X1,3);
	SetRegEx(0X12378,"T",0X1,3);
	SetRegEx(0X123F8,"T",0X1,3);
	SetRegEx(0X12408,"T",0X1,3);
	SetRegEx(0X1240C,"T",0X1,3);
	SetRegEx(0X12422,"T",0X1,3);
	SetRegEx(0X12426,"T",0X1,3);
	SetRegEx(0X1242E,"T",0X1,3);
	SetRegEx(0X12436,"T",0X1,3);
	SetRegEx(0X1246E,"T",0X1,3);
	SetRegEx(0X12474,"T",0X1,3);
	SetRegEx(0X1247E,"T",0X1,3);
	SetRegEx(0X12494,"T",0X1,3);
	SetRegEx(0X124A0,"T",0X1,3);
	SetRegEx(0X124A6,"T",0X1,3);
	SetRegEx(0X124AE,"T",0X1,3);
	SetRegEx(0X124B4,"T",0X1,3);
	SetRegEx(0X124BE,"T",0X1,3);
	SetRegEx(0X124CE,"T",0X1,3);
	SetRegEx(0X124DA,"T",0X1,3);
	SetRegEx(0X124E2,"T",0X1,3);
	SetRegEx(0X124EE,"T",0X1,3);
	SetRegEx(0X124F4,"T",0X1,3);
	SetRegEx(0X124FA,"T",0X1,3);
	SetRegEx(0X12520,"T",0X1,3);
	SetRegEx(0X1252E,"T",0X1,3);
	SetRegEx(0X1254E,"T",0X1,3);
	SetRegEx(0X12552,"T",0X1,3);
	SetRegEx(0X1255E,"T",0X1,3);
	SetRegEx(0X1257E,"T",0X1,3);
	SetRegEx(0X12584,"T",0X1,3);
	SetRegEx(0X1259C,"T",0X1,3);
	SetRegEx(0X1259E,"T",0X1,3);
	SetRegEx(0X125D2,"T",0X1,3);
	SetRegEx(0X125E2,"T",0X1,3);
	SetRegEx(0X125FE,"T",0X1,3);
	SetRegEx(0X1260E,"T",0X1,3);
	SetRegEx(0X1261A,"T",0X1,3);
	SetRegEx(0X12622,"T",0X1,3);
	SetRegEx(0X12626,"T",0X1,3);
	SetRegEx(0X12636,"T",0X1,3);
	SetRegEx(0X12638,"T",0X1,3);
	SetRegEx(0X1263C,"T",0X1,3);
	SetRegEx(0X12648,"T",0X1,3);
	SetRegEx(0X12662,"T",0X1,3);
	SetRegEx(0X12668,"T",0X1,3);
	SetRegEx(0X1266E,"T",0X1,3);
	SetRegEx(0X1268C,"T",0X1,3);
	SetRegEx(0X12696,"T",0X1,3);
	SetRegEx(0X12698,"T",0X1,3);
	SetRegEx(0X126A0,"T",0X1,3);
	SetRegEx(0X126AC,"T",0X1,3);
	SetRegEx(0X126B2,"T",0X1,3);
	SetRegEx(0X126B8,"T",0X1,3);
	SetRegEx(0X126E8,"T",0X1,3);
	SetRegEx(0X12712,"T",0X1,3);
	SetRegEx(0X1272C,"T",0X1,3);
	SetRegEx(0X12736,"T",0X1,3);
	SetRegEx(0X12740,"T",0X1,3);
	SetRegEx(0X12750,"T",0X1,3);
	SetRegEx(0X12756,"T",0X1,3);
	SetRegEx(0X1275C,"T",0X1,3);
	SetRegEx(0X1278A,"T",0X1,3);
	SetRegEx(0X1279A,"T",0X1,3);
	SetRegEx(0X127A6,"T",0X1,3);
	SetRegEx(0X127C2,"T",0X1,3);
	SetRegEx(0X127D8,"T",0X1,3);
	SetRegEx(0X127DE,"T",0X1,3);
	SetRegEx(0X127E6,"T",0X1,3);
	SetRegEx(0X127E8,"T",0X1,3);
	SetRegEx(0X127F4,"T",0X1,3);
	SetRegEx(0X12816,"T",0X1,3);
	SetRegEx(0X12822,"T",0X1,3);
	SetRegEx(0X12826,"T",0X1,3);
	SetRegEx(0X12838,"T",0X1,3);
	SetRegEx(0X1283A,"T",0X1,3);
	SetRegEx(0X12848,"T",0X1,3);
	SetRegEx(0X1284C,"T",0X1,3);
	SetRegEx(0X12860,"T",0X1,3);
	SetRegEx(0X12862,"T",0X1,3);
	SetRegEx(0X12864,"T",0X1,3);
	SetRegEx(0X12866,"T",0X1,3);
	SetRegEx(0X12868,"T",0X1,3);
	SetRegEx(0X128C4,"T",0X1,3);
	SetRegEx(0X128E6,"T",0X1,3);
	SetRegEx(0X128FC,"T",0X1,3);
	SetRegEx(0X1290C,"T",0X1,3);
	SetRegEx(0X12912,"T",0X1,3);
	SetRegEx(0X12914,"T",0X1,3);
	SetRegEx(0X1293E,"T",0X1,3);
	SetRegEx(0X12988,"T",0X1,3);
	SetRegEx(0X1298C,"T",0X1,3);
	SetRegEx(0X1299C,"T",0X1,3);
	SetRegEx(0X129AE,"T",0X1,3);
	SetRegEx(0X129BC,"T",0X1,3);
	SetRegEx(0X129E2,"T",0X1,3);
	SetRegEx(0X12A04,"T",0X1,3);
	SetRegEx(0X12A24,"T",0X1,3);
	SetRegEx(0X12A4E,"T",0X1,3);
	SetRegEx(0X12A52,"T",0X1,3);
	SetRegEx(0X12A60,"T",0X1,3);
	SetRegEx(0X12A76,"T",0X1,3);
	SetRegEx(0X12A82,"T",0X1,3);
	SetRegEx(0X12A9C,"T",0X1,3);
	SetRegEx(0X12AA2,"T",0X1,3);
	SetRegEx(0X12AAC,"T",0X1,3);
	SetRegEx(0X12AB2,"T",0X1,3);
	SetRegEx(0X12AC8,"T",0X1,3);
	SetRegEx(0X12B04,"T",0X1,3);
	SetRegEx(0X12B08,"T",0X1,3);
	SetRegEx(0X12B0A,"T",0X1,3);
	SetRegEx(0X12B0E,"T",0X1,3);
	SetRegEx(0X12B16,"T",0X1,3);
	SetRegEx(0X12B1C,"T",0X1,3);
	SetRegEx(0X12B20,"T",0X1,3);
	SetRegEx(0X12B2C,"T",0X1,3);
	SetRegEx(0X12B44,"T",0X1,3);
	SetRegEx(0X12B4A,"T",0X1,3);
	SetRegEx(0X12B54,"T",0X1,3);
	SetRegEx(0X12B5C,"T",0X1,3);
	SetRegEx(0X12B62,"T",0X1,3);
	SetRegEx(0X12B74,"T",0X1,3);
	SetRegEx(0X12B90,"T",0X1,3);
	SetRegEx(0X12BB0,"T",0X1,3);
	SetRegEx(0X12BC2,"T",0X1,3);
	SetRegEx(0X12BC6,"T",0X1,3);
	SetRegEx(0X12BCA,"T",0X1,3);
	SetRegEx(0X12C14,"T",0X1,3);
	SetRegEx(0X12C2A,"T",0X1,3);
	SetRegEx(0X12C3A,"T",0X1,3);
	SetRegEx(0X12C3E,"T",0X1,3);
	SetRegEx(0X12C46,"T",0X1,3);
	SetRegEx(0X12C4A,"T",0X1,3);
	SetRegEx(0X12C4E,"T",0X1,3);
	SetRegEx(0X12C8E,"T",0X1,3);
	SetRegEx(0X12C9E,"T",0X1,3);
	SetRegEx(0X12CA2,"T",0X1,3);
	SetRegEx(0X12CC4,"T",0X1,3);
	SetRegEx(0X12CCC,"T",0X1,3);
	SetRegEx(0X12CDC,"T",0X1,3);
	SetRegEx(0X12D04,"T",0X1,3);
	SetRegEx(0X12D08,"T",0X1,3);
	SetRegEx(0X12D0A,"T",0X1,3);
	SetRegEx(0X12D0E,"T",0X1,3);
	SetRegEx(0X12D26,"T",0X1,3);
	SetRegEx(0X12D48,"T",0X1,3);
	SetRegEx(0X12D58,"T",0X1,3);
	SetRegEx(0X12D70,"T",0X1,3);
	SetRegEx(0X12D76,"T",0X1,3);
	SetRegEx(0X12D8E,"T",0X1,3);
	SetRegEx(0X12DD8,"T",0X1,3);
	SetRegEx(0X12DDC,"T",0X1,3);
	SetRegEx(0X12DE2,"T",0X1,3);
	SetRegEx(0X12DE6,"T",0X1,3);
	SetRegEx(0X12DEC,"T",0X1,3);
	SetRegEx(0X12DF2,"T",0X1,3);
	SetRegEx(0X12DF6,"T",0X1,3);
	SetRegEx(0X12DFA,"T",0X1,3);
	SetRegEx(0X12DFC,"T",0X1,3);
	SetRegEx(0X12E08,"T",0X1,3);
	SetRegEx(0X12E0C,"T",0X1,3);
	SetRegEx(0X12E12,"T",0X1,3);
	SetRegEx(0X12E18,"T",0X1,3);
	SetRegEx(0X12E44,"T",0X1,3);
	SetRegEx(0X12E56,"T",0X1,3);
	SetRegEx(0X12E5A,"T",0X1,3);
	SetRegEx(0X12E6E,"T",0X1,3);
	SetRegEx(0X12E74,"T",0X1,3);
	SetRegEx(0X12E86,"T",0X1,3);
	SetRegEx(0X12E8E,"T",0X1,3);
	SetRegEx(0X12EB8,"T",0X1,3);
	SetRegEx(0X12EBC,"T",0X1,3);
	SetRegEx(0X12ED4,"T",0X1,3);
	SetRegEx(0X12EE8,"T",0X1,3);
	SetRegEx(0X12EFE,"T",0X1,3);
	SetRegEx(0X12F18,"T",0X1,3);
	SetRegEx(0X12F20,"T",0X1,3);
	SetRegEx(0X12F3A,"T",0X1,3);
	SetRegEx(0X12F6C,"T",0X1,3);
	SetRegEx(0X12F80,"T",0X1,3);
	SetRegEx(0X12F84,"T",0X1,3);
	SetRegEx(0X12F88,"T",0X1,3);
	SetRegEx(0X12FA6,"T",0X1,3);
	SetRegEx(0X12FDC,"T",0X1,3);
	SetRegEx(0X13004,"T",0X1,3);
	SetRegEx(0X13014,"T",0X1,3);
	SetRegEx(0X13018,"T",0X1,3);
	SetRegEx(0X13028,"T",0X1,3);
	SetRegEx(0X1303C,"T",0X1,3);
	SetRegEx(0X13040,"T",0X1,3);
	SetRegEx(0X13046,"T",0X1,3);
	SetRegEx(0X130CA,"T",0X1,3);
	SetRegEx(0X130FA,"T",0X1,3);
	SetRegEx(0X13114,"T",0X1,3);
	SetRegEx(0X13118,"T",0X1,3);
	SetRegEx(0X1311C,"T",0X1,3);
	SetRegEx(0X131A2,"T",0X1,3);
	SetRegEx(0X131B6,"T",0X1,3);
	SetRegEx(0X131D6,"T",0X1,3);
	SetRegEx(0X131FC,"T",0X1,3);
	SetRegEx(0X13214,"T",0X1,3);
	SetRegEx(0X1324E,"T",0X1,3);
	SetRegEx(0X13266,"T",0X1,3);
	SetRegEx(0X13272,"T",0X1,3);
	SetRegEx(0X13276,"T",0X1,3);
	SetRegEx(0X1328C,"T",0X1,3);
	SetRegEx(0X13290,"T",0X1,3);
	SetRegEx(0X132D4,"T",0X1,3);
	SetRegEx(0X132D8,"T",0X1,3);
	SetRegEx(0X132DA,"T",0X1,3);
	SetRegEx(0X132E8,"T",0X1,3);
	SetRegEx(0X13312,"T",0X1,3);
	SetRegEx(0X13318,"T",0X1,3);
	SetRegEx(0X13322,"T",0X1,3);
	SetRegEx(0X13328,"T",0X1,3);
	SetRegEx(0X13348,"T",0X1,3);
	SetRegEx(0X13388,"T",0X1,3);
	SetRegEx(0X133D0,"T",0X1,3);
	SetRegEx(0X133D4,"T",0X1,3);
	SetRegEx(0X133E4,"T",0X1,3);
	SetRegEx(0X133E8,"T",0X1,3);
	SetRegEx(0X1340E,"T",0X1,3);
	SetRegEx(0X13462,"T",0X1,3);
	SetRegEx(0X1346C,"T",0X1,3);
	SetRegEx(0X134AE,"T",0X1,3);
	SetRegEx(0X134B4,"T",0X1,3);
	SetRegEx(0X134C6,"T",0X1,3);
	SetRegEx(0X134DA,"T",0X1,3);
	SetRegEx(0X134F8,"T",0X1,3);
	SetRegEx(0X13512,"T",0X1,3);
	SetRegEx(0X13520,"T",0X1,3);
	SetRegEx(0X13524,"T",0X1,3);
	SetRegEx(0X1353A,"T",0X1,3);
	SetRegEx(0X1354E,"T",0X1,3);
	SetRegEx(0X13554,"T",0X1,3);
	SetRegEx(0X1358E,"T",0X1,3);
	SetRegEx(0X135AE,"T",0X1,3);
	SetRegEx(0X135B2,"T",0X1,3);
	SetRegEx(0X135B8,"T",0X1,3);
	SetRegEx(0X135BE,"T",0X1,3);
	SetRegEx(0X135C2,"T",0X1,3);
	SetRegEx(0X135C6,"T",0X1,3);
	SetRegEx(0X135C8,"T",0X1,3);
	SetRegEx(0X135DA,"T",0X1,3);
	SetRegEx(0X135F6,"T",0X1,3);
	SetRegEx(0X13628,"T",0X1,3);
	SetRegEx(0X1362C,"T",0X1,3);
	SetRegEx(0X13648,"T",0X1,3);
	SetRegEx(0X1366C,"T",0X1,3);
	SetRegEx(0X1367E,"T",0X1,3);
	SetRegEx(0X13682,"T",0X1,3);
	SetRegEx(0X1369C,"T",0X1,3);
	SetRegEx(0X136B6,"T",0X1,3);
	SetRegEx(0X136CC,"T",0X1,3);
	SetRegEx(0X136E0,"T",0X1,3);
	SetRegEx(0X136F0,"T",0X1,3);
	SetRegEx(0X1370C,"T",0X1,3);
	SetRegEx(0X1373C,"T",0X1,3);
	SetRegEx(0X13754,"T",0X1,3);
	SetRegEx(0X13768,"T",0X1,3);
	SetRegEx(0X13776,"T",0X1,3);
	SetRegEx(0X13790,"T",0X1,3);
	SetRegEx(0X13796,"T",0X1,3);
	SetRegEx(0X137A0,"T",0X1,3);
	SetRegEx(0X137A6,"T",0X1,3);
	SetRegEx(0X137AC,"T",0X1,3);
	SetRegEx(0X137BE,"T",0X1,3);
	SetRegEx(0X137CA,"T",0X1,3);
	SetRegEx(0X137F4,"T",0X1,3);
	SetRegEx(0X13810,"T",0X1,3);
	SetRegEx(0X1381A,"T",0X1,3);
	SetRegEx(0X13828,"T",0X1,3);
	SetRegEx(0X1382A,"T",0X1,3);
	SetRegEx(0X13866,"T",0X1,3);
	SetRegEx(0X138DA,"T",0X1,3);
	SetRegEx(0X13904,"T",0X1,3);
	SetRegEx(0X1390E,"T",0X1,3);
	SetRegEx(0X13910,"T",0X1,3);
	SetRegEx(0X13916,"T",0X1,3);
	SetRegEx(0X13928,"T",0X1,3);
	SetRegEx(0X13936,"T",0X1,3);
	SetRegEx(0X1393A,"T",0X1,3);
	SetRegEx(0X1395A,"T",0X1,3);
	SetRegEx(0X13966,"T",0X1,3);
	SetRegEx(0X13974,"T",0X1,3);
	SetRegEx(0X1397C,"T",0X1,3);
	SetRegEx(0X1399E,"T",0X1,3);
	SetRegEx(0X139A2,"T",0X1,3);
	SetRegEx(0X139D4,"T",0X1,3);
	SetRegEx(0X139F6,"T",0X1,3);
	SetRegEx(0X13A08,"T",0X1,3);
	SetRegEx(0X13A18,"T",0X1,3);
	SetRegEx(0X13A1A,"T",0X1,3);
	SetRegEx(0X13A22,"T",0X1,3);
	SetRegEx(0X13A40,"T",0X1,3);
	SetRegEx(0X13A54,"T",0X1,3);
	SetRegEx(0X13A56,"T",0X1,3);
	SetRegEx(0X13A60,"T",0X1,3);
	SetRegEx(0X13A6A,"T",0X1,3);
	SetRegEx(0X13A72,"T",0X1,3);
	SetRegEx(0X13A7E,"T",0X1,3);
	SetRegEx(0X13A82,"T",0X1,3);
	SetRegEx(0X13A8E,"T",0X1,3);
	SetRegEx(0X13A94,"T",0X1,3);
	SetRegEx(0X13A9E,"T",0X1,3);
	SetRegEx(0X13AAA,"T",0X1,3);
	SetRegEx(0X13AB4,"T",0X1,3);
	SetRegEx(0X13AF8,"T",0X1,3);
	SetRegEx(0X13B0E,"T",0X1,3);
	SetRegEx(0X13B22,"T",0X1,3);
	SetRegEx(0X13B24,"T",0X1,3);
	SetRegEx(0X13B54,"T",0X1,3);
	SetRegEx(0X13B58,"T",0X1,3);
	SetRegEx(0X13B5A,"T",0X1,3);
	SetRegEx(0X13B5E,"T",0X1,3);
	SetRegEx(0X13B78,"T",0X1,3);
	SetRegEx(0X13B90,"T",0X1,3);
	SetRegEx(0X13BAC,"T",0X1,3);
	SetRegEx(0X13BB4,"T",0X1,3);
	SetRegEx(0X13C14,"T",0X1,3);
	SetRegEx(0X13C2A,"T",0X1,3);
	SetRegEx(0X13C2E,"T",0X1,3);
	SetRegEx(0X13C30,"T",0X1,3);
	SetRegEx(0X13C34,"T",0X1,3);
	SetRegEx(0X13C58,"T",0X1,3);
	SetRegEx(0X13C7C,"T",0X1,3);
	SetRegEx(0X13CA4,"T",0X1,3);
	SetRegEx(0X13CC0,"T",0X1,3);
	SetRegEx(0X13CC4,"T",0X1,3);
	SetRegEx(0X13CC8,"T",0X1,3);
	SetRegEx(0X13CD0,"T",0X1,3);
	SetRegEx(0X13CD6,"T",0X1,3);
	SetRegEx(0X13CDC,"T",0X1,3);
	SetRegEx(0X13CE2,"T",0X1,3);
	SetRegEx(0X13CE6,"T",0X1,3);
	SetRegEx(0X13CEC,"T",0X1,3);
	SetRegEx(0X13D08,"T",0X1,3);
	SetRegEx(0X13D14,"T",0X1,3);
	SetRegEx(0X13D16,"T",0X1,3);
	SetRegEx(0X13D18,"T",0X1,3);
	SetRegEx(0X13D34,"T",0X1,3);
	SetRegEx(0X13D40,"T",0X1,3);
	SetRegEx(0X13D42,"T",0X1,3);
	SetRegEx(0X13D44,"T",0X1,3);
	SetRegEx(0X13D86,"T",0X1,3);
	SetRegEx(0X13DBC,"T",0X1,3);
	SetRegEx(0X13DFC,"T",0X1,3);
	SetRegEx(0X13E04,"T",0X1,3);
	SetRegEx(0X13E06,"T",0X1,3);
	SetRegEx(0X13E48,"T",0X1,3);
	SetRegEx(0X13E7E,"T",0X1,3);
	SetRegEx(0X13EBE,"T",0X1,3);
	SetRegEx(0X13EC6,"T",0X1,3);
	SetRegEx(0X13EC8,"T",0X1,3);
	SetRegEx(0X13F1A,"T",0X1,3);
	SetRegEx(0X13F1C,"T",0X1,3);
	SetRegEx(0X13F72,"T",0X1,3);
	SetRegEx(0X13F74,"T",0X1,3);
	SetRegEx(0X13FEC,"T",0X1,3);
	SetRegEx(0X13FF0,"T",0X1,3);
	SetRegEx(0X14040,"T",0X1,3);
	SetRegEx(0X14048,"T",0X1,3);
	SetRegEx(0X1404C,"T",0X1,3);
	SetRegEx(0X140A2,"T",0X1,3);
	SetRegEx(0X140A8,"T",0X1,3);
	SetRegEx(0X140FE,"T",0X1,3);
	SetRegEx(0X14100,"T",0X1,3);
	SetRegEx(0X14108,"T",0X1,3);
	SetRegEx(0X14148,"T",0X1,3);
	SetRegEx(0X1415C,"T",0X1,3);
	SetRegEx(0X14168,"T",0X1,3);
	SetRegEx(0X1416C,"T",0X1,3);
	SetRegEx(0X1418E,"T",0X1,3);
	SetRegEx(0X14196,"T",0X1,3);
	SetRegEx(0X14198,"T",0X1,3);
	SetRegEx(0X141AC,"T",0X1,3);
	SetRegEx(0X141B4,"T",0X1,3);
	SetRegEx(0X141C8,"T",0X1,3);
	SetRegEx(0X141CA,"T",0X1,3);
	SetRegEx(0X141CE,"T",0X1,3);
	SetRegEx(0X141DE,"T",0X1,3);
	SetRegEx(0X141E0,"T",0X1,3);
	SetRegEx(0X141E4,"T",0X1,3);
	SetRegEx(0X141E8,"T",0X1,3);
	SetRegEx(0X141EE,"T",0X1,3);
	SetRegEx(0X14206,"T",0X1,3);
	SetRegEx(0X14220,"T",0X1,3);
	SetRegEx(0X14238,"T",0X1,3);
	SetRegEx(0X14258,"T",0X1,3);
	SetRegEx(0X1427E,"T",0X1,3);
	SetRegEx(0X1428A,"T",0X1,3);
	SetRegEx(0X14294,"T",0X1,3);
	SetRegEx(0X14296,"T",0X1,3);
	SetRegEx(0X142B0,"T",0X1,3);
	SetRegEx(0X142B4,"T",0X1,3);
	SetRegEx(0X142B8,"T",0X1,3);
	SetRegEx(0X142BC,"T",0X1,3);
	SetRegEx(0X142E4,"T",0X1,3);
	SetRegEx(0X142F2,"T",0X1,3);
	SetRegEx(0X14332,"T",0X1,3);
	SetRegEx(0X14336,"T",0X1,3);
	SetRegEx(0X14338,"T",0X1,3);
	SetRegEx(0X14366,"T",0X1,3);
	SetRegEx(0X14380,"T",0X1,3);
	SetRegEx(0X1438E,"T",0X1,3);
	SetRegEx(0X143A4,"T",0X1,3);
	SetRegEx(0X143A6,"T",0X1,3);
	SetRegEx(0X143AE,"T",0X1,3);
	SetRegEx(0X143D4,"T",0X1,3);
	SetRegEx(0X143EA,"T",0X1,3);
	SetRegEx(0X143EC,"T",0X1,3);
	SetRegEx(0X143F4,"T",0X1,3);
	SetRegEx(0X1441A,"T",0X1,3);
	SetRegEx(0X1443E,"T",0X1,3);
	SetRegEx(0X14452,"T",0X1,3);
	SetRegEx(0X14456,"T",0X1,3);
	SetRegEx(0X1445A,"T",0X1,3);
	SetRegEx(0X1446A,"T",0X1,3);
	SetRegEx(0X1446C,"T",0X1,3);
	SetRegEx(0X14476,"T",0X1,3);
	SetRegEx(0X14478,"T",0X1,3);
	SetRegEx(0X1447A,"T",0X1,3);
	SetRegEx(0X1447E,"T",0X1,3);
	SetRegEx(0X14490,"T",0X1,3);
	SetRegEx(0X14498,"T",0X1,3);
	SetRegEx(0X144B2,"T",0X1,3);
	SetRegEx(0X144B8,"T",0X1,3);
	SetRegEx(0X144BC,"T",0X1,3);
	SetRegEx(0X144C0,"T",0X1,3);
	SetRegEx(0X144C4,"T",0X1,3);
	SetRegEx(0X144CC,"T",0X1,3);
	SetRegEx(0X144F0,"T",0X1,3);
	SetRegEx(0X144F6,"T",0X1,3);
	SetRegEx(0X144FA,"T",0X1,3);
	SetRegEx(0X144FE,"T",0X1,3);
	SetRegEx(0X14502,"T",0X1,3);
	SetRegEx(0X1450A,"T",0X1,3);
	SetRegEx(0X14524,"T",0X1,3);
	SetRegEx(0X1452A,"T",0X1,3);
	SetRegEx(0X1452E,"T",0X1,3);
	SetRegEx(0X14532,"T",0X1,3);
	SetRegEx(0X14536,"T",0X1,3);
	SetRegEx(0X1453E,"T",0X1,3);
	SetRegEx(0X14562,"T",0X1,3);
	SetRegEx(0X14568,"T",0X1,3);
	SetRegEx(0X1456C,"T",0X1,3);
	SetRegEx(0X14570,"T",0X1,3);
	SetRegEx(0X14586,"T",0X1,3);
	SetRegEx(0X1459C,"T",0X1,3);
	SetRegEx(0X145A0,"T",0X1,3);
	SetRegEx(0X145A4,"T",0X1,3);
	SetRegEx(0X145A8,"T",0X1,3);
	SetRegEx(0X145AC,"T",0X1,3);
	SetRegEx(0X145B0,"T",0X1,3);
	SetRegEx(0X145B4,"T",0X1,3);
	SetRegEx(0X145DA,"T",0X1,3);
	SetRegEx(0X145DE,"T",0X1,3);
	SetRegEx(0X145E2,"T",0X1,3);
	SetRegEx(0X14602,"T",0X1,3);
	SetRegEx(0X1461A,"T",0X1,3);
	SetRegEx(0X14620,"T",0X1,3);
	SetRegEx(0X1463C,"T",0X1,3);
	SetRegEx(0X14640,"T",0X1,3);
	SetRegEx(0X1465C,"T",0X1,3);
	SetRegEx(0X14674,"T",0X1,3);
	SetRegEx(0X1468A,"T",0X1,3);
	SetRegEx(0X146D0,"T",0X1,3);
	SetRegEx(0X146E8,"T",0X1,3);
	SetRegEx(0X146EC,"T",0X1,3);
	SetRegEx(0X146F6,"T",0X1,3);
	SetRegEx(0X14708,"T",0X1,3);
	SetRegEx(0X14712,"T",0X1,3);
	SetRegEx(0X1472A,"T",0X1,3);
	SetRegEx(0X14732,"T",0X1,3);
	SetRegEx(0X14734,"T",0X1,3);
	SetRegEx(0X1474C,"T",0X1,3);
	SetRegEx(0X1475C,"T",0X1,3);
	SetRegEx(0X1475E,"T",0X1,3);
	SetRegEx(0X14760,"T",0X1,3);
	SetRegEx(0X14766,"T",0X1,3);
	SetRegEx(0X1477E,"T",0X1,3);
	SetRegEx(0X14796,"T",0X1,3);
	SetRegEx(0X1479C,"T",0X1,3);
	SetRegEx(0X1479E,"T",0X1,3);
	SetRegEx(0X147B8,"T",0X1,3);
	SetRegEx(0X147C6,"T",0X1,3);
	SetRegEx(0X147CE,"T",0X1,3);
	SetRegEx(0X147D4,"T",0X1,3);
	SetRegEx(0X147D6,"T",0X1,3);
	SetRegEx(0X147E6,"T",0X1,3);
	SetRegEx(0X147EE,"T",0X1,3);
	SetRegEx(0X147F0,"T",0X1,3);
	SetRegEx(0X14808,"T",0X1,3);
	SetRegEx(0X14810,"T",0X1,3);
	SetRegEx(0X14812,"T",0X1,3);
	SetRegEx(0X1482E,"T",0X1,3);
	SetRegEx(0X1483E,"T",0X1,3);
	SetRegEx(0X14844,"T",0X1,3);
	SetRegEx(0X1484C,"T",0X1,3);
	SetRegEx(0X14850,"T",0X1,3);
	SetRegEx(0X14852,"T",0X1,3);
	SetRegEx(0X14880,"T",0X1,3);
	SetRegEx(0X1488A,"T",0X1,3);
	SetRegEx(0X14890,"T",0X1,3);
	SetRegEx(0X1489E,"T",0X1,3);
	SetRegEx(0X148B8,"T",0X1,3);
	SetRegEx(0X148BA,"T",0X1,3);
	SetRegEx(0X148BE,"T",0X1,3);
	SetRegEx(0X148C8,"T",0X1,3);
	SetRegEx(0X148CC,"T",0X1,3);
	SetRegEx(0X148E6,"T",0X1,3);
	SetRegEx(0X148F0,"T",0X1,3);
	SetRegEx(0X148F4,"T",0X1,3);
	SetRegEx(0X1490A,"T",0X1,3);
	SetRegEx(0X1490C,"T",0X1,3);
	SetRegEx(0X1492A,"T",0X1,3);
	SetRegEx(0X1493E,"T",0X1,3);
	SetRegEx(0X14940,"T",0X1,3);
	SetRegEx(0X14944,"T",0X1,3);
	SetRegEx(0X14950,"T",0X1,3);
	SetRegEx(0X14994,"T",0X1,3);
	SetRegEx(0X14996,"T",0X1,3);
	SetRegEx(0X14A1C,"T",0X1,3);
	SetRegEx(0X14A1E,"T",0X1,3);
	SetRegEx(0X14A44,"T",0X1,3);
	SetRegEx(0X14A46,"T",0X1,3);
	SetRegEx(0X14A74,"T",0X1,3);
	SetRegEx(0X14A76,"T",0X1,3);
	SetRegEx(0X14AAE,"T",0X1,3);
	SetRegEx(0X14AB0,"T",0X1,3);
	SetRegEx(0X14B00,"T",0X1,3);
	SetRegEx(0X14B0A,"T",0X1,3);
	SetRegEx(0X14B0C,"T",0X1,3);
	SetRegEx(0X14B1E,"T",0X1,3);
	SetRegEx(0X14B24,"T",0X1,3);
	SetRegEx(0X14B50,"T",0X1,3);
	SetRegEx(0X14B56,"T",0X1,3);
	SetRegEx(0X14B78,"T",0X1,3);
	SetRegEx(0X14B82,"T",0X1,3);
	SetRegEx(0X14BA6,"T",0X1,3);
	SetRegEx(0X14BB2,"T",0X1,3);
	SetRegEx(0X14BC4,"T",0X1,3);
	SetRegEx(0X14BC8,"T",0X1,3);
	SetRegEx(0X14BCA,"T",0X1,3);
	SetRegEx(0X14BD0,"T",0X1,3);
	SetRegEx(0X14BD6,"T",0X1,3);
	SetRegEx(0X14BDC,"T",0X1,3);
	SetRegEx(0X14BE2,"T",0X1,3);
	SetRegEx(0X14BE8,"T",0X1,3);
	SetRegEx(0X14BFE,"T",0X1,3);
	SetRegEx(0X14C00,"T",0X1,3);
	SetRegEx(0X14C06,"T",0X1,3);
	SetRegEx(0X14C0E,"T",0X1,3);
	SetRegEx(0X14C26,"T",0X1,3);
	SetRegEx(0X14C2A,"T",0X1,3);
	SetRegEx(0X14C4E,"T",0X1,3);
	SetRegEx(0X14C68,"T",0X1,3);
	SetRegEx(0X14C6A,"T",0X1,3);
	SetRegEx(0X14C76,"T",0X1,3);
	SetRegEx(0X14C7C,"T",0X1,3);
	SetRegEx(0X14C82,"T",0X1,3);
	SetRegEx(0X14C8A,"T",0X1,3);
	SetRegEx(0X14CBA,"T",0X1,3);
	SetRegEx(0X14CC0,"T",0X1,3);
	SetRegEx(0X14CD0,"T",0X1,3);
	SetRegEx(0X14CD6,"T",0X1,3);
	SetRegEx(0X14CDC,"T",0X1,3);
	SetRegEx(0X14CDE,"T",0X1,3);
	SetRegEx(0X14CE8,"T",0X1,3);
	SetRegEx(0X14D0E,"T",0X1,3);
	SetRegEx(0X14D12,"T",0X1,3);
	SetRegEx(0X14D16,"T",0X1,3);
	SetRegEx(0X14D1A,"T",0X1,3);
	SetRegEx(0X14D36,"T",0X1,3);
	SetRegEx(0X14D52,"T",0X1,3);
	SetRegEx(0X14D68,"T",0X1,3);
	SetRegEx(0X14D6A,"T",0X1,3);
	SetRegEx(0X14D70,"T",0X1,3);
	SetRegEx(0X14D8A,"T",0X1,3);
	SetRegEx(0X14D8C,"T",0X1,3);
	SetRegEx(0X14D90,"T",0X1,3);
	SetRegEx(0X14DA8,"T",0X1,3);
	SetRegEx(0X14DDA,"T",0X1,3);
	SetRegEx(0X14DEE,"T",0X1,3);
	SetRegEx(0X14E12,"T",0X1,3);
	SetRegEx(0X14E14,"T",0X1,3);
	SetRegEx(0X14E34,"T",0X1,3);
	SetRegEx(0X14E4A,"T",0X1,3);
	SetRegEx(0X14E54,"T",0X1,3);
	SetRegEx(0X14E62,"T",0X1,3);
	SetRegEx(0X14E78,"T",0X1,3);
	SetRegEx(0X14E94,"T",0X1,3);
	SetRegEx(0X14E9E,"T",0X1,3);
	SetRegEx(0X14EA6,"T",0X1,3);
	SetRegEx(0X14EE6,"T",0X1,3);
	SetRegEx(0X14F08,"T",0X1,3);
	SetRegEx(0X14F22,"T",0X1,3);
	SetRegEx(0X14F66,"T",0X1,3);
	SetRegEx(0X14F6E,"T",0X1,3);
	SetRegEx(0X14F72,"T",0X1,3);
	SetRegEx(0X14F9E,"T",0X1,3);
	SetRegEx(0X14FA0,"T",0X1,3);
	SetRegEx(0X14FAE,"T",0X1,3);
	SetRegEx(0X14FB6,"T",0X1,3);
	SetRegEx(0X14FCE,"T",0X1,3);
	SetRegEx(0X14FD0,"T",0X1,3);
	SetRegEx(0X14FE2,"T",0X1,3);
	SetRegEx(0X14FE8,"T",0X1,3);
	SetRegEx(0X14FEE,"T",0X1,3);
	SetRegEx(0X14FF0,"T",0X1,3);
	SetRegEx(0X14FF8,"T",0X1,3);
	SetRegEx(0X15000,"T",0X1,3);
	SetRegEx(0X15002,"T",0X1,3);
	SetRegEx(0X15006,"T",0X1,3);
	SetRegEx(0X1500C,"T",0X1,3);
	SetRegEx(0X15012,"T",0X1,3);
	SetRegEx(0X15014,"T",0X1,3);
	SetRegEx(0X15018,"T",0X1,3);
	SetRegEx(0X15022,"T",0X1,3);
	SetRegEx(0X15026,"T",0X1,3);
	SetRegEx(0X1502E,"T",0X1,3);
	SetRegEx(0X15030,"T",0X1,3);
	SetRegEx(0X1506C,"T",0X1,3);
	SetRegEx(0X1507E,"T",0X1,3);
	SetRegEx(0X15084,"T",0X1,3);
	SetRegEx(0X1508A,"T",0X1,3);
	SetRegEx(0X1508E,"T",0X1,3);
	SetRegEx(0X15094,"T",0X1,3);
	SetRegEx(0X150A0,"T",0X1,3);
	SetRegEx(0X150A4,"T",0X1,3);
	SetRegEx(0X150AA,"T",0X1,3);
	SetRegEx(0X150BE,"T",0X1,3);
	SetRegEx(0X150C2,"T",0X1,3);
	SetRegEx(0X150C4,"T",0X1,3);
	SetRegEx(0X150DC,"T",0X1,3);
	SetRegEx(0X150E8,"T",0X1,3);
	SetRegEx(0X150EA,"T",0X1,3);
	SetRegEx(0X150F6,"T",0X1,3);
	SetRegEx(0X15100,"T",0X1,3);
	SetRegEx(0X1510C,"T",0X1,3);
	SetRegEx(0X1511C,"T",0X1,3);
	SetRegEx(0X1512C,"T",0X1,3);
	SetRegEx(0X15148,"T",0X1,3);
	SetRegEx(0X15158,"T",0X1,3);
	SetRegEx(0X15162,"T",0X1,3);
	SetRegEx(0X1516E,"T",0X1,3);
	SetRegEx(0X1517C,"T",0X1,3);
	SetRegEx(0X15198,"T",0X1,3);
	SetRegEx(0X151B0,"T",0X1,3);
	SetRegEx(0X151D0,"T",0X1,3);
	SetRegEx(0X151D4,"T",0X1,3);
	SetRegEx(0X151E0,"T",0X1,3);
	SetRegEx(0X151E2,"T",0X1,3);
	SetRegEx(0X151E4,"T",0X1,3);
	SetRegEx(0X15216,"T",0X1,3);
	SetRegEx(0X1522C,"T",0X1,3);
	SetRegEx(0X1523A,"T",0X1,3);
	SetRegEx(0X1524A,"T",0X1,3);
	SetRegEx(0X15258,"T",0X1,3);
	SetRegEx(0X1526E,"T",0X1,3);
	SetRegEx(0X15286,"T",0X1,3);
	SetRegEx(0X15288,"T",0X1,3);
	SetRegEx(0X1528E,"T",0X1,3);
	SetRegEx(0X15294,"T",0X1,3);
	SetRegEx(0X15298,"T",0X1,3);
	SetRegEx(0X1529C,"T",0X1,3);
	SetRegEx(0X152AC,"T",0X1,3);
	SetRegEx(0X152B8,"T",0X1,3);
	SetRegEx(0X152E0,"T",0X1,3);
	SetRegEx(0X1531A,"T",0X1,3);
	SetRegEx(0X1531C,"T",0X1,3);
	SetRegEx(0X1531E,"T",0X1,3);
	SetRegEx(0X15324,"T",0X1,3);
	SetRegEx(0X1533A,"T",0X1,3);
	SetRegEx(0X15348,"T",0X1,3);
	SetRegEx(0X1536C,"T",0X1,3);
	SetRegEx(0X1537E,"T",0X1,3);
	SetRegEx(0X15380,"T",0X1,3);
	SetRegEx(0X15394,"T",0X1,3);
	SetRegEx(0X153A8,"T",0X1,3);
	SetRegEx(0X153BC,"T",0X1,3);
	SetRegEx(0X153D0,"T",0X1,3);
	SetRegEx(0X153E8,"T",0X1,3);
	SetRegEx(0X153FC,"T",0X1,3);
	SetRegEx(0X1540E,"T",0X1,3);
	SetRegEx(0X15418,"T",0X1,3);
	SetRegEx(0X15436,"T",0X1,3);
	SetRegEx(0X1543A,"T",0X1,3);
	SetRegEx(0X1545A,"T",0X1,3);
	SetRegEx(0X15464,"T",0X1,3);
	SetRegEx(0X1547C,"T",0X1,3);
	SetRegEx(0X154EC,"T",0X1,3);
	SetRegEx(0X154F0,"T",0X1,3);
	SetRegEx(0X154F8,"T",0X1,3);
	SetRegEx(0X15500,"T",0X1,3);
	SetRegEx(0X15504,"T",0X1,3);
	SetRegEx(0X15506,"T",0X1,3);
	SetRegEx(0X15514,"T",0X1,3);
	SetRegEx(0X15518,"T",0X1,3);
	SetRegEx(0X1551A,"T",0X1,3);
	SetRegEx(0X1551C,"T",0X1,3);
	SetRegEx(0X1552A,"T",0X1,3);
	SetRegEx(0X1552E,"T",0X1,3);
	SetRegEx(0X15530,"T",0X1,3);
	SetRegEx(0X15532,"T",0X1,3);
	SetRegEx(0X15534,"T",0X1,3);
	SetRegEx(0X15536,"T",0X1,3);
	SetRegEx(0X15538,"T",0X1,3);
	SetRegEx(0X1553A,"T",0X1,3);
	SetRegEx(0X1553C,"T",0X1,3);
	SetRegEx(0X1553E,"T",0X1,3);
	SetRegEx(0X15540,"T",0X1,3);
	SetRegEx(0X15542,"T",0X1,3);
	SetRegEx(0X15548,"T",0X1,3);
	SetRegEx(0X1555C,"T",0X1,3);
	SetRegEx(0X15560,"T",0X1,3);
	SetRegEx(0X15576,"T",0X1,3);
	SetRegEx(0X1559A,"T",0X1,3);
	SetRegEx(0X155AE,"T",0X1,3);
	SetRegEx(0X155D4,"T",0X1,3);
	SetRegEx(0X155E0,"T",0X1,3);
	SetRegEx(0X15608,"T",0X1,3);
	SetRegEx(0X1562E,"T",0X1,3);
	SetRegEx(0X15638,"T",0X1,3);
	SetRegEx(0X1563A,"T",0X1,3);
	SetRegEx(0X1564C,"T",0X1,3);
	SetRegEx(0X15668,"T",0X1,3);
	SetRegEx(0X1566E,"T",0X1,3);
	SetRegEx(0X15678,"T",0X1,3);
	SetRegEx(0X1568A,"T",0X1,3);
	SetRegEx(0X1569C,"T",0X1,3);
	SetRegEx(0X156CC,"T",0X1,3);
	SetRegEx(0X156DC,"T",0X1,3);
	SetRegEx(0X156FC,"T",0X1,3);
	SetRegEx(0X15722,"T",0X1,3);
	SetRegEx(0X15726,"T",0X1,3);
	SetRegEx(0X15748,"T",0X1,3);
	SetRegEx(0X1574A,"T",0X1,3);
	SetRegEx(0X15770,"T",0X1,3);
	SetRegEx(0X15774,"T",0X1,3);
	SetRegEx(0X15798,"T",0X1,3);
	SetRegEx(0X157A8,"T",0X1,3);
	SetRegEx(0X157B0,"T",0X1,3);
	SetRegEx(0X157B6,"T",0X1,3);
	SetRegEx(0X157CA,"T",0X1,3);
	SetRegEx(0X157D2,"T",0X1,3);
	SetRegEx(0X157D6,"T",0X1,3);
	SetRegEx(0X157D8,"T",0X1,3);
	SetRegEx(0X157FE,"T",0X1,3);
	SetRegEx(0X1580E,"T",0X1,3);
	SetRegEx(0X15810,"T",0X1,3);
	SetRegEx(0X15828,"T",0X1,3);
	SetRegEx(0X1584A,"T",0X1,3);
	SetRegEx(0X1584C,"T",0X1,3);
	SetRegEx(0X158AA,"T",0X1,3);
	SetRegEx(0X158AC,"T",0X1,3);
	SetRegEx(0X158B0,"T",0X1,3);
	SetRegEx(0X158FA,"T",0X1,3);
	SetRegEx(0X15904,"T",0X1,3);
	SetRegEx(0X15936,"T",0X1,3);
	SetRegEx(0X15942,"T",0X1,3);
	SetRegEx(0X1594E,"T",0X1,3);
	SetRegEx(0X15958,"T",0X1,3);
	SetRegEx(0X15962,"T",0X1,3);
	SetRegEx(0X1596C,"T",0X1,3);
	SetRegEx(0X15976,"T",0X1,3);
	SetRegEx(0X15980,"T",0X1,3);
	SetRegEx(0X1598A,"T",0X1,3);
	SetRegEx(0X15994,"T",0X1,3);
	SetRegEx(0X1599E,"T",0X1,3);
	SetRegEx(0X159A8,"T",0X1,3);
	SetRegEx(0X159B2,"T",0X1,3);
	SetRegEx(0X159C2,"T",0X1,3);
	SetRegEx(0X159D6,"T",0X1,3);
	SetRegEx(0X159E0,"T",0X1,3);
	SetRegEx(0X159F0,"T",0X1,3);
	SetRegEx(0X159FA,"T",0X1,3);
	SetRegEx(0X15A04,"T",0X1,3);
	SetRegEx(0X15A08,"T",0X1,3);
	SetRegEx(0X15A28,"T",0X1,3);
	SetRegEx(0X15A2A,"T",0X1,3);
	SetRegEx(0X15A30,"T",0X1,3);
	SetRegEx(0X15A54,"T",0X1,3);
	SetRegEx(0X15A5A,"T",0X1,3);
	SetRegEx(0X15A70,"T",0X1,3);
	SetRegEx(0X15A76,"T",0X1,3);
	SetRegEx(0X15A7A,"T",0X1,3);
	SetRegEx(0X15AAA,"T",0X1,3);
	SetRegEx(0X15AAE,"T",0X1,3);
	SetRegEx(0X15ACE,"T",0X1,3);
	SetRegEx(0X15AD4,"T",0X1,3);
	SetRegEx(0X15ADA,"T",0X1,3);
	SetRegEx(0X15AE2,"T",0X1,3);
	SetRegEx(0X15AEA,"T",0X1,3);
	SetRegEx(0X15B0C,"T",0X1,3);
	SetRegEx(0X15B10,"T",0X1,3);
	SetRegEx(0X15B2A,"T",0X1,3);
	SetRegEx(0X15B30,"T",0X1,3);
	SetRegEx(0X15BB6,"T",0X1,3);
	SetRegEx(0X15BC4,"T",0X1,3);
	SetRegEx(0X15BD2,"T",0X1,3);
	SetRegEx(0X15BD4,"T",0X1,3);
	SetRegEx(0X15BDA,"T",0X1,3);
	SetRegEx(0X15C00,"T",0X1,3);
	SetRegEx(0X15C28,"T",0X1,3);
	SetRegEx(0X15C50,"T",0X1,3);
	SetRegEx(0X15C66,"T",0X1,3);
	SetRegEx(0X15C7C,"T",0X1,3);
	SetRegEx(0X15C7E,"T",0X1,3);
	SetRegEx(0X15C94,"T",0X1,3);
	SetRegEx(0X15CA2,"T",0X1,3);
	SetRegEx(0X15CA6,"T",0X1,3);
	SetRegEx(0X15CC4,"T",0X1,3);
	SetRegEx(0X15CC8,"T",0X1,3);
	SetRegEx(0X15CCE,"T",0X1,3);
	SetRegEx(0X15CD0,"T",0X1,3);
	SetRegEx(0X15CDE,"T",0X1,3);
	SetRegEx(0X15CE2,"T",0X1,3);
	SetRegEx(0X15CE8,"T",0X1,3);
	SetRegEx(0X15CFC,"T",0X1,3);
	SetRegEx(0X15D0A,"T",0X1,3);
	SetRegEx(0X15D2E,"T",0X1,3);
	SetRegEx(0X15D50,"T",0X1,3);
	SetRegEx(0X15D5C,"T",0X1,3);
	SetRegEx(0X15D62,"T",0X1,3);
	SetRegEx(0X15D6A,"T",0X1,3);
	SetRegEx(0X15D84,"T",0X1,3);
	SetRegEx(0X15D88,"T",0X1,3);
	SetRegEx(0X15D8A,"T",0X1,3);
	SetRegEx(0X15D90,"T",0X1,3);
	SetRegEx(0X15DA4,"T",0X1,3);
	SetRegEx(0X15DA6,"T",0X1,3);
	SetRegEx(0X15DA8,"T",0X1,3);
	SetRegEx(0X15E04,"T",0X1,3);
	SetRegEx(0X15E40,"T",0X1,3);
	SetRegEx(0X15E52,"T",0X1,3);
	SetRegEx(0X15E6A,"T",0X1,3);
	SetRegEx(0X15E7C,"T",0X1,3);
	SetRegEx(0X15E8E,"T",0X1,3);
	SetRegEx(0X15EA0,"T",0X1,3);
	SetRegEx(0X15EB2,"T",0X1,3);
	SetRegEx(0X15EC6,"T",0X1,3);
	SetRegEx(0X15ED4,"T",0X1,3);
	SetRegEx(0X15EDA,"T",0X1,3);
	SetRegEx(0X15EDE,"T",0X1,3);
	SetRegEx(0X15EE6,"T",0X1,3);
	SetRegEx(0X15EFC,"T",0X1,3);
	SetRegEx(0X15F0A,"T",0X1,3);
	SetRegEx(0X15F30,"T",0X1,3);
	SetRegEx(0X15F44,"T",0X1,3);
	SetRegEx(0X15F62,"T",0X1,3);
	SetRegEx(0X15F64,"T",0X1,3);
	SetRegEx(0X15FD6,"T",0X1,3);
	SetRegEx(0X15FEC,"T",0X1,3);
	SetRegEx(0X15FFA,"T",0X1,3);
	SetRegEx(0X16020,"T",0X1,3);
	SetRegEx(0X16034,"T",0X1,3);
	SetRegEx(0X16052,"T",0X1,3);
	SetRegEx(0X16054,"T",0X1,3);
	SetRegEx(0X160C6,"T",0X1,3);
	SetRegEx(0X160E0,"T",0X1,3);
	SetRegEx(0X16108,"T",0X1,3);
	SetRegEx(0X16132,"T",0X1,3);
	SetRegEx(0X16136,"T",0X1,3);
	SetRegEx(0X16148,"T",0X1,3);
	SetRegEx(0X1615C,"T",0X1,3);
	SetRegEx(0X16170,"T",0X1,3);
	SetRegEx(0X16188,"T",0X1,3);
	SetRegEx(0X1619E,"T",0X1,3);
	SetRegEx(0X161B4,"T",0X1,3);
	SetRegEx(0X161D0,"T",0X1,3);
	SetRegEx(0X161D8,"T",0X1,3);
	SetRegEx(0X161EE,"T",0X1,3);
	SetRegEx(0X16216,"T",0X1,3);
	SetRegEx(0X16250,"T",0X1,3);
	SetRegEx(0X1626A,"T",0X1,3);
	SetRegEx(0X1628A,"T",0X1,3);
	SetRegEx(0X1628E,"T",0X1,3);
	SetRegEx(0X162A6,"T",0X1,3);
	SetRegEx(0X162F2,"T",0X1,3);
	SetRegEx(0X1630A,"T",0X1,3);
	SetRegEx(0X16356,"T",0X1,3);
	SetRegEx(0X16372,"T",0X1,3);
	SetRegEx(0X1639E,"T",0X1,3);
	SetRegEx(0X163A2,"T",0X1,3);
	SetRegEx(0X163B4,"T",0X1,3);
	SetRegEx(0X163CA,"T",0X1,3);
	SetRegEx(0X163E0,"T",0X1,3);
	SetRegEx(0X163FA,"T",0X1,3);
	SetRegEx(0X16412,"T",0X1,3);
	SetRegEx(0X1642C,"T",0X1,3);
	SetRegEx(0X1644A,"T",0X1,3);
	SetRegEx(0X1646E,"T",0X1,3);
	SetRegEx(0X16488,"T",0X1,3);
	SetRegEx(0X164AC,"T",0X1,3);
	SetRegEx(0X164B0,"T",0X1,3);
	SetRegEx(0X164C8,"T",0X1,3);
	SetRegEx(0X16516,"T",0X1,3);
	SetRegEx(0X1652E,"T",0X1,3);
	SetRegEx(0X1657C,"T",0X1,3);
	SetRegEx(0X16594,"T",0X1,3);
	SetRegEx(0X165A8,"T",0X1,3);
	SetRegEx(0X165B0,"T",0X1,3);
	SetRegEx(0X165B2,"T",0X1,3);
	SetRegEx(0X165CA,"T",0X1,3);
	SetRegEx(0X165DE,"T",0X1,3);
	SetRegEx(0X165E6,"T",0X1,3);
	SetRegEx(0X165FE,"T",0X1,3);
	SetRegEx(0X16610,"T",0X1,3);
	SetRegEx(0X16616,"T",0X1,3);
	SetRegEx(0X1661A,"T",0X1,3);
	SetRegEx(0X16622,"T",0X1,3);
	SetRegEx(0X1663E,"T",0X1,3);
	SetRegEx(0X16650,"T",0X1,3);
	SetRegEx(0X16664,"T",0X1,3);
	SetRegEx(0X16670,"T",0X1,3);
	SetRegEx(0X1667C,"T",0X1,3);
	SetRegEx(0X16696,"T",0X1,3);
	SetRegEx(0X166A6,"T",0X1,3);
	SetRegEx(0X166AE,"T",0X1,3);
	SetRegEx(0X166C6,"T",0X1,3);
	SetRegEx(0X166D6,"T",0X1,3);
	SetRegEx(0X166E4,"T",0X1,3);
	SetRegEx(0X166FA,"T",0X1,3);
	SetRegEx(0X1671E,"T",0X1,3);
	SetRegEx(0X1673E,"T",0X1,3);
	SetRegEx(0X16744,"T",0X1,3);
	SetRegEx(0X1676A,"T",0X1,3);
	SetRegEx(0X16774,"T",0X1,3);
	SetRegEx(0X1678C,"T",0X1,3);
	SetRegEx(0X16796,"T",0X1,3);
	SetRegEx(0X16798,"T",0X1,3);
	SetRegEx(0X167DE,"T",0X1,3);
	SetRegEx(0X167E0,"T",0X1,3);
	SetRegEx(0X167E8,"T",0X1,3);
	SetRegEx(0X1680E,"T",0X1,3);
	SetRegEx(0X16812,"T",0X1,3);
	SetRegEx(0X1681E,"T",0X1,3);
	SetRegEx(0X16824,"T",0X1,3);
	SetRegEx(0X16828,"T",0X1,3);
	SetRegEx(0X16832,"T",0X1,3);
	SetRegEx(0X16840,"T",0X1,3);
	SetRegEx(0X168B2,"T",0X1,3);
	SetRegEx(0X168BC,"T",0X1,3);
	SetRegEx(0X168C6,"T",0X1,3);
	SetRegEx(0X168D2,"T",0X1,3);
	SetRegEx(0X1690E,"T",0X1,3);
	SetRegEx(0X1691C,"T",0X1,3);
	SetRegEx(0X16932,"T",0X1,3);
	SetRegEx(0X16938,"T",0X1,3);
	SetRegEx(0X16958,"T",0X1,3);
	SetRegEx(0X16968,"T",0X1,3);
	SetRegEx(0X1697A,"T",0X1,3);
	SetRegEx(0X1699A,"T",0X1,3);
	SetRegEx(0X169A4,"T",0X1,3);
	SetRegEx(0X169A8,"T",0X1,3);
	SetRegEx(0X169AC,"T",0X1,3);
	SetRegEx(0X169DC,"T",0X1,3);
	SetRegEx(0X169FC,"T",0X1,3);
	SetRegEx(0X16A04,"T",0X1,3);
	SetRegEx(0X16A2A,"T",0X1,3);
	SetRegEx(0X16A36,"T",0X1,3);
	SetRegEx(0X16A4E,"T",0X1,3);
	SetRegEx(0X16A58,"T",0X1,3);
	SetRegEx(0X16A5A,"T",0X1,3);
	SetRegEx(0X16AA0,"T",0X1,3);
	SetRegEx(0X16AA2,"T",0X1,3);
	SetRegEx(0X16AAA,"T",0X1,3);
	SetRegEx(0X16AE8,"T",0X1,3);
	SetRegEx(0X16AEC,"T",0X1,3);
	SetRegEx(0X16AF8,"T",0X1,3);
	SetRegEx(0X16AFE,"T",0X1,3);
	SetRegEx(0X16B02,"T",0X1,3);
	SetRegEx(0X16B0C,"T",0X1,3);
	SetRegEx(0X16B1A,"T",0X1,3);
	SetRegEx(0X16B86,"T",0X1,3);
	SetRegEx(0X16B90,"T",0X1,3);
	SetRegEx(0X16B9A,"T",0X1,3);
	SetRegEx(0X16BA2,"T",0X1,3);
	SetRegEx(0X16BDE,"T",0X1,3);
	SetRegEx(0X16BEC,"T",0X1,3);
	SetRegEx(0X16C00,"T",0X1,3);
	SetRegEx(0X16C02,"T",0X1,3);
	SetRegEx(0X16C22,"T",0X1,3);
	SetRegEx(0X16C32,"T",0X1,3);
	SetRegEx(0X16C44,"T",0X1,3);
	SetRegEx(0X16C64,"T",0X1,3);
	SetRegEx(0X16C6E,"T",0X1,3);
	SetRegEx(0X16C72,"T",0X1,3);
	SetRegEx(0X16C74,"T",0X1,3);
	SetRegEx(0X16C98,"T",0X1,3);
	SetRegEx(0X16CB8,"T",0X1,3);
	SetRegEx(0X16CBA,"T",0X1,3);
	SetRegEx(0X16CD2,"T",0X1,3);
	SetRegEx(0X16CDE,"T",0X1,3);
	SetRegEx(0X16CF6,"T",0X1,3);
	SetRegEx(0X16D00,"T",0X1,3);
	SetRegEx(0X16D02,"T",0X1,3);
	SetRegEx(0X16D3A,"T",0X1,3);
	SetRegEx(0X16D3C,"T",0X1,3);
	SetRegEx(0X16D44,"T",0X1,3);
	SetRegEx(0X16D6A,"T",0X1,3);
	SetRegEx(0X16D6E,"T",0X1,3);
	SetRegEx(0X16D7A,"T",0X1,3);
	SetRegEx(0X16D80,"T",0X1,3);
	SetRegEx(0X16D84,"T",0X1,3);
	SetRegEx(0X16D8E,"T",0X1,3);
	SetRegEx(0X16D9C,"T",0X1,3);
	SetRegEx(0X16E0A,"T",0X1,3);
	SetRegEx(0X16E14,"T",0X1,3);
	SetRegEx(0X16E1E,"T",0X1,3);
	SetRegEx(0X16E28,"T",0X1,3);
	SetRegEx(0X16E64,"T",0X1,3);
	SetRegEx(0X16E72,"T",0X1,3);
	SetRegEx(0X16E8A,"T",0X1,3);
	SetRegEx(0X16E8C,"T",0X1,3);
	SetRegEx(0X16EAC,"T",0X1,3);
	SetRegEx(0X16EBC,"T",0X1,3);
	SetRegEx(0X16ECE,"T",0X1,3);
	SetRegEx(0X16EEE,"T",0X1,3);
	SetRegEx(0X16EF8,"T",0X1,3);
	SetRegEx(0X16EFC,"T",0X1,3);
	SetRegEx(0X16F18,"T",0X1,3);
	SetRegEx(0X16F3C,"T",0X1,3);
	SetRegEx(0X16F5C,"T",0X1,3);
	SetRegEx(0X16F60,"T",0X1,3);
	SetRegEx(0X16F78,"T",0X1,3);
	SetRegEx(0X16F82,"T",0X1,3);
	SetRegEx(0X16F9A,"T",0X1,3);
	SetRegEx(0X16FA4,"T",0X1,3);
	SetRegEx(0X16FA6,"T",0X1,3);
	SetRegEx(0X16FEC,"T",0X1,3);
	SetRegEx(0X16FEE,"T",0X1,3);
	SetRegEx(0X16FF6,"T",0X1,3);
	SetRegEx(0X1701C,"T",0X1,3);
	SetRegEx(0X17020,"T",0X1,3);
	SetRegEx(0X1702C,"T",0X1,3);
	SetRegEx(0X17032,"T",0X1,3);
	SetRegEx(0X17036,"T",0X1,3);
	SetRegEx(0X17040,"T",0X1,3);
	SetRegEx(0X1704E,"T",0X1,3);
	SetRegEx(0X170BC,"T",0X1,3);
	SetRegEx(0X170C6,"T",0X1,3);
	SetRegEx(0X170D0,"T",0X1,3);
	SetRegEx(0X170DC,"T",0X1,3);
	SetRegEx(0X17118,"T",0X1,3);
	SetRegEx(0X17126,"T",0X1,3);
	SetRegEx(0X1713C,"T",0X1,3);
	SetRegEx(0X17142,"T",0X1,3);
	SetRegEx(0X17162,"T",0X1,3);
	SetRegEx(0X17172,"T",0X1,3);
	SetRegEx(0X17184,"T",0X1,3);
	SetRegEx(0X171A4,"T",0X1,3);
	SetRegEx(0X171AE,"T",0X1,3);
	SetRegEx(0X171B2,"T",0X1,3);
	SetRegEx(0X171B4,"T",0X1,3);
	SetRegEx(0X171D6,"T",0X1,3);
	SetRegEx(0X171DC,"T",0X1,3);
	SetRegEx(0X171E4,"T",0X1,3);
	SetRegEx(0X171EA,"T",0X1,3);
	SetRegEx(0X17218,"T",0X1,3);
	SetRegEx(0X17232,"T",0X1,3);
	SetRegEx(0X17236,"T",0X1,3);
	SetRegEx(0X1723A,"T",0X1,3);
	SetRegEx(0X17252,"T",0X1,3);
	SetRegEx(0X17264,"T",0X1,3);
	SetRegEx(0X1726C,"T",0X1,3);
	SetRegEx(0X17270,"T",0X1,3);
	SetRegEx(0X17282,"T",0X1,3);
	SetRegEx(0X17286,"T",0X1,3);
	SetRegEx(0X17294,"T",0X1,3);
	SetRegEx(0X17298,"T",0X1,3);
	SetRegEx(0X172C4,"T",0X1,3);
	SetRegEx(0X172C6,"T",0X1,3);
	SetRegEx(0X172DC,"T",0X1,3);
	SetRegEx(0X172DE,"T",0X1,3);
	SetRegEx(0X1730A,"T",0X1,3);
	SetRegEx(0X17318,"T",0X1,3);
	SetRegEx(0X1733E,"T",0X1,3);
	SetRegEx(0X1734A,"T",0X1,3);
	SetRegEx(0X17352,"T",0X1,3);
	SetRegEx(0X1736C,"T",0X1,3);
	SetRegEx(0X17390,"T",0X1,3);
	SetRegEx(0X173A0,"T",0X1,3);
	SetRegEx(0X173BC,"T",0X1,3);
	SetRegEx(0X173C4,"T",0X1,3);
	SetRegEx(0X173F0,"T",0X1,3);
	SetRegEx(0X17400,"T",0X1,3);
	SetRegEx(0X17406,"T",0X1,3);
	SetRegEx(0X1740E,"T",0X1,3);
	SetRegEx(0X17420,"T",0X1,3);
	SetRegEx(0X17438,"T",0X1,3);
	SetRegEx(0X17440,"T",0X1,3);
	SetRegEx(0X17446,"T",0X1,3);
	SetRegEx(0X17462,"T",0X1,3);
	SetRegEx(0X1746E,"T",0X1,3);
	SetRegEx(0X17484,"T",0X1,3);
	SetRegEx(0X1749A,"T",0X1,3);
	SetRegEx(0X174A8,"T",0X1,3);
	SetRegEx(0X174B6,"T",0X1,3);
	SetRegEx(0X174BA,"T",0X1,3);
	SetRegEx(0X174D6,"T",0X1,3);
	SetRegEx(0X174DE,"T",0X1,3);
	SetRegEx(0X174E8,"T",0X1,3);
	SetRegEx(0X17500,"T",0X1,3);
	SetRegEx(0X17522,"T",0X1,3);
	SetRegEx(0X17534,"T",0X1,3);
	SetRegEx(0X17544,"T",0X1,3);
	SetRegEx(0X17548,"T",0X1,3);
	SetRegEx(0X1755E,"T",0X1,3);
	SetRegEx(0X1756C,"T",0X1,3);
	SetRegEx(0X17574,"T",0X1,3);
	SetRegEx(0X1758E,"T",0X1,3);
	SetRegEx(0X17590,"T",0X1,3);
	SetRegEx(0X175A6,"T",0X1,3);
	SetRegEx(0X175B2,"T",0X1,3);
	SetRegEx(0X175BA,"T",0X1,3);
	SetRegEx(0X175BC,"T",0X1,3);
	SetRegEx(0X175CC,"T",0X1,3);
	SetRegEx(0X175EC,"T",0X1,3);
	SetRegEx(0X175F0,"T",0X1,3);
	SetRegEx(0X175F4,"T",0X1,3);
	SetRegEx(0X175F8,"T",0X1,3);
	SetRegEx(0X175FE,"T",0X1,3);
	SetRegEx(0X17602,"T",0X1,3);
	SetRegEx(0X1760C,"T",0X1,3);
	SetRegEx(0X17648,"T",0X1,3);
	SetRegEx(0X1765E,"T",0X1,3);
	SetRegEx(0X17690,"T",0X1,3);
	SetRegEx(0X17692,"T",0X1,3);
	SetRegEx(0X17698,"T",0X1,3);
	SetRegEx(0X1769C,"T",0X1,3);
	SetRegEx(0X176AC,"T",0X1,3);
	SetRegEx(0X176B2,"T",0X1,3);
	SetRegEx(0X176BA,"T",0X1,3);
	SetRegEx(0X176DA,"T",0X1,3);
	SetRegEx(0X176E2,"T",0X1,3);
	SetRegEx(0X176EE,"T",0X1,3);
	SetRegEx(0X17702,"T",0X1,3);
	SetRegEx(0X17706,"T",0X1,3);
	SetRegEx(0X17708,"T",0X1,3);
	SetRegEx(0X1770C,"T",0X1,3);
	SetRegEx(0X17720,"T",0X1,3);
	SetRegEx(0X17730,"T",0X1,3);
	SetRegEx(0X17740,"T",0X1,3);
	SetRegEx(0X17752,"T",0X1,3);
	SetRegEx(0X17754,"T",0X1,3);
	SetRegEx(0X17764,"T",0X1,3);
	SetRegEx(0X1776C,"T",0X1,3);
	SetRegEx(0X17770,"T",0X1,3);
	SetRegEx(0X17782,"T",0X1,3);
	SetRegEx(0X1778C,"T",0X1,3);
	SetRegEx(0X17790,"T",0X1,3);
	SetRegEx(0X17794,"T",0X1,3);
	SetRegEx(0X17798,"T",0X1,3);
	SetRegEx(0X177A6,"T",0X1,3);
	SetRegEx(0X177A8,"T",0X1,3);
	SetRegEx(0X177B2,"T",0X1,3);
	SetRegEx(0X177CC,"T",0X1,3);
	SetRegEx(0X177D2,"T",0X1,3);
	SetRegEx(0X177DC,"T",0X1,3);
	SetRegEx(0X177E0,"T",0X1,3);
	SetRegEx(0X177EC,"T",0X1,3);
	SetRegEx(0X177FC,"T",0X1,3);
	SetRegEx(0X17800,"T",0X1,3);
	SetRegEx(0X17806,"T",0X1,3);
	SetRegEx(0X1780C,"T",0X1,3);
	SetRegEx(0X17814,"T",0X1,3);
	SetRegEx(0X1782A,"T",0X1,3);
	SetRegEx(0X1782E,"T",0X1,3);
	SetRegEx(0X17834,"T",0X1,3);
	SetRegEx(0X17836,"T",0X1,3);
	SetRegEx(0X1783E,"T",0X1,3);
	SetRegEx(0X1784C,"T",0X1,3);
	SetRegEx(0X1788E,"T",0X1,3);
	SetRegEx(0X17890,"T",0X1,3);
	SetRegEx(0X178A0,"T",0X1,3);
	SetRegEx(0X178A6,"T",0X1,3);
	SetRegEx(0X178AC,"T",0X1,3);
	SetRegEx(0X178D0,"T",0X1,3);
	SetRegEx(0X178D4,"T",0X1,3);
	SetRegEx(0X1790C,"T",0X1,3);
	SetRegEx(0X17916,"T",0X1,3);
	SetRegEx(0X1792A,"T",0X1,3);
	SetRegEx(0X1793A,"T",0X1,3);
	SetRegEx(0X1795E,"T",0X1,3);
	SetRegEx(0X17966,"T",0X1,3);
	SetRegEx(0X1797C,"T",0X1,3);
	SetRegEx(0X179C2,"T",0X1,3);
	SetRegEx(0X179D2,"T",0X1,3);
	SetRegEx(0X179D6,"T",0X1,3);
	SetRegEx(0X17A00,"T",0X1,3);
	SetRegEx(0X17A16,"T",0X1,3);
	SetRegEx(0X17A1A,"T",0X1,3);
	SetRegEx(0X17A24,"T",0X1,3);
	SetRegEx(0X17A64,"T",0X1,3);
	SetRegEx(0X17A6E,"T",0X1,3);
	SetRegEx(0X17A7A,"T",0X1,3);
	SetRegEx(0X17A8A,"T",0X1,3);
	SetRegEx(0X17A8C,"T",0X1,3);
	SetRegEx(0X17A92,"T",0X1,3);
	SetRegEx(0X17AA0,"T",0X1,3);
	SetRegEx(0X17AA6,"T",0X1,3);
	SetRegEx(0X17AB4,"T",0X1,3);
	SetRegEx(0X17AC2,"T",0X1,3);
	SetRegEx(0X17AC8,"T",0X1,3);
	SetRegEx(0X17AD0,"T",0X1,3);
	SetRegEx(0X17AD2,"T",0X1,3);
	SetRegEx(0X17ADA,"T",0X1,3);
	SetRegEx(0X17AE2,"T",0X1,3);
	SetRegEx(0X17AE4,"T",0X1,3);
	SetRegEx(0X17AEC,"T",0X1,3);
	SetRegEx(0X17AFE,"T",0X1,3);
	SetRegEx(0X17B02,"T",0X1,3);
	SetRegEx(0X17B06,"T",0X1,3);
	SetRegEx(0X17B08,"T",0X1,3);
	SetRegEx(0X17B12,"T",0X1,3);
	SetRegEx(0X17B28,"T",0X1,3);
	SetRegEx(0X17B32,"T",0X1,3);
	SetRegEx(0X17B3E,"T",0X1,3);
	SetRegEx(0X17B5E,"T",0X1,3);
	SetRegEx(0X17B60,"T",0X1,3);
	SetRegEx(0X17B68,"T",0X1,3);
	SetRegEx(0X17B6A,"T",0X1,3);
	SetRegEx(0X17B82,"T",0X1,3);
	SetRegEx(0X17B86,"T",0X1,3);
	SetRegEx(0X17B98,"T",0X1,3);
	SetRegEx(0X17BAA,"T",0X1,3);
	SetRegEx(0X17BB8,"T",0X1,3);
	SetRegEx(0X17BC2,"T",0X1,3);
	SetRegEx(0X17BD2,"T",0X1,3);
	SetRegEx(0X17BE8,"T",0X1,3);
	SetRegEx(0X17BEC,"T",0X1,3);
	SetRegEx(0X17BF0,"T",0X1,3);
	SetRegEx(0X17C10,"T",0X1,3);
	SetRegEx(0X17C1A,"T",0X1,3);
	SetRegEx(0X17C20,"T",0X1,3);
	SetRegEx(0X17C24,"T",0X1,3);
	SetRegEx(0X17C28,"T",0X1,3);
	SetRegEx(0X17C32,"T",0X1,3);
	SetRegEx(0X17C46,"T",0X1,3);
	SetRegEx(0X17C68,"T",0X1,3);
	SetRegEx(0X17C76,"T",0X1,3);
	SetRegEx(0X17C7E,"T",0X1,3);
	SetRegEx(0X17C8A,"T",0X1,3);
	SetRegEx(0X17C8C,"T",0X1,3);
	SetRegEx(0X17C9A,"T",0X1,3);
	SetRegEx(0X17CC0,"T",0X1,3);
	SetRegEx(0X17CD8,"T",0X1,3);
	SetRegEx(0X17CDC,"T",0X1,3);
	SetRegEx(0X17CFA,"T",0X1,3);
	SetRegEx(0X17D18,"T",0X1,3);
	SetRegEx(0X17D1A,"T",0X1,3);
	SetRegEx(0X17D1C,"T",0X1,3);
	SetRegEx(0X17D28,"T",0X1,3);
	SetRegEx(0X17D34,"T",0X1,3);
	SetRegEx(0X17D4C,"T",0X1,3);
	SetRegEx(0X17D68,"T",0X1,3);
	SetRegEx(0X17D74,"T",0X1,3);
	SetRegEx(0X17D78,"T",0X1,3);
	SetRegEx(0X17D7C,"T",0X1,3);
	SetRegEx(0X17D98,"T",0X1,3);
	SetRegEx(0X17DC6,"T",0X1,3);
	SetRegEx(0X17DD2,"T",0X1,3);
	SetRegEx(0X17DD8,"T",0X1,3);
	SetRegEx(0X17DDA,"T",0X1,3);
	SetRegEx(0X17DE4,"T",0X1,3);
	SetRegEx(0X17DEE,"T",0X1,3);
	SetRegEx(0X17E14,"T",0X1,3);
	SetRegEx(0X17E1E,"T",0X1,3);
	SetRegEx(0X17E30,"T",0X1,3);
	SetRegEx(0X17E52,"T",0X1,3);
	SetRegEx(0X17E58,"T",0X1,3);
	SetRegEx(0X17E70,"T",0X1,3);
	SetRegEx(0X17E84,"T",0X1,3);
	SetRegEx(0X17E8A,"T",0X1,3);
	SetRegEx(0X17E96,"T",0X1,3);
	SetRegEx(0X17E9E,"T",0X1,3);
	SetRegEx(0X17EA0,"T",0X1,3);
	SetRegEx(0X17EB6,"T",0X1,3);
	SetRegEx(0X17EBC,"T",0X1,3);
	SetRegEx(0X17EC0,"T",0X1,3);
	SetRegEx(0X17EC4,"T",0X1,3);
	SetRegEx(0X17ECE,"T",0X1,3);
	SetRegEx(0X17EDA,"T",0X1,3);
	SetRegEx(0X17EDC,"T",0X1,3);
	SetRegEx(0X17EEE,"T",0X1,3);
	SetRegEx(0X17EF6,"T",0X1,3);
	SetRegEx(0X17EF8,"T",0X1,3);
	SetRegEx(0X17EFA,"T",0X1,3);
	SetRegEx(0X17F1C,"T",0X1,3);
	SetRegEx(0X17F20,"T",0X1,3);
	SetRegEx(0X17F34,"T",0X1,3);
	SetRegEx(0X17F42,"T",0X1,3);
	SetRegEx(0X17F62,"T",0X1,3);
	SetRegEx(0X17F6A,"T",0X1,3);
	SetRegEx(0X17F6C,"T",0X1,3);
	SetRegEx(0X17F70,"T",0X1,3);
	SetRegEx(0X17F88,"T",0X1,3);
	SetRegEx(0X17F92,"T",0X1,3);
	SetRegEx(0X17F9C,"T",0X1,3);
	SetRegEx(0X17F9E,"T",0X1,3);
	SetRegEx(0X17FA2,"T",0X1,3);
	SetRegEx(0X17FCC,"T",0X1,3);
	SetRegEx(0X17FE2,"T",0X1,3);
	SetRegEx(0X17FF8,"T",0X1,3);
	SetRegEx(0X1800E,"T",0X1,3);
	SetRegEx(0X18024,"T",0X1,3);
	SetRegEx(0X18036,"T",0X1,3);
	SetRegEx(0X1804A,"T",0X1,3);
	SetRegEx(0X1804E,"T",0X1,3);
	SetRegEx(0X1805C,"T",0X1,3);
	SetRegEx(0X18070,"T",0X1,3);
	SetRegEx(0X18096,"T",0X1,3);
	SetRegEx(0X1809C,"T",0X1,3);
	SetRegEx(0X180C2,"T",0X1,3);
	SetRegEx(0X180F0,"T",0X1,3);
	SetRegEx(0X180F2,"T",0X1,3);
	SetRegEx(0X180F6,"T",0X1,3);
	SetRegEx(0X180FA,"T",0X1,3);
	SetRegEx(0X18106,"T",0X1,3);
	SetRegEx(0X18110,"T",0X1,3);
	SetRegEx(0X18112,"T",0X1,3);
	SetRegEx(0X1813A,"T",0X1,3);
	SetRegEx(0X18156,"T",0X1,3);
	SetRegEx(0X18174,"T",0X1,3);
	SetRegEx(0X18186,"T",0X1,3);
	SetRegEx(0X181A2,"T",0X1,3);
	SetRegEx(0X181AE,"T",0X1,3);
	SetRegEx(0X181BC,"T",0X1,3);
	SetRegEx(0X181CE,"T",0X1,3);
	SetRegEx(0X181E0,"T",0X1,3);
	SetRegEx(0X18208,"T",0X1,3);
	SetRegEx(0X18210,"T",0X1,3);
	SetRegEx(0X18212,"T",0X1,3);
	SetRegEx(0X1821C,"T",0X1,3);
	SetRegEx(0X18226,"T",0X1,3);
	SetRegEx(0X1822C,"T",0X1,3);
	SetRegEx(0X1823C,"T",0X1,3);
	SetRegEx(0X18262,"T",0X1,3);
	SetRegEx(0X1826E,"T",0X1,3);
	SetRegEx(0X18276,"T",0X1,3);
	SetRegEx(0X18278,"T",0X1,3);
	SetRegEx(0X18282,"T",0X1,3);
	SetRegEx(0X182A4,"T",0X1,3);
	SetRegEx(0X182AA,"T",0X1,3);
	SetRegEx(0X182B2,"T",0X1,3);
	SetRegEx(0X182B6,"T",0X1,3);
	SetRegEx(0X182B8,"T",0X1,3);
	SetRegEx(0X182C6,"T",0X1,3);
	SetRegEx(0X182D4,"T",0X1,3);
	SetRegEx(0X18300,"T",0X1,3);
	SetRegEx(0X1831C,"T",0X1,3);
	SetRegEx(0X18334,"T",0X1,3);
	SetRegEx(0X18350,"T",0X1,3);
	SetRegEx(0X18386,"T",0X1,3);
	SetRegEx(0X183AA,"T",0X1,3);
	SetRegEx(0X183B0,"T",0X1,3);
	SetRegEx(0X183B8,"T",0X1,3);
	SetRegEx(0X183C0,"T",0X1,3);
	SetRegEx(0X18442,"T",0X1,3);
	SetRegEx(0X1844A,"T",0X1,3);
	SetRegEx(0X1845C,"T",0X1,3);
	SetRegEx(0X1845E,"T",0X1,3);
	SetRegEx(0X18480,"T",0X1,3);
	SetRegEx(0X1849E,"T",0X1,3);
	SetRegEx(0X184AA,"T",0X1,3);
	SetRegEx(0X184BE,"T",0X1,3);
	SetRegEx(0X184C6,"T",0X1,3);
	SetRegEx(0X184D0,"T",0X1,3);
	SetRegEx(0X184DE,"T",0X1,3);
	SetRegEx(0X184E2,"T",0X1,3);
	SetRegEx(0X184E6,"T",0X1,3);
	SetRegEx(0X184EE,"T",0X1,3);
	SetRegEx(0X184FC,"T",0X1,3);
	SetRegEx(0X184FE,"T",0X1,3);
	SetRegEx(0X18502,"T",0X1,3);
	SetRegEx(0X18508,"T",0X1,3);
	SetRegEx(0X1850A,"T",0X1,3);
	SetRegEx(0X1850E,"T",0X1,3);
	SetRegEx(0X1854E,"T",0X1,3);
	SetRegEx(0X18560,"T",0X1,3);
	SetRegEx(0X18572,"T",0X1,3);
	SetRegEx(0X18574,"T",0X1,3);
	SetRegEx(0X18582,"T",0X1,3);
	SetRegEx(0X18586,"T",0X1,3);
	SetRegEx(0X18592,"T",0X1,3);
	SetRegEx(0X185A0,"T",0X1,3);
	SetRegEx(0X185AA,"T",0X1,3);
	SetRegEx(0X185B2,"T",0X1,3);
	SetRegEx(0X185C0,"T",0X1,3);
	SetRegEx(0X185C6,"T",0X1,3);
	SetRegEx(0X185D0,"T",0X1,3);
	SetRegEx(0X185D6,"T",0X1,3);
	SetRegEx(0X185E2,"T",0X1,3);
	SetRegEx(0X185EE,"T",0X1,3);
	SetRegEx(0X18602,"T",0X1,3);
	SetRegEx(0X1860A,"T",0X1,3);
	SetRegEx(0X18632,"T",0X1,3);
	SetRegEx(0X1863C,"T",0X1,3);
	SetRegEx(0X18642,"T",0X1,3);
	SetRegEx(0X1864C,"T",0X1,3);
	SetRegEx(0X18658,"T",0X1,3);
	SetRegEx(0X18662,"T",0X1,3);
	SetRegEx(0X18664,"T",0X1,3);
	SetRegEx(0X1867A,"T",0X1,3);
	SetRegEx(0X18688,"T",0X1,3);
	SetRegEx(0X1868C,"T",0X1,3);
	SetRegEx(0X186A4,"T",0X1,3);
	SetRegEx(0X186CA,"T",0X1,3);
	SetRegEx(0X186D8,"T",0X1,3);
	SetRegEx(0X186DE,"T",0X1,3);
	SetRegEx(0X186E8,"T",0X1,3);
	SetRegEx(0X186F8,"T",0X1,3);
	SetRegEx(0X186FA,"T",0X1,3);
	SetRegEx(0X1871A,"T",0X1,3);
	SetRegEx(0X1871C,"T",0X1,3);
	SetRegEx(0X1872A,"T",0X1,3);
	SetRegEx(0X18734,"T",0X1,3);
	SetRegEx(0X18736,"T",0X1,3);
	SetRegEx(0X1873A,"T",0X1,3);
	SetRegEx(0X1873E,"T",0X1,3);
	SetRegEx(0X18748,"T",0X1,3);
	SetRegEx(0X18750,"T",0X1,3);
	SetRegEx(0X1875A,"T",0X1,3);
	SetRegEx(0X18768,"T",0X1,3);
	SetRegEx(0X18784,"T",0X1,3);
	SetRegEx(0X18786,"T",0X1,3);
	SetRegEx(0X18790,"T",0X1,3);
	SetRegEx(0X187A8,"T",0X1,3);
	SetRegEx(0X187B8,"T",0X1,3);
	SetRegEx(0X187BA,"T",0X1,3);
	SetRegEx(0X187C2,"T",0X1,3);
	SetRegEx(0X187D0,"T",0X1,3);
	SetRegEx(0X187EC,"T",0X1,3);
	SetRegEx(0X187FC,"T",0X1,3);
	SetRegEx(0X1880A,"T",0X1,3);
	SetRegEx(0X18818,"T",0X1,3);
	SetRegEx(0X1881A,"T",0X1,3);
	SetRegEx(0X18848,"T",0X1,3);
	SetRegEx(0X18852,"T",0X1,3);
	SetRegEx(0X18862,"T",0X1,3);
	SetRegEx(0X18870,"T",0X1,3);
	SetRegEx(0X18876,"T",0X1,3);
	SetRegEx(0X18882,"T",0X1,3);
	SetRegEx(0X18886,"T",0X1,3);
	SetRegEx(0X1888A,"T",0X1,3);
	SetRegEx(0X1889A,"T",0X1,3);
	SetRegEx(0X188A2,"T",0X1,3);
	SetRegEx(0X188AE,"T",0X1,3);
	SetRegEx(0X188B2,"T",0X1,3);
	SetRegEx(0X188B6,"T",0X1,3);
	SetRegEx(0X188C6,"T",0X1,3);
	SetRegEx(0X188D0,"T",0X1,3);
	SetRegEx(0X188E8,"T",0X1,3);
	SetRegEx(0X188FE,"T",0X1,3);
	SetRegEx(0X18918,"T",0X1,3);
	SetRegEx(0X1891A,"T",0X1,3);
	SetRegEx(0X1892E,"T",0X1,3);
	SetRegEx(0X18930,"T",0X1,3);
	SetRegEx(0X1893C,"T",0X1,3);
	SetRegEx(0X18940,"T",0X1,3);
	SetRegEx(0X1894A,"T",0X1,3);
	SetRegEx(0X18950,"T",0X1,3);
	SetRegEx(0X18952,"T",0X1,3);
	SetRegEx(0X1896C,"T",0X1,3);
	SetRegEx(0X18970,"T",0X1,3);
	SetRegEx(0X18996,"T",0X1,3);
	SetRegEx(0X1899E,"T",0X1,3);
	SetRegEx(0X189B8,"T",0X1,3);
	SetRegEx(0X189CA,"T",0X1,3);
	SetRegEx(0X189D0,"T",0X1,3);
	SetRegEx(0X189D6,"T",0X1,3);
	SetRegEx(0X189E8,"T",0X1,3);
	SetRegEx(0X189EC,"T",0X1,3);
	SetRegEx(0X189F4,"T",0X1,3);
	SetRegEx(0X18A14,"T",0X1,3);
	SetRegEx(0X18A1E,"T",0X1,3);
	SetRegEx(0X18A30,"T",0X1,3);
	SetRegEx(0X18A32,"T",0X1,3);
	SetRegEx(0X18A4A,"T",0X1,3);
	SetRegEx(0X18A5C,"T",0X1,3);
	SetRegEx(0X18A76,"T",0X1,3);
	SetRegEx(0X18A78,"T",0X1,3);
	SetRegEx(0X18A88,"T",0X1,3);
	SetRegEx(0X18A9A,"T",0X1,3);
	SetRegEx(0X18AB0,"T",0X1,3);
	SetRegEx(0X18AB8,"T",0X1,3);
	SetRegEx(0X18AC4,"T",0X1,3);
	SetRegEx(0X18AC8,"T",0X1,3);
	SetRegEx(0X18ADA,"T",0X1,3);
	SetRegEx(0X18AE6,"T",0X1,3);
	SetRegEx(0X18AF8,"T",0X1,3);
	SetRegEx(0X18B06,"T",0X1,3);
	SetRegEx(0X18B12,"T",0X1,3);
	SetRegEx(0X18B14,"T",0X1,3);
	SetRegEx(0X18B18,"T",0X1,3);
	SetRegEx(0X18B24,"T",0X1,3);
	SetRegEx(0X18B3A,"T",0X1,3);
	SetRegEx(0X18B42,"T",0X1,3);
	SetRegEx(0X18B46,"T",0X1,3);
	SetRegEx(0X18B66,"T",0X1,3);
	SetRegEx(0X18B70,"T",0X1,3);
	SetRegEx(0X18B7A,"T",0X1,3);
	SetRegEx(0X18B84,"T",0X1,3);
	SetRegEx(0X18B9A,"T",0X1,3);
	SetRegEx(0X18BAA,"T",0X1,3);
	SetRegEx(0X18BAC,"T",0X1,3);
	SetRegEx(0X18BD4,"T",0X1,3);
	SetRegEx(0X18BF4,"T",0X1,3);
	SetRegEx(0X18BF6,"T",0X1,3);
	SetRegEx(0X18C0A,"T",0X1,3);
	SetRegEx(0X18C10,"T",0X1,3);
	SetRegEx(0X18C14,"T",0X1,3);
	SetRegEx(0X18C20,"T",0X1,3);
	SetRegEx(0X18C24,"T",0X1,3);
	SetRegEx(0X18C2A,"T",0X1,3);
	SetRegEx(0X18C2E,"T",0X1,3);
	SetRegEx(0X18C36,"T",0X1,3);
	SetRegEx(0X18C44,"T",0X1,3);
	SetRegEx(0X18C88,"T",0X1,3);
	SetRegEx(0X18C8A,"T",0X1,3);
	SetRegEx(0X18C9A,"T",0X1,3);
	SetRegEx(0X18CB2,"T",0X1,3);
	SetRegEx(0X18CB6,"T",0X1,3);
	SetRegEx(0X18CC2,"T",0X1,3);
	SetRegEx(0X18CE0,"T",0X1,3);
	SetRegEx(0X18CF0,"T",0X1,3);
	SetRegEx(0X18CF4,"T",0X1,3);
	SetRegEx(0X18D0A,"T",0X1,3);
	SetRegEx(0X18D0E,"T",0X1,3);
	SetRegEx(0X18D20,"T",0X1,3);
	SetRegEx(0X18D44,"T",0X1,3);
	SetRegEx(0X18D5A,"T",0X1,3);
	SetRegEx(0X18D60,"T",0X1,3);
	SetRegEx(0X18D70,"T",0X1,3);
	SetRegEx(0X18D8A,"T",0X1,3);
	SetRegEx(0X18D8E,"T",0X1,3);
	SetRegEx(0X18D94,"T",0X1,3);
	SetRegEx(0X18D96,"T",0X1,3);
	SetRegEx(0X18DA8,"T",0X1,3);
	SetRegEx(0X18DBE,"T",0X1,3);
	SetRegEx(0X18DC4,"T",0X1,3);
	SetRegEx(0X18DC8,"T",0X1,3);
	SetRegEx(0X18DD2,"T",0X1,3);
	SetRegEx(0X18DF0,"T",0X1,3);
	SetRegEx(0X18E2C,"T",0X1,3);
	SetRegEx(0X18E64,"T",0X1,3);
	SetRegEx(0X18E6A,"T",0X1,3);
	SetRegEx(0X18E70,"T",0X1,3);
	SetRegEx(0X18E7A,"T",0X1,3);
	SetRegEx(0X18E98,"T",0X1,3);
	SetRegEx(0X18EA2,"T",0X1,3);
	SetRegEx(0X18EB0,"T",0X1,3);
	SetRegEx(0X18ED2,"T",0X1,3);
	SetRegEx(0X18ED8,"T",0X1,3);
	SetRegEx(0X18EDC,"T",0X1,3);
	SetRegEx(0X18EE2,"T",0X1,3);
	SetRegEx(0X18EF0,"T",0X1,3);
	SetRegEx(0X18F04,"T",0X1,3);
	SetRegEx(0X18F12,"T",0X1,3);
	SetRegEx(0X18F42,"T",0X1,3);
	SetRegEx(0X18F50,"T",0X1,3);
	SetRegEx(0X18F60,"T",0X1,3);
	SetRegEx(0X18F64,"T",0X1,3);
	SetRegEx(0X18F6E,"T",0X1,3);
	SetRegEx(0X18F7C,"T",0X1,3);
	SetRegEx(0X18F8C,"T",0X1,3);
	SetRegEx(0X18F94,"T",0X1,3);
	SetRegEx(0X18FAA,"T",0X1,3);
	SetRegEx(0X18FC6,"T",0X1,3);
	SetRegEx(0X18FC8,"T",0X1,3);
	SetRegEx(0X18FDC,"T",0X1,3);
	SetRegEx(0X18FDE,"T",0X1,3);
	SetRegEx(0X19008,"T",0X1,3);
	SetRegEx(0X19014,"T",0X1,3);
	SetRegEx(0X19016,"T",0X1,3);
	SetRegEx(0X1903A,"T",0X1,3);
	SetRegEx(0X1903C,"T",0X1,3);
	SetRegEx(0X1903E,"T",0X1,3);
	SetRegEx(0X1906A,"T",0X1,3);
	SetRegEx(0X19070,"T",0X1,3);
	SetRegEx(0X19072,"T",0X1,3);
	SetRegEx(0X19078,"T",0X1,3);
	SetRegEx(0X1907A,"T",0X1,3);
	SetRegEx(0X19088,"T",0X1,3);
	SetRegEx(0X19096,"T",0X1,3);
	SetRegEx(0X1909E,"T",0X1,3);
	SetRegEx(0X190BC,"T",0X1,3);
	SetRegEx(0X190DC,"T",0X1,3);
	SetRegEx(0X190F6,"T",0X1,3);
	SetRegEx(0X19108,"T",0X1,3);
	SetRegEx(0X19140,"T",0X1,3);
	SetRegEx(0X1914A,"T",0X1,3);
	SetRegEx(0X19166,"T",0X1,3);
	SetRegEx(0X19174,"T",0X1,3);
	SetRegEx(0X19178,"T",0X1,3);
	SetRegEx(0X1917E,"T",0X1,3);
	SetRegEx(0X19188,"T",0X1,3);
	SetRegEx(0X19190,"T",0X1,3);
	SetRegEx(0X191D4,"T",0X1,3);
	SetRegEx(0X191DA,"T",0X1,3);
	SetRegEx(0X191E2,"T",0X1,3);
	SetRegEx(0X191F2,"T",0X1,3);
	SetRegEx(0X191FA,"T",0X1,3);
	SetRegEx(0X19206,"T",0X1,3);
	SetRegEx(0X1921C,"T",0X1,3);
	SetRegEx(0X19228,"T",0X1,3);
	SetRegEx(0X1923C,"T",0X1,3);
	SetRegEx(0X19250,"T",0X1,3);
	SetRegEx(0X19254,"T",0X1,3);
	SetRegEx(0X1929C,"T",0X1,3);
	SetRegEx(0X192A4,"T",0X1,3);
	SetRegEx(0X192D0,"T",0X1,3);
	SetRegEx(0X192EC,"T",0X1,3);
	SetRegEx(0X192F8,"T",0X1,3);
	SetRegEx(0X192FE,"T",0X1,3);
	SetRegEx(0X19304,"T",0X1,3);
	SetRegEx(0X19306,"T",0X1,3);
	SetRegEx(0X19344,"T",0X1,3);
	SetRegEx(0X1938A,"T",0X1,3);
	SetRegEx(0X193EA,"T",0X1,3);
	SetRegEx(0X1968C,"T",0X1,3);
	SetRegEx(0X19724,"T",0X1,3);
	SetRegEx(0X19768,"T",0X1,3);
	SetRegEx(0X19778,"T",0X1,3);
	SetRegEx(0X1977C,"T",0X1,3);
	SetRegEx(0X19780,"T",0X1,3);
	SetRegEx(0X197BA,"T",0X1,3);
	SetRegEx(0X197C4,"T",0X1,3);
	SetRegEx(0X197CA,"T",0X1,3);
	SetRegEx(0X19818,"T",0X1,3);
	SetRegEx(0X1983E,"T",0X1,3);
	SetRegEx(0X19860,"T",0X1,3);
	SetRegEx(0X19866,"T",0X1,3);
	SetRegEx(0X19888,"T",0X1,3);
	SetRegEx(0X1988E,"T",0X1,3);
	SetRegEx(0X198B0,"T",0X1,3);
	SetRegEx(0X198B6,"T",0X1,3);
	SetRegEx(0X198D8,"T",0X1,3);
	SetRegEx(0X198DE,"T",0X1,3);
	SetRegEx(0X199E8,"T",0X1,3);
	SetRegEx(0X199F8,"T",0X1,3);
	SetRegEx(0X19A68,"T",0X1,3);
	SetRegEx(0X19ADE,"T",0X1,3);
	SetRegEx(0X19B24,"T",0X1,3);
	SetRegEx(0X19B44,"T",0X1,3);
	SetRegEx(0X19B5A,"T",0X1,3);
	SetRegEx(0X19BB8,"T",0X1,3);
	SetRegEx(0X19BDE,"T",0X1,3);
	SetRegEx(0X19BE6,"T",0X1,3);
	SetRegEx(0X19BEC,"T",0X1,3);
	SetRegEx(0X19BF4,"T",0X1,3);
	SetRegEx(0X19BF6,"T",0X1,3);
	SetRegEx(0X19C04,"T",0X1,3);
	SetRegEx(0X19C0A,"T",0X1,3);
	SetRegEx(0X19C10,"T",0X1,3);
	SetRegEx(0X19C12,"T",0X1,3);
	SetRegEx(0X19C1E,"T",0X1,3);
	SetRegEx(0X19C26,"T",0X1,3);
	SetRegEx(0X19C2A,"T",0X1,3);
	SetRegEx(0X19C40,"T",0X1,3);
	SetRegEx(0X19C68,"T",0X1,3);
	SetRegEx(0X19C70,"T",0X1,3);
	SetRegEx(0X19C7C,"T",0X1,3);
	SetRegEx(0X19C90,"T",0X1,3);
	SetRegEx(0X19C94,"T",0X1,3);
	SetRegEx(0X19C9A,"T",0X1,3);
	SetRegEx(0X19CA8,"T",0X1,3);
	SetRegEx(0X19CAC,"T",0X1,3);
	SetRegEx(0X19CB0,"T",0X1,3);
	SetRegEx(0X19CBC,"T",0X1,3);
	SetRegEx(0X19CDC,"T",0X1,3);
	SetRegEx(0X19CF0,"T",0X1,3);
	SetRegEx(0X19CFC,"T",0X1,3);
	SetRegEx(0X19D00,"T",0X1,3);
	SetRegEx(0X19D16,"T",0X1,3);
	SetRegEx(0X19D1A,"T",0X1,3);
	SetRegEx(0X19D2A,"T",0X1,3);
	SetRegEx(0X19D2E,"T",0X1,3);
	SetRegEx(0X19D3C,"T",0X1,3);
	SetRegEx(0X19D66,"T",0X1,3);
	SetRegEx(0X19D6A,"T",0X1,3);
	SetRegEx(0X19D6C,"T",0X1,3);
	SetRegEx(0X19D7C,"T",0X1,3);
	SetRegEx(0X19DA8,"T",0X1,3);
	SetRegEx(0X19DB8,"T",0X1,3);
	SetRegEx(0X19DD4,"T",0X1,3);
	SetRegEx(0X19DE0,"T",0X1,3);
	SetRegEx(0X19DF0,"T",0X1,3);
	SetRegEx(0X19E02,"T",0X1,3);
	SetRegEx(0X19E28,"T",0X1,3);
	SetRegEx(0X19E2C,"T",0X1,3);
	SetRegEx(0X19E30,"T",0X1,3);
	SetRegEx(0X19E34,"T",0X1,3);
	SetRegEx(0X19E38,"T",0X1,3);
	SetRegEx(0X19E4E,"T",0X1,3);
	SetRegEx(0X19E52,"T",0X1,3);
	SetRegEx(0X19E6E,"T",0X1,3);
	SetRegEx(0X19E70,"T",0X1,3);
	SetRegEx(0X19E72,"T",0X1,3);
	SetRegEx(0X19E7A,"T",0X1,3);
	SetRegEx(0X19E7E,"T",0X1,3);
	SetRegEx(0X19E88,"T",0X1,3);
	SetRegEx(0X19E9A,"T",0X1,3);
	SetRegEx(0X19EAE,"T",0X1,3);
	SetRegEx(0X19EC6,"T",0X1,3);
	SetRegEx(0X19ED2,"T",0X1,3);
	SetRegEx(0X19ED4,"T",0X1,3);
	SetRegEx(0X19ED8,"T",0X1,3);
	SetRegEx(0X19EE4,"T",0X1,3);
	SetRegEx(0X19EFE,"T",0X1,3);
	SetRegEx(0X19F02,"T",0X1,3);
	SetRegEx(0X19F1A,"T",0X1,3);
	SetRegEx(0X19F2A,"T",0X1,3);
	SetRegEx(0X19F38,"T",0X1,3);
	SetRegEx(0X19F5E,"T",0X1,3);
	SetRegEx(0X19F7E,"T",0X1,3);
	SetRegEx(0X19F84,"T",0X1,3);
	SetRegEx(0X19FB6,"T",0X1,3);
	SetRegEx(0X19FDA,"T",0X1,3);
	SetRegEx(0X19FDC,"T",0X1,3);
	SetRegEx(0X19FDE,"T",0X1,3);
	SetRegEx(0X19FF0,"T",0X1,3);
	SetRegEx(0X1A018,"T",0X1,3);
	SetRegEx(0X1A042,"T",0X1,3);
	SetRegEx(0X1A072,"T",0X1,3);
	SetRegEx(0X1A088,"T",0X1,3);
	SetRegEx(0X1A090,"T",0X1,3);
	SetRegEx(0X1A0A6,"T",0X1,3);
	SetRegEx(0X1A0BC,"T",0X1,3);
	SetRegEx(0X1A0C6,"T",0X1,3);
	SetRegEx(0X1A11A,"T",0X1,3);
	SetRegEx(0X1A19E,"T",0X1,3);
	SetRegEx(0X1A1C0,"T",0X1,3);
	SetRegEx(0X1A1EC,"T",0X1,3);
	SetRegEx(0X1A20C,"T",0X1,3);
	SetRegEx(0X1A218,"T",0X1,3);
	SetRegEx(0X1A24C,"T",0X1,3);
	SetRegEx(0X1A250,"T",0X1,3);
	SetRegEx(0X1A254,"T",0X1,3);
	SetRegEx(0X1A256,"T",0X1,3);
	SetRegEx(0X1A348,"T",0X1,3);
	SetRegEx(0X1A3A0,"T",0X1,3);
	SetRegEx(0X1A3C4,"T",0X1,3);
	SetRegEx(0X1A43E,"T",0X1,3);
	SetRegEx(0X1A49C,"T",0X1,3);
	SetRegEx(0X1A4B6,"T",0X1,3);
	SetRegEx(0X1A4D2,"T",0X1,3);
	SetRegEx(0X1A502,"T",0X1,3);
	SetRegEx(0X1A522,"T",0X1,3);
	SetRegEx(0X1A548,"T",0X1,3);
	SetRegEx(0X1A574,"T",0X1,3);
	SetRegEx(0X1A5FE,"T",0X1,3);
	SetRegEx(0X1A634,"T",0X1,3);
	SetRegEx(0X1A644,"T",0X1,3);
	SetRegEx(0X1A64A,"T",0X1,3);
	SetRegEx(0X1A64E,"T",0X1,3);
	SetRegEx(0X1A65A,"T",0X1,3);
	SetRegEx(0X1A668,"T",0X1,3);
	SetRegEx(0X1A678,"T",0X1,3);
	SetRegEx(0X1A682,"T",0X1,3);
	SetRegEx(0X1A688,"T",0X1,3);
	SetRegEx(0X1A690,"T",0X1,3);
	SetRegEx(0X1A6A0,"T",0X1,3);
	SetRegEx(0X1A6F6,"T",0X1,3);
	SetRegEx(0X1A718,"T",0X1,3);
	SetRegEx(0X1A728,"T",0X1,3);
	SetRegEx(0X1A73E,"T",0X1,3);
	SetRegEx(0X1A748,"T",0X1,3);
	SetRegEx(0X1A74C,"T",0X1,3);
	SetRegEx(0X1A778,"T",0X1,3);
	SetRegEx(0X1A77A,"T",0X1,3);
	SetRegEx(0X1A782,"T",0X1,3);
	SetRegEx(0X1A7B4,"T",0X1,3);
	SetRegEx(0X1A7BC,"T",0X1,3);
	SetRegEx(0X1A7CC,"T",0X1,3);
	SetRegEx(0X1A7D8,"T",0X1,3);
	SetRegEx(0X1A7E8,"T",0X1,3);
	SetRegEx(0X1A81E,"T",0X1,3);
	SetRegEx(0X1A840,"T",0X1,3);
	SetRegEx(0X1A896,"T",0X1,3);
	SetRegEx(0X1A8AC,"T",0X1,3);
	SetRegEx(0X1A8B4,"T",0X1,3);
	SetRegEx(0X1A8CE,"T",0X1,3);
	SetRegEx(0X1A8D8,"T",0X1,3);
	SetRegEx(0X1A8F8,"T",0X1,3);
	SetRegEx(0X1A90C,"T",0X1,3);
	SetRegEx(0X1A916,"T",0X1,3);
	SetRegEx(0X1A9A2,"T",0X1,3);
	SetRegEx(0X1AA16,"T",0X1,3);
	SetRegEx(0X1AA28,"T",0X1,3);
	SetRegEx(0X1AB3C,"T",0X1,3);
	SetRegEx(0X1AB64,"T",0X1,3);
	SetRegEx(0X1ABBA,"T",0X1,3);
	SetRegEx(0X1AC10,"T",0X1,3);
	SetRegEx(0X1AC2A,"T",0X1,3);
	SetRegEx(0X1AC34,"T",0X1,3);
	SetRegEx(0X1AC52,"T",0X1,3);
	SetRegEx(0X1AC64,"T",0X1,3);
	SetRegEx(0X1AC72,"T",0X1,3);
	SetRegEx(0X1ACF4,"T",0X1,3);
	SetRegEx(0X1AD04,"T",0X1,3);
	SetRegEx(0X1ADB8,"T",0X1,3);
	SetRegEx(0X1AE00,"T",0X1,3);
	SetRegEx(0X1AE02,"T",0X1,3);
	SetRegEx(0X1AE20,"T",0X1,3);
	SetRegEx(0X1AE32,"T",0X1,3);
	SetRegEx(0X1AE50,"T",0X1,3);
	SetRegEx(0X1AE62,"T",0X1,3);
	SetRegEx(0X1AEA8,"T",0X1,3);
	SetRegEx(0X1AEFA,"T",0X1,3);
	SetRegEx(0X1AF04,"T",0X1,3);
	SetRegEx(0X1AF0E,"T",0X1,3);
	SetRegEx(0X1AF12,"T",0X1,3);
	SetRegEx(0X1AF32,"T",0X1,3);
	SetRegEx(0X1AF42,"T",0X1,3);
	SetRegEx(0X1AF84,"T",0X1,3);
	SetRegEx(0X1AF96,"T",0X1,3);
	SetRegEx(0X1AF9E,"T",0X1,3);
	SetRegEx(0X1AFB4,"T",0X1,3);
	SetRegEx(0X1AFC4,"T",0X1,3);
	SetRegEx(0X1AFD8,"T",0X1,3);
	SetRegEx(0X1B010,"T",0X1,3);
	SetRegEx(0X1B020,"T",0X1,3);
	SetRegEx(0X1B02E,"T",0X1,3);
	SetRegEx(0X1B044,"T",0X1,3);
	SetRegEx(0X1B058,"T",0X1,3);
	SetRegEx(0X1B066,"T",0X1,3);
	SetRegEx(0X1B07A,"T",0X1,3);
	SetRegEx(0X1B082,"T",0X1,3);
	SetRegEx(0X1B0A8,"T",0X1,3);
	SetRegEx(0X1B0B8,"T",0X1,3);
	SetRegEx(0X1B0D8,"T",0X1,3);
	SetRegEx(0X1B0E0,"T",0X1,3);
	SetRegEx(0X1B0FA,"T",0X1,3);
	SetRegEx(0X1B10C,"T",0X1,3);
	SetRegEx(0X1B118,"T",0X1,3);
	SetRegEx(0X1B122,"T",0X1,3);
	SetRegEx(0X1B12E,"T",0X1,3);
	SetRegEx(0X1B138,"T",0X1,3);
	SetRegEx(0X1B16E,"T",0X1,3);
	SetRegEx(0X1B174,"T",0X1,3);
	SetRegEx(0X1B188,"T",0X1,3);
	SetRegEx(0X1B198,"T",0X1,3);
	SetRegEx(0X1B1A4,"T",0X1,3);
	SetRegEx(0X1B1AE,"T",0X1,3);
	SetRegEx(0X1B1B8,"T",0X1,3);
	SetRegEx(0X1B1DE,"T",0X1,3);
	SetRegEx(0X1B1F6,"T",0X1,3);
	SetRegEx(0X1B256,"T",0X1,3);
	SetRegEx(0X1B258,"T",0X1,3);
	SetRegEx(0X1B2A8,"T",0X1,3);
	SetRegEx(0X1B2C0,"T",0X1,3);
	SetRegEx(0X1B310,"T",0X1,3);
	SetRegEx(0X1B338,"T",0X1,3);
	SetRegEx(0X1B33C,"T",0X1,3);
	SetRegEx(0X1B34E,"T",0X1,3);
	SetRegEx(0X1B5A4,"T",0X1,3);
	SetRegEx(0X1B622,"T",0X1,3);
	SetRegEx(0X1B63A,"T",0X1,3);
	SetRegEx(0X1B666,"T",0X1,3);
	SetRegEx(0X1B6C2,"T",0X1,3);
	SetRegEx(0X1B78C,"T",0X1,3);
	SetRegEx(0X1B866,"T",0X1,3);
	SetRegEx(0X1B880,"T",0X1,3);
	SetRegEx(0X1B896,"T",0X1,3);
	SetRegEx(0X1B8AE,"T",0X1,3);
	SetRegEx(0X1B8B0,"T",0X1,3);
	SetRegEx(0X1B8B8,"T",0X1,3);
	SetRegEx(0X1B8DC,"T",0X1,3);
	SetRegEx(0X1B8E4,"T",0X1,3);
	SetRegEx(0X1B8EE,"T",0X1,3);
	SetRegEx(0X1B8F6,"T",0X1,3);
	SetRegEx(0X1B906,"T",0X1,3);
	SetRegEx(0X1B920,"T",0X1,3);
	SetRegEx(0X1B964,"T",0X1,3);
	SetRegEx(0X1B96C,"T",0X1,3);
	SetRegEx(0X1B988,"T",0X1,3);
	SetRegEx(0X1B998,"T",0X1,3);
	SetRegEx(0X1B9B4,"T",0X1,3);
	SetRegEx(0X1B9C4,"T",0X1,3);
	SetRegEx(0X1B9F4,"T",0X1,3);
	SetRegEx(0X1BA08,"T",0X1,3);
	SetRegEx(0X1BA0E,"T",0X1,3);
	SetRegEx(0X1BA28,"T",0X1,3);
	SetRegEx(0X1BA38,"T",0X1,3);
	SetRegEx(0X1BA4C,"T",0X1,3);
	SetRegEx(0X1BAA4,"T",0X1,3);
	SetRegEx(0X1BABC,"T",0X1,3);
	SetRegEx(0X1BAC8,"T",0X1,3);
	SetRegEx(0X1BADC,"T",0X1,3);
	SetRegEx(0X1BB06,"T",0X1,3);
	SetRegEx(0X1BB34,"T",0X1,3);
	SetRegEx(0X1BB4C,"T",0X1,3);
	SetRegEx(0X1BB64,"T",0X1,3);
	SetRegEx(0X1BB78,"T",0X1,3);
	SetRegEx(0X1BB88,"T",0X1,3);
	SetRegEx(0X1BBA0,"T",0X1,3);
	SetRegEx(0X1BCA6,"T",0X1,3);
	SetRegEx(0X1BCC0,"T",0X1,3);
	SetRegEx(0X1BCD4,"T",0X1,3);
	SetRegEx(0X1BCE6,"T",0X1,3);
	SetRegEx(0X1BD38,"T",0X1,3);
	SetRegEx(0X1BD4A,"T",0X1,3);
	SetRegEx(0X1BD5C,"T",0X1,3);
	SetRegEx(0X1BD68,"T",0X1,3);
	SetRegEx(0X1BD82,"T",0X1,3);
	SetRegEx(0X1BD90,"T",0X1,3);
	SetRegEx(0X1BDB2,"T",0X1,3);
	SetRegEx(0X1BDBA,"T",0X1,3);
	SetRegEx(0X1BE50,"T",0X1,3);
	SetRegEx(0X1BE70,"T",0X1,3);
	SetRegEx(0X1BE82,"T",0X1,3);
	SetRegEx(0X1BE86,"T",0X1,3);
	SetRegEx(0X1BE9E,"T",0X1,3);
	SetRegEx(0X1BEB2,"T",0X1,3);
	SetRegEx(0X1BEBA,"T",0X1,3);
	SetRegEx(0X1BEC8,"T",0X1,3);
	SetRegEx(0X1BEFA,"T",0X1,3);
	SetRegEx(0X1BF0C,"T",0X1,3);
	SetRegEx(0X1BF16,"T",0X1,3);
	SetRegEx(0X1BF28,"T",0X1,3);
	SetRegEx(0X1BF4E,"T",0X1,3);
	SetRegEx(0X1BF64,"T",0X1,3);
	SetRegEx(0X1BF6A,"T",0X1,3);
	SetRegEx(0X1BF70,"T",0X1,3);
	SetRegEx(0X1BF82,"T",0X1,3);
	SetRegEx(0X1BFAA,"T",0X1,3);
	SetRegEx(0X1BFB0,"T",0X1,3);
	SetRegEx(0X1BFD0,"T",0X1,3);
	SetRegEx(0X1BFD8,"T",0X1,3);
	SetRegEx(0X1BFF8,"T",0X1,3);
	SetRegEx(0X1C00A,"T",0X1,3);
	SetRegEx(0X1C00E,"T",0X1,3);
	SetRegEx(0X1C026,"T",0X1,3);
	SetRegEx(0X1C03A,"T",0X1,3);
	SetRegEx(0X1C050,"T",0X1,3);
	SetRegEx(0X1C0D4,"T",0X1,3);
	SetRegEx(0X1C0EA,"T",0X1,3);
	SetRegEx(0X1C10E,"T",0X1,3);
	SetRegEx(0X1C118,"T",0X1,3);
	SetRegEx(0X1C14A,"T",0X1,3);
	SetRegEx(0X1C168,"T",0X1,3);
	SetRegEx(0X1C182,"T",0X1,3);
	SetRegEx(0X1C18A,"T",0X1,3);
	SetRegEx(0X1C194,"T",0X1,3);
	SetRegEx(0X1C1A4,"T",0X1,3);
	SetRegEx(0X1C1C0,"T",0X1,3);
	SetRegEx(0X1C1E6,"T",0X1,3);
	SetRegEx(0X1C1EC,"T",0X1,3);
	SetRegEx(0X1C1F0,"T",0X1,3);
	SetRegEx(0X1C210,"T",0X1,3);
	SetRegEx(0X1C240,"T",0X1,3);
	SetRegEx(0X1C24C,"T",0X1,3);
	SetRegEx(0X1C26C,"T",0X1,3);
	SetRegEx(0X1C27E,"T",0X1,3);
	SetRegEx(0X1C282,"T",0X1,3);
	SetRegEx(0X1C29A,"T",0X1,3);
	SetRegEx(0X1C2AE,"T",0X1,3);
	SetRegEx(0X1C2B8,"T",0X1,3);
	SetRegEx(0X1C2D0,"T",0X1,3);
	SetRegEx(0X1C2FE,"T",0X1,3);
	SetRegEx(0X1C3FA,"T",0X1,3);
	SetRegEx(0X1C434,"T",0X1,3);
	SetRegEx(0X1C456,"T",0X1,3);
	SetRegEx(0X1C466,"T",0X1,3);
	SetRegEx(0X1C47E,"T",0X1,3);
	SetRegEx(0X1C48C,"T",0X1,3);
	SetRegEx(0X1C49C,"T",0X1,3);
	SetRegEx(0X1C4AC,"T",0X1,3);
	SetRegEx(0X1C4C4,"T",0X1,3);
	SetRegEx(0X1C51C,"T",0X1,3);
	SetRegEx(0X1C542,"T",0X1,3);
	SetRegEx(0X1C566,"T",0X1,3);
	SetRegEx(0X1C570,"T",0X1,3);
	SetRegEx(0X1C5AA,"T",0X1,3);
	SetRegEx(0X1C5D2,"T",0X1,3);
	SetRegEx(0X1C5F2,"T",0X1,3);
	SetRegEx(0X1C5FE,"T",0X1,3);
	SetRegEx(0X1C608,"T",0X1,3);
	SetRegEx(0X1C60E,"T",0X1,3);
	SetRegEx(0X1C61E,"T",0X1,3);
	SetRegEx(0X1C624,"T",0X1,3);
	SetRegEx(0X1C63E,"T",0X1,3);
	SetRegEx(0X1C654,"T",0X1,3);
	SetRegEx(0X1C670,"T",0X1,3);
	SetRegEx(0X1C698,"T",0X1,3);
	SetRegEx(0X1C6C8,"T",0X1,3);
	SetRegEx(0X1C6D6,"T",0X1,3);
	SetRegEx(0X1C730,"T",0X1,3);
	SetRegEx(0X1C744,"T",0X1,3);
	SetRegEx(0X1C74C,"T",0X1,3);
	SetRegEx(0X1C76E,"T",0X1,3);
	SetRegEx(0X1C780,"T",0X1,3);
	SetRegEx(0X1C78C,"T",0X1,3);
	SetRegEx(0X1C798,"T",0X1,3);
	SetRegEx(0X1C7B0,"T",0X1,3);
	SetRegEx(0X1C85E,"T",0X1,3);
	SetRegEx(0X1C8BC,"T",0X1,3);
	SetRegEx(0X1C8C4,"T",0X1,3);
	SetRegEx(0X1C8D4,"T",0X1,3);
	SetRegEx(0X1C8FA,"T",0X1,3);
	SetRegEx(0X1C90C,"T",0X1,3);
	SetRegEx(0X1C912,"T",0X1,3);
	SetRegEx(0X1C91E,"T",0X1,3);
	SetRegEx(0X1C934,"T",0X1,3);
	SetRegEx(0X1C950,"T",0X1,3);
	SetRegEx(0X1C96C,"T",0X1,3);
	SetRegEx(0X1C982,"T",0X1,3);
	SetRegEx(0X1C996,"T",0X1,3);
	SetRegEx(0X1C9A4,"T",0X1,3);
	SetRegEx(0X1C9AC,"T",0X1,3);
	SetRegEx(0X1C9DA,"T",0X1,3);
	SetRegEx(0X1C9DC,"T",0X1,3);
	SetRegEx(0X1CA00,"T",0X1,3);
	SetRegEx(0X1CA04,"T",0X1,3);
	SetRegEx(0X1CA1C,"T",0X1,3);
	SetRegEx(0X1CA2E,"T",0X1,3);
	SetRegEx(0X1CA32,"T",0X1,3);
	SetRegEx(0X1CA42,"T",0X1,3);
	SetRegEx(0X1CA56,"T",0X1,3);
	SetRegEx(0X1CA6C,"T",0X1,3);
	SetRegEx(0X1CB00,"T",0X1,3);
	SetRegEx(0X1CB14,"T",0X1,3);
	SetRegEx(0X1CB34,"T",0X1,3);
	SetRegEx(0X1CB52,"T",0X1,3);
	SetRegEx(0X1CB5A,"T",0X1,3);
	SetRegEx(0X1CB64,"T",0X1,3);
	SetRegEx(0X1CB6E,"T",0X1,3);
	SetRegEx(0X1CB88,"T",0X1,3);
	SetRegEx(0X1CBAC,"T",0X1,3);
	SetRegEx(0X1CBB2,"T",0X1,3);
	SetRegEx(0X1CBB6,"T",0X1,3);
	SetRegEx(0X1CBD6,"T",0X1,3);
	SetRegEx(0X1CBFA,"T",0X1,3);
	SetRegEx(0X1CC04,"T",0X1,3);
	SetRegEx(0X1CC18,"T",0X1,3);
	SetRegEx(0X1CC26,"T",0X1,3);
	SetRegEx(0X1CC34,"T",0X1,3);
	SetRegEx(0X1CC82,"T",0X1,3);
	SetRegEx(0X1CC9A,"T",0X1,3);
	SetRegEx(0X1CCAA,"T",0X1,3);
	SetRegEx(0X1CCD0,"T",0X1,3);
	SetRegEx(0X1CCD6,"T",0X1,3);
	SetRegEx(0X1CCE2,"T",0X1,3);
	SetRegEx(0X1CCF2,"T",0X1,3);
	SetRegEx(0X1CD02,"T",0X1,3);
	SetRegEx(0X1CD06,"T",0X1,3);
	SetRegEx(0X1CD30,"T",0X1,3);
	SetRegEx(0X1CD3C,"T",0X1,3);
	SetRegEx(0X1CD54,"T",0X1,3);
	SetRegEx(0X1CD6A,"T",0X1,3);
	SetRegEx(0X1CDA8,"T",0X1,3);
	SetRegEx(0X1CDB2,"T",0X1,3);
	SetRegEx(0X1CDC6,"T",0X1,3);
	SetRegEx(0X1CDFA,"T",0X1,3);
	SetRegEx(0X1CE00,"T",0X1,3);
	SetRegEx(0X1CE12,"T",0X1,3);
	SetRegEx(0X1CE16,"T",0X1,3);
	SetRegEx(0X1CE1A,"T",0X1,3);
	SetRegEx(0X1CE1E,"T",0X1,3);
	SetRegEx(0X1CE32,"T",0X1,3);
	SetRegEx(0X1CE48,"T",0X1,3);
	SetRegEx(0X1CE50,"T",0,3);
	SetRegEx(0X1CEA8,"T",0X1,3);
	SetRegEx(0X2580C,"T",0X1,3);
	SetRegEx(0X25810,"T",0X1,3);
	SetRegEx(0X25830,"T",0X1,3);
	SetRegEx(0X25870,"T",0X1,3);
	SetRegEx(0X2591C,"T",0X1,3);
	SetRegEx(0X25954,"T",0X1,3);
	SetRegEx(0X25956,"T",0X1,3);
	SetRegEx(0X25A2E,"T",0X1,3);
	SetRegEx(0X10000000,"T",0,3);
	SetRegEx(0X40000000,"T",0,3);
	SetRegEx(0XE0000000,"T",0,3);
	SetRegEx(0,"DS",0,3);
	SetRegEx(0X1CE50,"DS",0X2,3);
	SetRegEx(0X10000000,"DS",0X2,3);
	SetRegEx(0X40000000,"DS",0X2,3);
	SetRegEx(0XE0000000,"DS",0X2,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
	Bytes_3();
	Bytes_4();
	Bytes_5();
        EndTypeUpdating(UTP_STRUCT);
}

// End of file.
